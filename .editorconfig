root = true

[*.{cs, cshtml}]
charset = utf-8
indent_style = space
indent_size = 4
max_line_length = 200
insert_final_newline = true

[*.{js, ts, vue}]
indent_style = space
indent_size = 4
insert_final_newline = true
max_line_length = 200

[*.{json, xml, yml, yaml}]
indent_style = space
indent_size = 2
insert_final_newline = true
max_line_length = 200

[*]
#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# Expression-level preferences
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_throw_expression = true:warning
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = non_public:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = true:suggestion
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true:warning

# Modifier preferences
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, static, readonly, override, extern, unsafe, volatile, async:suggestion

# Code-block preferences
csharp_prefer_braces = true:none
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion

# 'using' directive preferences

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = false
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = no_change
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = expressions
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.type_parameter_should_be_begins_with_t.severity = suggestion
dotnet_naming_rule.type_parameter_should_be_begins_with_t.symbols = type_parameter
dotnet_naming_rule.type_parameter_should_be_begins_with_t.style = begins_with_t

dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = local
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case

dotnet_naming_rule.static_field_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.static_field_should_be_pascal_case.symbols = static_field
dotnet_naming_rule.static_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.const_field_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.const_field_should_be_pascal_case.symbols = const_field
dotnet_naming_rule.const_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_field_members_should_be_underscore_camel_case.severity = suggestion
dotnet_naming_rule.private_field_members_should_be_underscore_camel_case.symbols = private_field
dotnet_naming_rule.private_field_members_should_be_underscore_camel_case.style = _camel_case

dotnet_naming_rule.field_should_be_camel_case.severity = suggestion
dotnet_naming_rule.field_should_be_camel_case.symbols = field
dotnet_naming_rule.field_should_be_camel_case.style = camel_case

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.local.applicable_kinds = local, local_function
dotnet_naming_symbols.local.applicable_accessibilities = *
dotnet_naming_symbols.local.required_modifiers =
dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *
dotnet_naming_symbols.type_parameter.required_modifiers =
dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, delegate
dotnet_naming_symbols.types.applicable_accessibilities = *
dotnet_naming_symbols.types.required_modifiers =
dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
dotnet_naming_symbols.non_field_members.required_modifiers =
dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_field.required_modifiers =
dotnet_naming_symbols.field.applicable_kinds = field
dotnet_naming_symbols.field.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.field.required_modifiers =
dotnet_naming_symbols.static_field.applicable_kinds = field
dotnet_naming_symbols.static_field.applicable_accessibilities =
dotnet_naming_symbols.static_field.required_modifiers = static

dotnet_naming_symbols.const_field.applicable_kinds = field
dotnet_naming_symbols.const_field.applicable_accessibilities = *
dotnet_naming_symbols.const_field.required_modifiers = const

# Naming styles

# dotnet_naming_style.pascal_case.required_prefix =
# dotnet_naming_style.pascal_case.required_suffix =
# dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

# dotnet_naming_style.camel_case.required_prefix =
# dotnet_naming_style.camel_case.required_suffix =
# dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style._camel_case.required_prefix = _
# dotnet_naming_style._camel_case.required_suffix =
# dotnet_naming_style._camel_case.word_separator =
dotnet_naming_style._camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_i.required_prefix = I
# dotnet_naming_style.begins_with_i.required_suffix =
# dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with_t.required_prefix = T
# dotnet_naming_style.begins_with_t.required_suffix =
# dotnet_naming_style.begins_with_t.word_separator =
dotnet_naming_style.begins_with_t.capitalization = pascal_case

dotnet_diagnostic.ide0058.severity = none
dotnet_diagnostic.cs0436.severity = none
dotnet_diagnostic.RCS1008.severity = none

# CodeQuality
# CA1000: Do not declare static members on generic types
# dotnet_diagnostic.CA1000.severity = warning

# CA1001: Types that own disposable fields should be disposable
# dotnet_diagnostic.CA1001.severity = warning

# CA1003: Use generic event handler instances
# dotnet_diagnostic.CA1003.severity = none

# CA1008: Enums should have zero value
# dotnet_diagnostic.CA1008.severity = none

# CA1010: Collections should implement generic interface
# dotnet_diagnostic.CA1010.severity = warning

# CA1012: Abstract types should not have constructors
# dotnet_diagnostic.CA1012.severity = none

# CA1014: Mark assemblies with CLSCompliant
# dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with assembly version
# dotnet_diagnostic.CA1016.severity = warning

# CA1017: Mark assemblies with ComVisible
# dotnet_diagnostic.CA1017.severity = none

# CA1018: Mark attributes with AttributeUsageAttribute
# dotnet_diagnostic.CA1018.severity = warning

# CA1019: Define accessors for attribute arguments
# dotnet_diagnostic.CA1019.severity = none

# CA1024: Use properties where appropriate
# dotnet_diagnostic.CA1024.severity = none

# CA1027: Mark enums with FlagsAttribute
# dotnet_diagnostic.CA1027.severity = none

# CA1028: Enum Storage should be Int32
# dotnet_diagnostic.CA1028.severity = warning

# CA1030: Use events where appropriate
# dotnet_diagnostic.CA1030.severity = warning

# CA1031: Do not catch general exception types
# dotnet_diagnostic.CA1031.severity = warning

# CA1032: Implement standard exception constructors
# dotnet_diagnostic.CA1032.severity = warning

# CA1033: Interface methods should be callable by child types
# dotnet_diagnostic.CA1033.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1036: Override methods on comparable types
# dotnet_diagnostic.CA1036.severity = warning

# CA1040: Avoid empty interfaces
# dotnet_diagnostic.CA1040.severity = warning

# CA1041: Provide ObsoleteAttribute message
# dotnet_diagnostic.CA1041.severity = warning

# CA1043: Use Integral Or String Argument For Indexers
# dotnet_diagnostic.CA1043.severity = warning

# CA1044: Properties should not be write only
# dotnet_diagnostic.CA1044.severity = warning

# CA1050: Declare types in namespaces
# dotnet_diagnostic.CA1050.severity = none

# CA1051: Do not declare visible instance fields
# dotnet_diagnostic.CA1051.severity = warning

# CA1052: Static holder types should be Static or NotInheritable
# dotnet_diagnostic.CA1052.severity = warning

# CA1054: Uri parameters should not be strings
# dotnet_diagnostic.CA1054.severity = warning

# CA1055: Uri return values should not be strings
# dotnet_diagnostic.CA1055.severity = warning

# CA1056: Uri properties should not be strings
# dotnet_diagnostic.CA1056.severity = warning

# CA1060: Move pinvokes to native methods class
# dotnet_diagnostic.CA1060.severity = none

# CA1061: Do not hide base class methods
# dotnet_diagnostic.CA1061.severity = warning

# CA1062: Validate arguments of public methods
dotnet_diagnostic.ca1062.severity = none

# CA1063: Implement IDisposable Correctly
# dotnet_diagnostic.CA1063.severity = none

# CA1064: Exceptions should be public
# dotnet_diagnostic.CA1064.severity = warning

# CA1065: Do not raise exceptions in unexpected locations
# dotnet_diagnostic.CA1065.severity = warning

# CA1066: Type {0} should implement IEquatable<T> because it overrides Equals
# dotnet_diagnostic.CA1066.severity = warning

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
# dotnet_diagnostic.CA1067.severity = warning

# CA1068: CancellationToken parameters must come last
# dotnet_diagnostic.CA1068.severity = warning

# CA1200: Avoid using cref tags with a prefix
# dotnet_diagnostic.CA1200.severity = warning

# CA1501: Avoid excessive inheritance
# dotnet_diagnostic.CA1501.severity = none

# CA1502: Avoid excessive complexity
# dotnet_diagnostic.CA1502.severity = none

# CA1505: Avoid unmaintainable code
# dotnet_diagnostic.CA1505.severity = none

# CA1506: Avoid excessive class coupling
# dotnet_diagnostic.CA1506.severity = none

# CA1507: Use nameof to express symbol names
# dotnet_diagnostic.CA1507.severity = warning

# CA1508: Avoid dead conditional code
# dotnet_diagnostic.CA1508.severity = none

# CA1509: Invalid entry in code metrics rule specification file
# dotnet_diagnostic.CA1509.severity = none

# CA1707: Identifiers should not contain underscores
# dotnet_diagnostic.CA1707.severity = none

# CA1708: Identifiers should differ by more than case
# dotnet_diagnostic.CA1708.severity = none

# CA1710: Identifiers should have correct suffix
# dotnet_diagnostic.CA1710.severity = warning

# CA1711: Identifiers should not have incorrect suffix
# dotnet_diagnostic.CA1711.severity = none

# CA1712: Do not prefix enum values with type name
# dotnet_diagnostic.CA1712.severity = warning

# CA1714: Flags enums should have plural names
# dotnet_diagnostic.CA1714.severity = warning

# CA1715: Identifiers should have correct prefix
# dotnet_diagnostic.CA1715.severity = warning

# CA1716: Identifiers should not match keywords
# dotnet_diagnostic.CA1716.severity = warning

# CA1717: Only FlagsAttribute enums should have plural names
# dotnet_diagnostic.CA1717.severity = warning

# CA1720: Identifier contains type name
# dotnet_diagnostic.CA1720.severity = warning

# CA1721: Property names should not match get methods
# dotnet_diagnostic.CA1721.severity = warning

# CA1724: Type names should not match namespaces
# dotnet_diagnostic.CA1724.severity = warning

# CA1725: Parameter names should match base declaration
# dotnet_diagnostic.CA1725.severity = none

# CA1801: Review unused parameters
# dotnet_diagnostic.CA1801.severity = warning

# CA1802: Use literals where appropriate
# dotnet_diagnostic.CA1802.severity = warning

# CA1806: Do not ignore method results
# dotnet_diagnostic.CA1806.severity = warning

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# CA1814: Prefer jagged arrays over multidimensional
# dotnet_diagnostic.CA1814.severity = warning

# CA1815: Override equals and operator equals on value types
# dotnet_diagnostic.CA1815.severity = warning

# CA1819: Properties should not return arrays
# dotnet_diagnostic.CA1819.severity = warning

# CA1821: Remove empty Finalizers
# dotnet_diagnostic.CA1821.severity = warning

# CA1822: Mark members as static
# dotnet_diagnostic.CA1822.severity = warning

# CA1823: Avoid unused private fields
# dotnet_diagnostic.CA1823.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.ca2007.severity = none

# CA2119: Seal methods that satisfy private interfaces
# dotnet_diagnostic.CA2119.severity = warning

# CA2200: Rethrow to preserve stack details.
# dotnet_diagnostic.CA2200.severity = warning

# CA2211: Non-constant fields should not be visible
# dotnet_diagnostic.CA2211.severity = warning

# CA2214: Do not call overridable methods in constructors
# dotnet_diagnostic.CA2214.severity = warning

# CA2217: Do not mark enums with FlagsAttribute
# dotnet_diagnostic.CA2217.severity = none

# CA2218: Override GetHashCode on overriding Equals
# dotnet_diagnostic.CA2218.severity = warning

# CA2219: Do not raise exceptions in finally clauses
# dotnet_diagnostic.CA2219.severity = warning

# CA2224: Override Equals on overloading operator equals
# dotnet_diagnostic.CA2224.severity = warning

# CA2225: Operator overloads have named alternates
# dotnet_diagnostic.CA2225.severity = warning

# CA2226: Operators should have symmetrical overloads
# dotnet_diagnostic.CA2226.severity = warning

# CA2227: Collection properties should be read only
# dotnet_diagnostic.CA2227.severity = warning

# CA2231: Overload operator equals on overriding value type Equals
# dotnet_diagnostic.CA2231.severity = warning

# CA2234: Pass system uri objects instead of strings
# dotnet_diagnostic.CA2234.severity = warning

# CA2244: Do not duplicate indexed element initializations
# dotnet_diagnostic.CA2244.severity = warning

# CA2245: Do not assign a property to itself.
# dotnet_diagnostic.CA2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement.
# dotnet_diagnostic.CA2246.severity = warning

# NetCore

# CA1303: Do not pass literals as localized parameters
# dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
# dotnet_diagnostic.CA1304.severity = none

# CA1305: Specify IFormatProvider
# dotnet_diagnostic.CA1305.severity = none

# CA1307: Specify StringComparison
# dotnet_diagnostic.CA1307.severity = warning

# CA1308: Normalize strings to uppercase
# dotnet_diagnostic.CA1308.severity = warning

# CA1309: Use ordinal stringcomparison
# dotnet_diagnostic.CA1309.severity = none

# CA1401: P/Invokes should not be visible
# dotnet_diagnostic.CA1401.severity = warning

# CA1810: Initialize reference type static fields inline
# dotnet_diagnostic.CA1810.severity = warning

# CA1813: Avoid unsealed attributes
# dotnet_diagnostic.CA1813.severity = none

# CA1816: Dispose methods should call SuppressFinalize
# dotnet_diagnostic.CA1816.severity = none

# CA1820: Test for empty strings using string length
# dotnet_diagnostic.CA1820.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
# dotnet_diagnostic.CA1824.severity = warning

# CA1825: Avoid zero-length array allocations.
# dotnet_diagnostic.CA1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
# dotnet_diagnostic.CA1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
# dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
# dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
# dotnet_diagnostic.CA1829.severity = warning

# CA2000: Dispose objects before losing scope
# dotnet_diagnostic.CA2000.severity = warning

# CA2002: Do not lock on objects with weak identity
# dotnet_diagnostic.CA2002.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
# dotnet_diagnostic.CA2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
# dotnet_diagnostic.CA2009.severity = warning

# CA2010: Always consume the value returned by methods marked with PreserveSigAttribute
# dotnet_diagnostic.CA2010.severity = warning

# CA2100: Review SQL queries for security vulnerabilities
# dotnet_diagnostic.CA2100.severity = warning

# CA2101: Specify marshaling for P/Invoke string arguments
# dotnet_diagnostic.CA2101.severity = warning

# CA2201: Do not raise reserved exception types
# dotnet_diagnostic.CA2201.severity = none

# CA2207: Initialize value type static fields inline
# dotnet_diagnostic.CA2207.severity = warning

# CA2208: Instantiate argument exceptions correctly
# dotnet_diagnostic.CA2208.severity = warning

# CA2213: Disposable fields should be disposed
# dotnet_diagnostic.CA2213.severity = warning

# CA2216: Disposable types should declare finalizer
# dotnet_diagnostic.CA2216.severity = warning

# CA2229: Implement serialization constructors
# dotnet_diagnostic.CA2229.severity = warning

# CA2235: Mark all non-serializable fields
# dotnet_diagnostic.CA2235.severity = warning

# CA2237: Mark ISerializable types with serializable
# dotnet_diagnostic.CA2237.severity = warning

# CA2241: Provide correct arguments to formatting methods
# dotnet_diagnostic.CA2241.severity = warning

# CA2242: Test for NaN correctly
# dotnet_diagnostic.CA2242.severity = warning

# CA2243: Attribute string literals should parse correctly
# dotnet_diagnostic.CA2243.severity = warning

# CA2300: Do not use insecure deserializer BinaryFormatter
# dotnet_diagnostic.CA2300.severity = none

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
# dotnet_diagnostic.CA2301.severity = none

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
# dotnet_diagnostic.CA2302.severity = none

# CA2305: Do not use insecure deserializer LosFormatter
# dotnet_diagnostic.CA2305.severity = none

# CA2310: Do not use insecure deserializer NetDataContractSerializer
# dotnet_diagnostic.CA2310.severity = none

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
# dotnet_diagnostic.CA2311.severity = none

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
# dotnet_diagnostic.CA2312.severity = none

# CA2315: Do not use insecure deserializer ObjectStateFormatter
# dotnet_diagnostic.CA2315.severity = none

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
# dotnet_diagnostic.CA2321.severity = none

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
# dotnet_diagnostic.CA2322.severity = none

# CA2326: Do not use TypeNameHandling values other than None
# dotnet_diagnostic.CA2326.severity = none

# CA2327: Do not use insecure JsonSerializerSettings
# dotnet_diagnostic.CA2327.severity = none

# CA2328: Ensure that JsonSerializerSettings are secure
# dotnet_diagnostic.CA2328.severity = none

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
# dotnet_diagnostic.CA2329.severity = none

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
# dotnet_diagnostic.CA2330.severity = none

# CA3001: Review code for SQL injection vulnerabilities
# dotnet_diagnostic.CA3001.severity = none

# CA3002: Review code for XSS vulnerabilities
# dotnet_diagnostic.CA3002.severity = none

# CA3003: Review code for file path injection vulnerabilities
# dotnet_diagnostic.CA3003.severity = none

# CA3004: Review code for information disclosure vulnerabilities
# dotnet_diagnostic.CA3004.severity = none

# CA3005: Review code for LDAP injection vulnerabilities
# dotnet_diagnostic.CA3005.severity = none

# CA3006: Review code for process command injection vulnerabilities
# dotnet_diagnostic.CA3006.severity = none

# CA3007: Review code for open redirect vulnerabilities
# dotnet_diagnostic.CA3007.severity = none

# CA3008: Review code for XPath injection vulnerabilities
# dotnet_diagnostic.CA3008.severity = none

# CA3009: Review code for XML injection vulnerabilities
# dotnet_diagnostic.CA3009.severity = none

# CA3010: Review code for XAML injection vulnerabilities
# dotnet_diagnostic.CA3010.severity = none

# CA3011: Review code for DLL injection vulnerabilities
# dotnet_diagnostic.CA3011.severity = none

# CA3012: Review code for regex injection vulnerabilities
# dotnet_diagnostic.CA3012.severity = none

# CA3061: Do Not Add Schema By URL
# dotnet_diagnostic.CA3061.severity = warning

# CA5350: Do Not Use Weak Cryptographic Algorithms
# dotnet_diagnostic.CA5350.severity = warning

# CA5351: Do Not Use Broken Cryptographic Algorithms
# dotnet_diagnostic.CA5351.severity = warning

# CA5358: Do Not Use Unsafe Cipher Modes
# dotnet_diagnostic.CA5358.severity = none

# CA5359: Do Not Disable Certificate Validation
# dotnet_diagnostic.CA5359.severity = warning

# CA5360: Do Not Call Dangerous Methods In Deserialization
# dotnet_diagnostic.CA5360.severity = warning

# CA5361: Do Not Disable SChannel Use of Strong Crypto
# dotnet_diagnostic.CA5361.severity = warning

# CA5362: Do Not Refer Self In Serializable Class
# dotnet_diagnostic.CA5362.severity = none

# CA5363: Do Not Disable Request Validation
# dotnet_diagnostic.CA5363.severity = warning

# CA5364: Do Not Use Deprecated Security Protocols
# dotnet_diagnostic.CA5364.severity = warning

# CA5365: Do Not Disable HTTP Header Checking
# dotnet_diagnostic.CA5365.severity = warning

# CA5366: Use XmlReader For DataSet Read Xml
# dotnet_diagnostic.CA5366.severity = warning

# CA5367: Do Not Serialize Types With Pointer Fields
# dotnet_diagnostic.CA5367.severity = none

# CA5368: Set ViewStateUserKey For Classes Derived From Page
# dotnet_diagnostic.CA5368.severity = warning

# CA5369: Use XmlReader For Deserialize
# dotnet_diagnostic.CA5369.severity = warning

# CA5370: Use XmlReader For Validating Reader
# dotnet_diagnostic.CA5370.severity = warning

# CA5371: Use XmlReader For Schema Read
# dotnet_diagnostic.CA5371.severity = warning

# CA5372: Use XmlReader For XPathDocument
# dotnet_diagnostic.CA5372.severity = warning

# CA5373: Do not use obsolete key derivation function
# dotnet_diagnostic.CA5373.severity = warning

# CA5374: Do Not Use XslTransform
# dotnet_diagnostic.CA5374.severity = warning

# CA5375: Do Not Use Account Shared Access Signature
# dotnet_diagnostic.CA5375.severity = none

# CA5376: Use SharedAccessProtocol HttpsOnly
# dotnet_diagnostic.CA5376.severity = warning

# CA5377: Use Container Level Access Policy
# dotnet_diagnostic.CA5377.severity = warning

# CA5378: Do not disable ServicePointManagerSecurityProtocols
# dotnet_diagnostic.CA5378.severity = warning

# CA5379: Do Not Use Weak Key Derivation Function Algorithm
# dotnet_diagnostic.CA5379.severity = warning

# CA5380: Do Not Add Certificates To Root Store
# dotnet_diagnostic.CA5380.severity = warning

# CA5381: Ensure Certificates Are Not Added To Root Store
# dotnet_diagnostic.CA5381.severity = warning

# CA5382: Use Secure Cookies In ASP.Net Core
# dotnet_diagnostic.CA5382.severity = none

# CA5383: Ensure Use Secure Cookies In ASP.Net Core
# dotnet_diagnostic.CA5383.severity = none

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
# dotnet_diagnostic.CA5384.severity = warning

# CA5385: Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
# dotnet_diagnostic.CA5385.severity = warning

# CA5386: Avoid hardcoding SecurityProtocolType value
# dotnet_diagnostic.CA5386.severity = none

# CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
# dotnet_diagnostic.CA5387.severity = none

# CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
# dotnet_diagnostic.CA5388.severity = none

# CA5389: Do Not Add Archive Item's Path To The Target File System Path
# dotnet_diagnostic.CA5389.severity = none

# CA5390: Do not hard-code encryption key
# dotnet_diagnostic.CA5390.severity = none

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
# dotnet_diagnostic.CA5391.severity = none

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
# dotnet_diagnostic.CA5392.severity = none

# CA5393: Do not use unsafe DllImportSearchPath value
# dotnet_diagnostic.CA5393.severity = none

# CA5394: Do not use insecure randomness
# dotnet_diagnostic.CA5394.severity = none

# CA5395: Miss HttpVerb attribute for action methods
# dotnet_diagnostic.CA5395.severity = none

# CA5396: Set HttpOnly to true for HttpCookie
# dotnet_diagnostic.CA5396.severity = none

# CA5397: Do not use deprecated SslProtocols values
# dotnet_diagnostic.CA5397.severity = warning

# CA5398: Avoid hardcoded SslProtocols values
# dotnet_diagnostic.CA5398.severity = none

# CA5399: HttpClients should enable certificate revocation list checks
# dotnet_diagnostic.CA5399.severity = none

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
# dotnet_diagnostic.CA5400.severity = none

# CA5401: Do not use CreateEncryptor with non-default IV
# dotnet_diagnostic.CA5401.severity = none

# CA5402: Use CreateEncryptor with the default IV
# dotnet_diagnostic.CA5402.severity = none

# CA5403: Do not hard-code certificate
# dotnet_diagnostic.CA5403.severity = none

# NetFramework

# CA1058: Types should not extend certain base types
# dotnet_diagnostic.CA1058.severity = warning

# CA2153: Do Not Catch Corrupted State Exceptions
# dotnet_diagnostic.CA2153.severity = warning

# CA3075: Insecure DTD processing in XML
# dotnet_diagnostic.CA3075.severity = warning

# CA3076: Insecure XSLT script processing.
# dotnet_diagnostic.CA3076.severity = warning

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
# dotnet_diagnostic.CA3077.severity = warning

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
# dotnet_diagnostic.CA3147.severity = warning

# PublicApi

# RS0016: Add public types and members to the declared API
# dotnet_diagnostic.RS0016.severity = warning

# RS0017: Remove deleted types and members from the declared API
# dotnet_diagnostic.RS0017.severity = warning

# RS0022: Constructor make noninheritable base class inheritable
# dotnet_diagnostic.RS0022.severity = warning

# RS0024: The contents of the public API files are invalid
# dotnet_diagnostic.RS0024.severity = warning

# RS0025: Do not duplicate symbols in public API files
# dotnet_diagnostic.RS0025.severity = warning

# RS0026: Do not add multiple public overloads with optional parameters
# dotnet_diagnostic.RS0026.severity = warning

# RS0027: Public API with optional parameter(s) should have the most parameters amongst its public overloads.
# dotnet_diagnostic.RS0027.severity = warning

# ReSharper properties
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_array_and_object_initializer = false
resharper_align_multiline_binary_expressions_chain = false
resharper_align_multiline_calls_chain = true
resharper_align_multiline_expression = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_for_stmt = true
resharper_align_multiline_parameter = true
resharper_align_multiline_switch_expression = false
resharper_align_multiple_declaration = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = true
resharper_align_tuple_components = true
resharper_arguments_anonymous_function = positional
resharper_autodetect_indent_settings = true
resharper_braces_for_for = not_required
resharper_braces_for_foreach = not_required
resharper_braces_for_ifelse = not_required_for_both
resharper_braces_for_while = not_required
resharper_braces_redundant = false
resharper_constructor_or_destructor_body = block_body
resharper_continuous_indent_multiplier = 1
resharper_cpp_empty_block_style = multiline
resharper_cpp_outdent_commas = false
resharper_cpp_outdent_dots = false
resharper_cpp_wrap_after_declaration_lpar = false
resharper_cpp_wrap_after_invocation_lpar = false
resharper_cpp_wrap_before_declaration_rpar = false
resharper_cpp_wrap_before_invocation_rpar = false
resharper_csharp_align_multiline_argument = true
resharper_csharp_align_multiline_binary_expressions_chain = true
resharper_csharp_align_multiline_expression = false
resharper_csharp_brace_style = next_line
resharper_csharp_empty_block_style = multiline
resharper_csharp_outdent_commas = true
resharper_csharp_outdent_dots = true
resharper_csharp_place_comments_at_first_column = true
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_before_declaration_rpar = true
resharper_csharp_wrap_before_invocation_rpar = true
resharper_csharp_wrap_multiple_declaration_style = chop_if_long
resharper_empty_block_style = together_same_line
resharper_indent_anonymous_method_block = false
resharper_int_align_switch_expressions = true
resharper_int_align_switch_sections = true
resharper_keep_existing_declaration_block_arrangement = false
resharper_keep_existing_embedded_block_arrangement = false
resharper_keep_existing_enum_arrangement = true
resharper_keep_existing_invocation_parens_arrangement = true
resharper_keep_existing_linebreaks = true
resharper_keep_existing_switch_expression_arrangement = false
resharper_keep_user_linebreaks = true
resharper_max_initializer_elements_on_line = 2
resharper_method_or_operator_body = block_body
resharper_outdent_binary_ops = true
resharper_outdent_commas = true
resharper_outdent_dots = true
resharper_space_around_arrow_op = true
resharper_space_within_single_line_array_initializer_braces = true
resharper_use_heuristics_for_body_style = true
resharper_use_indent_from_vs = false
resharper_wrap_after_declaration_lpar = true
resharper_wrap_after_invocation_lpar = true
resharper_wrap_arguments_style = wrap_if_long
resharper_wrap_before_declaration_rpar = true
resharper_wrap_before_invocation_rpar = true
resharper_wrap_chained_method_calls = wrap_if_long
resharper_wrap_multiple_declaration_style = chop_if_long
resharper_wrap_object_and_collection_initializer_style = chop_if_long
resharper_xmldoc_attribute_style = on_single_line
resharper_xmldoc_pi_attribute_style = on_single_line
resharper_xmldoc_space_after_last_pi_attribute = true
resharper_xmldoc_space_before_self_closing = true

# ReSharper inspection severities
resharper_annotate_can_be_null_parameter_highlighting = warning
resharper_annotate_can_be_null_type_member_highlighting = warning
resharper_arrange_constructor_or_destructor_body_highlighting = none
resharper_arrange_method_or_operator_body_highlighting = none
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_enforce_do_while_statement_braces_highlighting = warning
resharper_enforce_fixed_statement_braces_highlighting = warning
resharper_enforce_foreach_statement_braces_highlighting = warning
resharper_enforce_for_statement_braces_highlighting = warning
resharper_enforce_if_statement_braces_highlighting = warning
resharper_enforce_lock_statement_braces_highlighting = warning
resharper_enforce_using_statement_braces_highlighting = warning
resharper_enforce_while_statement_braces_highlighting = warning
resharper_redundant_base_qualifier_highlighting = warning
resharper_redundant_default_member_initializer_highlighting = hint
resharper_remove_redundant_braces_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_unnecessary_whitespace_highlighting = warning
resharper_use_null_propagation_when_possible_highlighting = suggestion
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning
resharper_partial_type_with_single_part_highlighting = none
resharper_redundant_nullable_flow_attribute_highlighting = none

# Options

roslynator_accessibility_modifiers = explicit
# Applicable to: rcs1018

roslynator_accessor_braces_style = single_line_when_expression_is_on_single_line
# Default: multi_line
# Applicable to: rcs0020

roslynator_array_creation_type_style = implicit_when_type_is_obvious
# Applicable to: rcs1014

roslynator_arrow_token_new_line = before
# Applicable to: rcs0032

roslynator_binary_operator_new_line = before
# Applicable to: rcs0027

roslynator_blank_line_between_closing_brace_and_switch_section = false
# Applicable to: rcs0014, rcs1036

roslynator_blank_line_between_single_line_accessors = false
# Applicable to: rcs0011

roslynator_blank_line_between_using_directives = separate_groups
# Applicable to: rcs0015

roslynator_block_braces_style = single_line_when_empty
# Default: multi_line
# Applicable to: rcs0021

roslynator_body_style = expression
# Applicable to: rcs1016

roslynator_conditional_operator_condition_parentheses_style = omit_when_condition_is_single_token
# Applicable to: rcs1051

roslynator_conditional_operator_new_line = before
# Applicable to: rcs0028

# roslynator_configure_await = true|false
# Applicable to: rcs1090

roslynator_empty_string_style = field
# Applicable to: rcs1078

roslynator_enum_has_flag_style = operator
# Applicable to: rcs1096

roslynator_equals_token_new_line = after
# Applicable to: rcs0052

roslynator_max_line_length = 200
# Default: 140
# Applicable to: rcs0056

roslynator_new_line_at_end_of_file = true|false
# Applicable to: rcs0058

roslynator_new_line_before_while_in_do_statement = true
# Applicable to: rcs0051

roslynator_null_conditional_operator_new_line = before
# Applicable to: rcs0059

roslynator_null_check_style = pattern_matching
# Applicable to: rcs1248

roslynator_object_creation_parentheses_style = omit
# Applicable to: rcs1050

roslynator_object_creation_type_style = implicit_when_type_is_obvious
# Applicable to: rcs1250

roslynator_prefix_field_identifier_with_underscore = true

roslynator_suppress_unity_script_methods = true
# Applicable to: rcs1213

roslynator_use_anonymous_function_or_method_group = method_group
# Applicable to: rcs1207

roslynator_use_block_body_when_declaration_spans_over_multiple_lines = false
# Applicable to: rcs1016

roslynator_use_block_body_when_expression_spans_over_multiple_lines = false
# Applicable to: rcs1016

roslynator_use_var_instead_of_implicit_object_creation = true
# Applicable to: rcs1250

# Analyzers

# Add blank line after embedded statement
dotnet_diagnostic.rcs0001.severity = suggestion

# Add blank line after #region
dotnet_diagnostic.rcs0002.severity = suggestion

# Add blank line after using directive list
dotnet_diagnostic.rcs0003.severity = suggestion

# Add blank line before #endregion
dotnet_diagnostic.rcs0005.severity = suggestion

# Add blank line before using directive list
dotnet_diagnostic.rcs0006.severity = suggestion

# Add blank line between accessors
dotnet_diagnostic.rcs0007.severity = suggestion

# Add blank line between closing brace and next statement
dotnet_diagnostic.rcs0008.severity = suggestion

# Add blank line between declaration and documentation comment
dotnet_diagnostic.rcs0009.severity = suggestion

# Add blank line between declarations
dotnet_diagnostic.rcs0010.severity = suggestion

# Add/remove blank line between single-line accessors
dotnet_diagnostic.rcs0011.severity = suggestion
# Options: roslynator_blank_line_between_single_line_accessors

# Add blank line between single-line declarations
dotnet_diagnostic.rcs0012.severity = suggestion

# Add blank line between single-line declarations of different kind
dotnet_diagnostic.rcs0013.severity = suggestion

# Add blank line between switch sections
dotnet_diagnostic.rcs0014.severity = suggestion
# Options: roslynator_blank_line_between_closing_brace_and_switch_section

# Add/remove blank line between using directives
dotnet_diagnostic.rcs0015.severity = suggestion
# Options: roslynator_blank_line_between_using_directives

# Put attribute list on its own line
dotnet_diagnostic.rcs0016.severity = suggestion

# Format accessor's braces on a single line or multiple lines
dotnet_diagnostic.rcs0020.severity = suggestion
# Options: roslynator_accessor_braces_style

# Format block's braces on a single line or multiple lines
dotnet_diagnostic.rcs0021.severity = suggestion
# Options: roslynator_block_braces_style

# Add new line after opening brace of empty block
dotnet_diagnostic.rcs0022.severity = suggestion

# Format type declaration's braces
dotnet_diagnostic.rcs0023.severity = suggestion

# Add new line after switch label
dotnet_diagnostic.rcs0024.severity = suggestion

# Put full accessor on its own line
dotnet_diagnostic.rcs0025.severity = suggestion

# Place new line after/before binary operator
dotnet_diagnostic.rcs0027.severity = suggestion
# Options: roslynator_binary_operator_new_line

# Place new line after/before '?:' operator
dotnet_diagnostic.rcs0028.severity = suggestion
# Options: roslynator_conditional_operator_new_line

# Put constructor initializer on its own line
dotnet_diagnostic.rcs0029.severity = none

# Add new line before embedded statement
dotnet_diagnostic.rcs0030.severity = none

# Add new line before enum member
dotnet_diagnostic.rcs0031.severity = suggestion

# Place new line after/before arrow token
dotnet_diagnostic.rcs0032.severity = suggestion
# Options: roslynator_arrow_token_new_line

# Add new line before statement
dotnet_diagnostic.rcs0033.severity = suggestion

# Add new line before type parameter constraint
dotnet_diagnostic.rcs0034.severity = suggestion

# Remove blank line between single-line declarations of same kind
dotnet_diagnostic.rcs0036.severity = suggestion

# Remove blank line between using directives with same root namespace
dotnet_diagnostic.rcs0038.severity = suggestion

# Remove new line before base list
dotnet_diagnostic.rcs0039.severity = suggestion

# Remove new line between 'if' keyword and 'else' keyword
dotnet_diagnostic.rcs0041.severity = suggestion

# Put auto-accessors on a single line
dotnet_diagnostic.rcs0042.severity = suggestion

# Format accessor's braces on a single line when expression is on single line
dotnet_diagnostic.rcs0043.severity = suggestion

# Use carriage return + linefeed as new line
dotnet_diagnostic.rcs0044.severity = none

# Use linefeed as new line
dotnet_diagnostic.rcs0045.severity = none

# Use spaces instead of tab
dotnet_diagnostic.rcs0046.severity = none

# [deprecated] Wrap and indent each node in list
dotnet_diagnostic.rcs0047.severity = none

# Put initializer on a single line
dotnet_diagnostic.rcs0048.severity = none

# Add blank line after top comment
dotnet_diagnostic.rcs0049.severity = suggestion

# Add blank line before top declaration
dotnet_diagnostic.rcs0050.severity = suggestion

# Add/remove new line before 'while' in 'do' statement
dotnet_diagnostic.rcs0051.severity = suggestion
# Options: roslynator_new_line_before_while_in_do_statement

# Place new line after/before equals token
dotnet_diagnostic.rcs0052.severity = suggestion
# Options: roslynator_equals_token_new_line

# Fix formatting of a list
dotnet_diagnostic.rcs0053.severity = suggestion

# Fix formatting of a call chain
dotnet_diagnostic.rcs0054.severity = suggestion

# Fix formatting of a binary expression chain
dotnet_diagnostic.rcs0055.severity = suggestion

# A line is too long
dotnet_diagnostic.rcs0056.severity = none
# Options: roslynator_max_line_length

# Normalize whitespace at the beginning of a file
dotnet_diagnostic.rcs0057.severity = suggestion

# Normalize whitespace at the end of a file
dotnet_diagnostic.rcs0058.severity = suggestion
# Options: roslynator_new_line_at_end_of_file

# Place new line after/before null-conditional operator
dotnet_diagnostic.rcs0059.severity = suggestion
# Options: roslynator_null_conditional_operator_new_line

# Add braces (when expression spans over multiple lines)
dotnet_diagnostic.rcs1001.severity = suggestion

# Remove braces
dotnet_diagnostic.rcs1002.severity = suggestion

# Add braces to if-else (when expression spans over multiple lines)
dotnet_diagnostic.rcs1003.severity = suggestion

# Remove braces from if-else
dotnet_diagnostic.rcs1004.severity = suggestion

# Simplify nested using statement
dotnet_diagnostic.rcs1005.severity = silent

# Merge 'else' with nested 'if'
dotnet_diagnostic.rcs1006.severity = silent

# Add braces
dotnet_diagnostic.rcs1007.severity = suggestion

# Use explicit type instead of 'var' (when the type is not obvious)
dotnet_diagnostic.rcs1008.severity = suggestion

# Use explicit type instead of 'var' (foreach variable)
dotnet_diagnostic.rcs1009.severity = suggestion

# Use 'var' instead of explicit type (when the type is obvious)
dotnet_diagnostic.rcs1010.severity = suggestion

# Use explicit type instead of 'var' (when the type is obvious)
dotnet_diagnostic.rcs1012.severity = suggestion

# Use predefined type
dotnet_diagnostic.rcs1013.severity = suggestion

# Use explicitly/implicitly typed array
dotnet_diagnostic.rcs1014.severity = suggestion
# Options: roslynator_array_creation_type_style

# Use nameof operator
dotnet_diagnostic.rcs1015.severity = suggestion

# Use block body or expression body
dotnet_diagnostic.rcs1016.severity = suggestion
# Options: roslynator_body_style, roslynator_use_block_body_when_declaration_spans_over_multiple_lines, roslynator_use_block_body_when_expression_spans_over_multiple_lines

# Add/remove accessibility modifiers
dotnet_diagnostic.rcs1018.severity = suggestion
# Options: roslynator_accessibility_modifiers

# Order modifiers
dotnet_diagnostic.rcs1019.severity = suggestion

# Simplify Nullable<T> to T?
dotnet_diagnostic.rcs1020.severity = suggestion

# Convert lambda expression body to expression body
dotnet_diagnostic.rcs1021.severity = suggestion

# Remove unnecessary braces
dotnet_diagnostic.rcs1031.severity = silent

# Remove redundant parentheses
dotnet_diagnostic.rcs1032.severity = suggestion

# Remove redundant boolean literal
dotnet_diagnostic.rcs1033.severity = suggestion

# Remove redundant 'sealed' modifier
dotnet_diagnostic.rcs1034.severity = silent

# Remove redundant comma in initializer
dotnet_diagnostic.rcs1035.severity = none

# Remove unnecessary blank line
dotnet_diagnostic.rcs1036.severity = suggestion
# Options: roslynator_blank_line_between_closing_brace_and_switch_section

# Remove trailing white-space
dotnet_diagnostic.rcs1037.severity = suggestion

# Remove empty statement
dotnet_diagnostic.rcs1038.severity = suggestion

# Remove argument list from attribute
dotnet_diagnostic.rcs1039.severity = silent

# Remove empty 'else' clause
dotnet_diagnostic.rcs1040.severity = silent

# Remove empty initializer
dotnet_diagnostic.rcs1041.severity = suggestion

# Remove enum default underlying type
dotnet_diagnostic.rcs1042.severity = silent

# Remove 'partial' modifier from type with a single part
dotnet_diagnostic.rcs1043.severity = silent

# Remove original exception from throw statement
dotnet_diagnostic.rcs1044.severity = warning

# Asynchronous method name should end with 'Async'
dotnet_diagnostic.rcs1046.severity = none

# Non-asynchronous method name should not end with 'Async'
dotnet_diagnostic.rcs1047.severity = suggestion

# Use lambda expression instead of anonymous method
dotnet_diagnostic.rcs1048.severity = suggestion

# Simplify boolean comparison
dotnet_diagnostic.rcs1049.severity = suggestion

# Include/omit parentheses when creating new object
dotnet_diagnostic.rcs1050.severity = suggestion
# Options: roslynator_object_creation_parentheses_style

# Add/remove parentheses from condition in conditional operator
dotnet_diagnostic.rcs1051.severity = suggestion
# Options: roslynator_conditional_operator_condition_parentheses_style

# Declare each attribute separately
dotnet_diagnostic.rcs1052.severity = suggestion

# Avoid semicolon at the end of declaration
dotnet_diagnostic.rcs1055.severity = silent

# Avoid usage of using alias directive
dotnet_diagnostic.rcs1056.severity = none

# Use compound assignment
dotnet_diagnostic.rcs1058.severity = suggestion

# Avoid locking on publicly accessible instance
dotnet_diagnostic.rcs1059.severity = warning

# Declare each type in separate file
dotnet_diagnostic.rcs1060.severity = none

# Merge 'if' with nested 'if'
dotnet_diagnostic.rcs1061.severity = silent

# Avoid usage of do statement to create an infinite loop
dotnet_diagnostic.rcs1063.severity = suggestion

# Avoid usage of for statement to create an infinite loop
dotnet_diagnostic.rcs1064.severity = none

# Avoid usage of while statement to create an infinite loop
dotnet_diagnostic.rcs1065.severity = none

# Remove empty 'finally' clause
dotnet_diagnostic.rcs1066.severity = silent

# Simplify logical negation
dotnet_diagnostic.rcs1068.severity = suggestion

# Remove unnecessary case label
dotnet_diagnostic.rcs1069.severity = silent

# Remove redundant default switch section
dotnet_diagnostic.rcs1070.severity = silent

# Remove redundant base constructor call
dotnet_diagnostic.rcs1071.severity = silent

# Remove empty namespace declaration
dotnet_diagnostic.rcs1072.severity = suggestion

# Convert 'if' to 'return' statement
dotnet_diagnostic.rcs1073.severity = suggestion

# Remove redundant constructor
dotnet_diagnostic.rcs1074.severity = silent

# Avoid empty catch clause that catches System.Exception
dotnet_diagnostic.rcs1075.severity = warning

# Optimize LINQ method call
dotnet_diagnostic.rcs1077.severity = suggestion

# Use "" or 'string.Empty'
dotnet_diagnostic.rcs1078.severity = suggestion
# Options: roslynator_empty_string_style

# Throwing of new NotImplementedException
dotnet_diagnostic.rcs1079.severity = none

# Use 'Count/Length' property instead of 'Any' method
dotnet_diagnostic.rcs1080.severity = suggestion

# Split variable declaration
dotnet_diagnostic.rcs1081.severity = suggestion

# Use coalesce expression instead of conditional expression
dotnet_diagnostic.rcs1084.severity = suggestion

# Use auto-implemented property
dotnet_diagnostic.rcs1085.severity = suggestion

# Use --/++ operator instead of assignment
dotnet_diagnostic.rcs1089.severity = suggestion

# Add/remove 'ConfigureAwait(false)' call
dotnet_diagnostic.rcs1090.severity = suggestion
# Options: roslynator_configure_await

# Remove empty region
dotnet_diagnostic.rcs1091.severity = silent

# Remove file with no code
dotnet_diagnostic.rcs1093.severity = suggestion

# Declare using directive on top level
dotnet_diagnostic.rcs1094.severity = suggestion

# Use 'HasFlag' method or bitwise operator
dotnet_diagnostic.rcs1096.severity = suggestion
# Options: roslynator_enum_has_flag_style

# Remove redundant 'ToString' call
dotnet_diagnostic.rcs1097.severity = suggestion

# Constant values should be placed on right side of comparisons
dotnet_diagnostic.rcs1098.severity = suggestion

# Default label should be the last label in a switch section
dotnet_diagnostic.rcs1099.severity = suggestion

# Format documentation summary on a single line
dotnet_diagnostic.rcs1100.severity = suggestion

# Format documentation summary on multiple lines
dotnet_diagnostic.rcs1101.severity = suggestion

# Make class static
dotnet_diagnostic.rcs1102.severity = warning

# Convert 'if' to assignment
dotnet_diagnostic.rcs1103.severity = suggestion

# Simplify conditional expression
dotnet_diagnostic.rcs1104.severity = suggestion

# Unnecessary interpolation
dotnet_diagnostic.rcs1105.severity = suggestion

# Remove empty destructor
dotnet_diagnostic.rcs1106.severity = suggestion

# Remove redundant 'ToCharArray' call
dotnet_diagnostic.rcs1107.severity = suggestion

# Add 'static' modifier to all partial class declarations
dotnet_diagnostic.rcs1108.severity = suggestion

# Declare type inside namespace
dotnet_diagnostic.rcs1110.severity = suggestion

# Add braces to switch section with multiple statements
dotnet_diagnostic.rcs1111.severity = suggestion

# Combine 'Enumerable.Where' method chain
dotnet_diagnostic.rcs1112.severity = suggestion

# Use 'string.IsNullOrEmpty' method
dotnet_diagnostic.rcs1113.severity = suggestion

# Remove redundant delegate creation
dotnet_diagnostic.rcs1114.severity = suggestion

# Mark local variable as const
dotnet_diagnostic.rcs1118.severity = suggestion

# Add parentheses when necessary
dotnet_diagnostic.rcs1123.severity = suggestion

# Inline local variable
dotnet_diagnostic.rcs1124.severity = silent

# Add braces to if-else
dotnet_diagnostic.rcs1126.severity = suggestion

# Use coalesce expression
dotnet_diagnostic.rcs1128.severity = suggestion

# Remove redundant field initialization
dotnet_diagnostic.rcs1129.severity = silent

# Bitwise operation on enum without Flags attribute
dotnet_diagnostic.rcs1130.severity = suggestion

# Remove redundant overriding member
dotnet_diagnostic.rcs1132.severity = suggestion

# Remove redundant Dispose/Close call
dotnet_diagnostic.rcs1133.severity = silent

# Remove redundant statement
dotnet_diagnostic.rcs1134.severity = silent

# Declare enum member with zero value (when enum has FlagsAttribute)
dotnet_diagnostic.rcs1135.severity = suggestion

# Merge switch sections with equivalent content
dotnet_diagnostic.rcs1136.severity = silent

# Add summary to documentation comment
dotnet_diagnostic.rcs1138.severity = warning

# Add summary element to documentation comment
dotnet_diagnostic.rcs1139.severity = warning

# Add exception to documentation comment
dotnet_diagnostic.rcs1140.severity = silent

# Add 'param' element to documentation comment
dotnet_diagnostic.rcs1141.severity = silent

# Add 'typeparam' element to documentation comment
dotnet_diagnostic.rcs1142.severity = silent

# Simplify coalesce expression
dotnet_diagnostic.rcs1143.severity = silent

# Remove redundant 'as' operator
dotnet_diagnostic.rcs1145.severity = silent

# Use conditional access
dotnet_diagnostic.rcs1146.severity = suggestion

# Remove redundant cast
dotnet_diagnostic.rcs1151.severity = silent

# Sort enum members
dotnet_diagnostic.rcs1154.severity = suggestion

# Use StringComparison when comparing strings
dotnet_diagnostic.rcs1155.severity = warning

# Use string.Length instead of comparison with empty string
dotnet_diagnostic.rcs1156.severity = suggestion

# Composite enum value contains undefined flag
dotnet_diagnostic.rcs1157.severity = suggestion

# Static member in generic type should use a type parameter
dotnet_diagnostic.rcs1158.severity = suggestion

# Use EventHandler<T>
dotnet_diagnostic.rcs1159.severity = suggestion

# Abstract type should not have public constructors
dotnet_diagnostic.rcs1160.severity = suggestion

# Enum should declare explicit values
dotnet_diagnostic.rcs1161.severity = silent

# Avoid chain of assignments
dotnet_diagnostic.rcs1162.severity = suggestion

# Unused parameter
dotnet_diagnostic.rcs1163.severity = suggestion

# Unused type parameter
dotnet_diagnostic.rcs1164.severity = suggestion

# Unconstrained type parameter checked for null
dotnet_diagnostic.rcs1165.severity = silent

# Value type object is never equal to null
dotnet_diagnostic.rcs1166.severity = suggestion

# Parameter name differs from base name
dotnet_diagnostic.rcs1168.severity = silent

# Make field read-only
dotnet_diagnostic.rcs1169.severity = suggestion

# Use read-only auto-implemented property
dotnet_diagnostic.rcs1170.severity = suggestion

# Simplify lazy initialization
dotnet_diagnostic.rcs1171.severity = suggestion

# Use 'is' operator instead of 'as' operator
dotnet_diagnostic.rcs1172.severity = warning

# Use coalesce expression instead of 'if'
dotnet_diagnostic.rcs1173.severity = suggestion

# Remove redundant async/await
dotnet_diagnostic.rcs1174.severity = suggestion

# Unused this parameter
dotnet_diagnostic.rcs1175.severity = suggestion

# Use 'var' instead of explicit type (when the type is not obvious)
dotnet_diagnostic.rcs1176.severity = suggestion

# Use 'var' instead of explicit type (in foreach)
dotnet_diagnostic.rcs1177.severity = suggestion

# Unnecessary assignment
dotnet_diagnostic.rcs1179.severity = suggestion

# Inline lazy initialization
dotnet_diagnostic.rcs1180.severity = suggestion

# Convert comment to documentation comment
dotnet_diagnostic.rcs1181.severity = silent

# Remove redundant base interface
dotnet_diagnostic.rcs1182.severity = silent

# Use Regex instance instead of static method
dotnet_diagnostic.rcs1186.severity = silent

# Use constant instead of field
dotnet_diagnostic.rcs1187.severity = suggestion

# Remove redundant auto-property initialization
dotnet_diagnostic.rcs1188.severity = silent

# Add or remove region name
dotnet_diagnostic.rcs1189.severity = silent

# Join string expressions
dotnet_diagnostic.rcs1190.severity = suggestion

# Declare enum value as combination of names
dotnet_diagnostic.rcs1191.severity = suggestion

# Unnecessary usage of verbatim string literal
dotnet_diagnostic.rcs1192.severity = suggestion

# Overriding member should not change 'params' modifier
dotnet_diagnostic.rcs1193.severity = warning

# Implement exception constructors
dotnet_diagnostic.rcs1194.severity = warning

# Use ^ operator
dotnet_diagnostic.rcs1195.severity = suggestion

# Call extension method as instance method
dotnet_diagnostic.rcs1196.severity = suggestion

# Optimize StringBuilder.Append/AppendLine call
dotnet_diagnostic.rcs1197.severity = suggestion

# Avoid unnecessary boxing of value type
dotnet_diagnostic.rcs1198.severity = suggestion

# Unnecessary null check
dotnet_diagnostic.rcs1199.severity = suggestion

# Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'
dotnet_diagnostic.rcs1200.severity = suggestion

# Use method chaining
dotnet_diagnostic.rcs1201.severity = silent

# Avoid NullReferenceException
dotnet_diagnostic.rcs1202.severity = suggestion

# Use AttributeUsageAttribute
dotnet_diagnostic.rcs1203.severity = warning

# Use EventArgs.Empty
dotnet_diagnostic.rcs1204.severity = suggestion

# Order named arguments according to the order of parameters
dotnet_diagnostic.rcs1205.severity = suggestion

# Use conditional access instead of conditional expression
dotnet_diagnostic.rcs1206.severity = suggestion

# Use anonymous function or method group
dotnet_diagnostic.rcs1207.severity = suggestion
# Options: roslynator_use_anonymous_function_or_method_group

# Reduce 'if' nesting
dotnet_diagnostic.rcs1208.severity = suggestion

# Order type parameter constraints
dotnet_diagnostic.rcs1209.severity = suggestion

# Return completed task instead of returning null
dotnet_diagnostic.rcs1210.severity = warning

# Remove unnecessary 'else'
dotnet_diagnostic.rcs1211.severity = silent

# Remove redundant assignment
dotnet_diagnostic.rcs1212.severity = suggestion

# Remove unused member declaration
dotnet_diagnostic.rcs1213.severity = suggestion
# Options: roslynator_suppress_unity_script_methods

# Unnecessary interpolated string
dotnet_diagnostic.rcs1214.severity = suggestion

# Expression is always equal to true/false
dotnet_diagnostic.rcs1215.severity = warning

# Unnecessary unsafe context
dotnet_diagnostic.rcs1216.severity = suggestion

# Convert interpolated string to concatenation
dotnet_diagnostic.rcs1217.severity = silent

# Simplify code branching
dotnet_diagnostic.rcs1218.severity = suggestion

# Use pattern matching instead of combination of 'is' operator and cast operator
dotnet_diagnostic.rcs1220.severity = suggestion

# Use pattern matching instead of combination of 'as' operator and null check
dotnet_diagnostic.rcs1221.severity = suggestion

# Merge preprocessor directives
dotnet_diagnostic.rcs1222.severity = suggestion

# Mark publicly visible type with DebuggerDisplay attribute
dotnet_diagnostic.rcs1223.severity = none

# Make method an extension method
dotnet_diagnostic.rcs1224.severity = suggestion

# Make class sealed
dotnet_diagnostic.rcs1225.severity = suggestion

# Add paragraph to documentation comment
dotnet_diagnostic.rcs1226.severity = suggestion

# Validate arguments correctly
dotnet_diagnostic.rcs1227.severity = suggestion

# Unused element in documentation comment
dotnet_diagnostic.rcs1228.severity = silent

# Use async/await when necessary
dotnet_diagnostic.rcs1229.severity = suggestion

# Unnecessary explicit use of enumerator
dotnet_diagnostic.rcs1230.severity = suggestion

# Make parameter ref read-only
dotnet_diagnostic.rcs1231.severity = none

# Order elements in documentation comment
dotnet_diagnostic.rcs1232.severity = suggestion

# Use short-circuiting operator
dotnet_diagnostic.rcs1233.severity = suggestion

# Duplicate enum value
dotnet_diagnostic.rcs1234.severity = suggestion

# Optimize method call
dotnet_diagnostic.rcs1235.severity = suggestion

# Use exception filter
dotnet_diagnostic.rcs1236.severity = suggestion

# Use bit shift operator
dotnet_diagnostic.rcs1237.severity = silent

# Avoid nested ?: operators
dotnet_diagnostic.rcs1238.severity = silent

# Use 'for' statement instead of 'while' statement
dotnet_diagnostic.rcs1239.severity = suggestion

# Operator is unnecessary
dotnet_diagnostic.rcs1240.severity = suggestion

# Implement non-generic counterpart
dotnet_diagnostic.rcs1241.severity = silent

# Do not pass non-read-only struct by read-only reference
dotnet_diagnostic.rcs1242.severity = warning

# Duplicate word in a comment
dotnet_diagnostic.rcs1243.severity = suggestion

# Simplify 'default' expression
dotnet_diagnostic.rcs1244.severity = silent

# Use element access
dotnet_diagnostic.rcs1246.severity = suggestion

# Fix documentation comment tag
dotnet_diagnostic.rcs1247.severity = suggestion

# Normalize null check
dotnet_diagnostic.rcs1248.severity = suggestion
# Options: roslynator_null_check_style

# Unnecessary null-forgiving operator
dotnet_diagnostic.rcs1249.severity = suggestion

# Use implicit/explicit object creation
dotnet_diagnostic.rcs1250.severity = suggestion
# Options: roslynator_object_creation_type_style, roslynator_use_var_instead_of_implicit_object_creation

# Use pattern matching
dotnet_diagnostic.rcs9001.severity = silent

# Use property SyntaxNode.SpanStart
dotnet_diagnostic.rcs9002.severity = suggestion

# Unnecessary conditional access
dotnet_diagnostic.rcs9003.severity = suggestion

# Call 'Any' instead of accessing 'Count'
dotnet_diagnostic.rcs9004.severity = suggestion

# Unnecessary null check
dotnet_diagnostic.rcs9005.severity = suggestion

# Use element access
dotnet_diagnostic.rcs9006.severity = suggestion

# Use return value
dotnet_diagnostic.rcs9007.severity = warning

# Call 'Last' instead of using []
dotnet_diagnostic.rcs9008.severity = suggestion

# Unknown language name
dotnet_diagnostic.rcs9009.severity = warning

# Specify ExportCodeRefactoringProviderAttribute.Name
dotnet_diagnostic.rcs9010.severity = silent

# Specify ExportCodeFixProviderAttribute.Name
dotnet_diagnostic.rcs9011.severity = silent


# Refactorings

roslynator_refactoring.add_all_properties_to_initializer.enabled = true
roslynator_refactoring.add_argument_name.enabled = true
roslynator_refactoring.add_braces.enabled = true
roslynator_refactoring.add_braces_to_if_else.enabled = true
roslynator_refactoring.add_braces_to_switch_section.enabled = true
roslynator_refactoring.add_braces_to_switch_sections.enabled = true
roslynator_refactoring.add_default_value_to_parameter.enabled = true
roslynator_refactoring.add_empty_line_between_declarations.enabled = true
roslynator_refactoring.add_exception_element_to_documentation_comment.enabled = true
roslynator_refactoring.add_generic_parameter_to_declaration.enabled = true
roslynator_refactoring.add_member_to_interface.enabled = true
roslynator_refactoring.add_missing_cases_to_switch.enabled = true
roslynator_refactoring.add_parameter_to_interface_member.enabled = true
roslynator_refactoring.add_tag_to_documentation_comment.enabled = true
roslynator_refactoring.add_using_directive.enabled = true
roslynator_refactoring.add_using_static_directive.enabled = true
roslynator_refactoring.call_extension_method_as_instance_method.enabled = true
roslynator_refactoring.call_indexof_instead_of_contains.enabled = true
roslynator_refactoring.comment_out_member_declaration.enabled = true
roslynator_refactoring.comment_out_statement.enabled = true
roslynator_refactoring.convert_auto_property_to_full_property.enabled = true
roslynator_refactoring.convert_auto_property_to_full_property_without_backing_field.enabled = true
roslynator_refactoring.convert_block_body_to_expression_body.enabled = true
roslynator_refactoring.convert_comment_to_documentation_comment.enabled = true
roslynator_refactoring.convert_conditional_expression_to_if_else.enabled = true
roslynator_refactoring.convert_do_to_while.enabled = true
roslynator_refactoring.convert_expression_body_to_block_body.enabled = true
roslynator_refactoring.convert_for_to_foreach.enabled = true
roslynator_refactoring.convert_for_to_while.enabled = true
roslynator_refactoring.convert_foreach_to_for.enabled = true
roslynator_refactoring.convert_foreach_to_for_and_reverse_loop.enabled = true
roslynator_refactoring.convert_hasflag_call_to_bitwise_operation.enabled = true
roslynator_refactoring.convert_hexadecimal_literal_to_decimal_literal.enabled = true
roslynator_refactoring.convert_if_to_conditional_expression.enabled = true
roslynator_refactoring.convert_if_to_switch.enabled = true
roslynator_refactoring.convert_interpolated_string_to_concatenation.enabled = true
roslynator_refactoring.convert_interpolated_string_to_string_format.enabled = true
roslynator_refactoring.convert_interpolated_string_to_string_literal.enabled = true
roslynator_refactoring.convert_lambda_block_body_to_expression_body.enabled = true
roslynator_refactoring.convert_lambda_expression_body_to_block_body.enabled = true
roslynator_refactoring.convert_method_group_to_lambda.enabled = true
roslynator_refactoring.convert_regular_string_literal_to_verbatim_string_literal.enabled = true
roslynator_refactoring.convert_return_statement_to_if.enabled = true
roslynator_refactoring.convert_statements_to_if_else.enabled = true
roslynator_refactoring.convert_string_format_to_interpolated_string.enabled = true
roslynator_refactoring.convert_switch_expression_to_switch_statement.enabled = true
roslynator_refactoring.convert_switch_to_if.enabled = true
roslynator_refactoring.convert_verbatim_string_literal_to_regular_string_literal.enabled = true
roslynator_refactoring.convert_verbatim_string_literal_to_regular_string_literals.enabled = true
roslynator_refactoring.convert_while_to_do.enabled = true
roslynator_refactoring.convert_while_to_for.enabled = true
roslynator_refactoring.copy_argument.enabled = true
roslynator_refactoring.copy_documentation_comment_from_base_member.enabled = true
roslynator_refactoring.copy_member_declaration.enabled = true
roslynator_refactoring.copy_parameter.enabled = true
roslynator_refactoring.copy_statement.enabled = true
roslynator_refactoring.copy_switch_section.enabled = true
roslynator_refactoring.expand_coalesce_expression.enabled = true
roslynator_refactoring.expand_compound_assignment.enabled = true
roslynator_refactoring.expand_event_declaration.enabled = true
roslynator_refactoring.expand_initializer.enabled = true
roslynator_refactoring.expand_positional_constructor.enabled = true
roslynator_refactoring.extract_event_handler_method.enabled = true
roslynator_refactoring.extract_expression_from_condition.enabled = true
roslynator_refactoring.extract_type_declaration_to_new_file.enabled = true
roslynator_refactoring.generate_base_constructors.enabled = true
roslynator_refactoring.generate_combined_enum_member.enabled = true
roslynator_refactoring.generate_enum_member.enabled = true
roslynator_refactoring.generate_enum_values.enabled = true
roslynator_refactoring.generate_event_invoking_method.enabled = true
roslynator_refactoring.generate_property_for_debuggerdisplay_attribute.enabled = true
roslynator_refactoring.change_accessibility.enabled = true
roslynator_refactoring.change_method_return_type_to_void.enabled = true
roslynator_refactoring.change_type_according_to_expression.enabled = true
roslynator_refactoring.check_expression_for_null.enabled = true
roslynator_refactoring.check_parameter_for_null.enabled = true
roslynator_refactoring.implement_custom_enumerator.enabled = true
roslynator_refactoring.implement_iequatable.enabled = true
roslynator_refactoring.initialize_field_from_constructor.enabled = true
roslynator_refactoring.initialize_local_variable_with_default_value.enabled = true
roslynator_refactoring.inline_alias_expression.enabled = true
roslynator_refactoring.inline_constant.enabled = true
roslynator_refactoring.inline_constant_value.enabled = true
roslynator_refactoring.inline_method.enabled = true
roslynator_refactoring.inline_property.enabled = true
roslynator_refactoring.inline_using_static.enabled = true
roslynator_refactoring.insert_string_interpolation.enabled = true
roslynator_refactoring.introduce_and_initialize_field.enabled = true
roslynator_refactoring.introduce_and_initialize_property.enabled = true
roslynator_refactoring.introduce_constructor.enabled = true
roslynator_refactoring.introduce_field_to_lock_on.enabled = true
roslynator_refactoring.introduce_local_variable.enabled = true
roslynator_refactoring.invert_binary_expression.enabled = true
roslynator_refactoring.invert_boolean_literal.enabled = true
roslynator_refactoring.invert_conditional_expression.enabled = true
roslynator_refactoring.invert_if.enabled = true
roslynator_refactoring.invert_if_else.enabled = true
roslynator_refactoring.invert_is_expression.enabled = true
roslynator_refactoring.invert_linq_method_call.enabled = true
roslynator_refactoring.invert_operator.enabled = true
roslynator_refactoring.invert_prefix_or_postfix_unary_expression.enabled = true
roslynator_refactoring.join_string_expressions.enabled = true
roslynator_refactoring.make_member_abstract.enabled = true
roslynator_refactoring.make_member_virtual.enabled = true
roslynator_refactoring.merge_attributes.enabled = true
roslynator_refactoring.merge_if_statements.enabled = true
roslynator_refactoring.merge_if_with_parent_if.enabled = true
roslynator_refactoring.merge_local_declarations.enabled = true
roslynator_refactoring.merge_switch_sections.enabled = true
roslynator_refactoring.move_unsafe_context_to_containing_declaration.enabled = true
roslynator_refactoring.notify_when_property_changes.enabled = true
roslynator_refactoring.parenthesize_expression.enabled = true
roslynator_refactoring.promote_local_variable_to_parameter.enabled = true
roslynator_refactoring.remove_all_comments.enabled = true
roslynator_refactoring.remove_all_comments_except_documentation_comments.enabled = true
roslynator_refactoring.remove_all_documentation_comments.enabled = true
roslynator_refactoring.remove_all_member_declarations.enabled = true
roslynator_refactoring.remove_all_preprocessor_directives.enabled = true
roslynator_refactoring.remove_all_region_directives.enabled = true
roslynator_refactoring.remove_all_statements.enabled = true
roslynator_refactoring.remove_all_switch_sections.enabled = true
roslynator_refactoring.remove_argument_name.enabled = true
roslynator_refactoring.remove_async_await.enabled = true
roslynator_refactoring.remove_braces.enabled = true
roslynator_refactoring.remove_braces_from_if_else.enabled = true
roslynator_refactoring.remove_braces_from_switch_section.enabled = true
roslynator_refactoring.remove_braces_from_switch_sections.enabled = true
roslynator_refactoring.remove_comment.enabled = true
roslynator_refactoring.remove_condition_from_last_else.enabled = true
roslynator_refactoring.remove_containing_statement.enabled = true
roslynator_refactoring.remove_empty_lines.enabled = true
roslynator_refactoring.remove_enum_member_value.enabled = true
roslynator_refactoring.remove_instantiation_of_local_variable.enabled = true
roslynator_refactoring.remove_interpolation.enabled = true
roslynator_refactoring.remove_member_declaration.enabled = true
roslynator_refactoring.remove_member_declarations_above_or_below.enabled = true
roslynator_refactoring.remove_parentheses.enabled = true
roslynator_refactoring.remove_preprocessor_directive.enabled = true
roslynator_refactoring.remove_property_initializer.enabled = true
roslynator_refactoring.remove_region.enabled = true
roslynator_refactoring.remove_statement.enabled = true
roslynator_refactoring.remove_unnecessary_assignment.enabled = true
roslynator_refactoring.rename_identifier_according_to_type_name.enabled = true
roslynator_refactoring.rename_method_according_to_type_name.enabled = true
roslynator_refactoring.rename_parameter_according_to_type_name.enabled = true
roslynator_refactoring.rename_property_according_to_type_name.enabled = true
roslynator_refactoring.replace_as_expression_with_explicit_cast.enabled = true
roslynator_refactoring.replace_conditional_expression_with_true_or_false_branch.enabled = true
roslynator_refactoring.replace_equality_operator_with_string_equals.enabled = true
roslynator_refactoring.replace_equality_operator_with_string_isnullorempty.enabled = true
roslynator_refactoring.replace_equality_operator_with_string_isnullorwhitespace.enabled = true
roslynator_refactoring.replace_explicit_cast_with_as_expression.enabled = true
roslynator_refactoring.replace_interpolated_string_with_interpolation_expression.enabled = true
roslynator_refactoring.replace_method_with_property.enabled = true
roslynator_refactoring.replace_null_literal_with_default_expression.enabled = true
roslynator_refactoring.replace_prefix_operator_with_postfix_operator.enabled = true
roslynator_refactoring.replace_property_with_method.enabled = true
roslynator_refactoring.reverse_for_statement.enabled = true
roslynator_refactoring.simplify_if.enabled = true
roslynator_refactoring.sort_case_labels.enabled = true
roslynator_refactoring.sort_member_declarations.enabled = true
roslynator_refactoring.split_attributes.enabled = true
roslynator_refactoring.split_if.enabled = true
roslynator_refactoring.split_if_else.enabled = true
roslynator_refactoring.split_switch_labels.enabled = true
roslynator_refactoring.split_variable_declaration.enabled = true
roslynator_refactoring.swap_binary_operands.enabled = true
roslynator_refactoring.swap_member_declarations.enabled = true
roslynator_refactoring.sync_property_name_and_backing_field_name.enabled = true
roslynator_refactoring.uncomment_multiline_comment.enabled = true
roslynator_refactoring.uncomment_singleline_comment.enabled = true
roslynator_refactoring.use_coalesce_expression_instead_of_if.enabled = true
roslynator_refactoring.use_constant_instead_of_readonly_field.enabled = true
roslynator_refactoring.use_element_access_instead_of_linq_method.enabled = true
roslynator_refactoring.use_enumerator_explicitly.enabled = true
roslynator_refactoring.use_explicit_type.enabled = true
roslynator_refactoring.use_implicit_type.enabled = true
roslynator_refactoring.use_index_initializer.enabled = true
roslynator_refactoring.use_lambda_instead_of_anonymous_method.enabled = true
roslynator_refactoring.use_list_instead_of_yield.enabled = true
roslynator_refactoring.use_object_initializer.enabled = true
roslynator_refactoring.use_readonly_field_instead_of_constant.enabled = true
roslynator_refactoring.use_string_empty_instead_of_empty_string_literal.enabled = true
roslynator_refactoring.use_stringbuilder_instead_of_concatenation.enabled = true
roslynator_refactoring.wrap_arguments.enabled = true
roslynator_refactoring.wrap_binary_expression.enabled = true
roslynator_refactoring.wrap_call_chain.enabled = true
roslynator_refactoring.wrap_conditional_expression.enabled = true
roslynator_refactoring.wrap_constraint_clauses.enabled = true
roslynator_refactoring.wrap_initializer_expressions.enabled = true
roslynator_refactoring.wrap_lines_in_preprocessor_directive.enabled = true
roslynator_refactoring.wrap_lines_in_region.enabled = true
roslynator_refactoring.wrap_lines_in_try_catch.enabled = true
roslynator_refactoring.wrap_parameters.enabled = true
roslynator_refactoring.wrap_statements_in_condition.enabled = true
roslynator_refactoring.wrap_statements_in_using_statement.enabled = true

# Compiler diagnostic fixes

roslynator_compiler_diagnostic_fix.cs0019.enabled = true
roslynator_compiler_diagnostic_fix.cs0021.enabled = true
roslynator_compiler_diagnostic_fix.cs0023.enabled = true
roslynator_compiler_diagnostic_fix.cs0029.enabled = true
roslynator_compiler_diagnostic_fix.cs0030.enabled = true
roslynator_compiler_diagnostic_fix.cs0037.enabled = true
roslynator_compiler_diagnostic_fix.cs0069.enabled = true
roslynator_compiler_diagnostic_fix.cs0077.enabled = true
roslynator_compiler_diagnostic_fix.cs0080.enabled = true
roslynator_compiler_diagnostic_fix.cs0101.enabled = true
roslynator_compiler_diagnostic_fix.cs0102.enabled = true
roslynator_compiler_diagnostic_fix.cs0103.enabled = true
roslynator_compiler_diagnostic_fix.cs0106.enabled = true
roslynator_compiler_diagnostic_fix.cs0107.enabled = true
roslynator_compiler_diagnostic_fix.cs0108.enabled = true
roslynator_compiler_diagnostic_fix.cs0109.enabled = true
roslynator_compiler_diagnostic_fix.cs0112.enabled = true
roslynator_compiler_diagnostic_fix.cs0114.enabled = true
roslynator_compiler_diagnostic_fix.cs0115.enabled = true
roslynator_compiler_diagnostic_fix.cs0119.enabled = true
roslynator_compiler_diagnostic_fix.cs0120.enabled = true
roslynator_compiler_diagnostic_fix.cs0123.enabled = true
roslynator_compiler_diagnostic_fix.cs0126.enabled = true
roslynator_compiler_diagnostic_fix.cs0127.enabled = true
roslynator_compiler_diagnostic_fix.cs0128.enabled = true
roslynator_compiler_diagnostic_fix.cs0131.enabled = true
roslynator_compiler_diagnostic_fix.cs0132.enabled = true
roslynator_compiler_diagnostic_fix.cs0133.enabled = true
roslynator_compiler_diagnostic_fix.cs0136.enabled = true
roslynator_compiler_diagnostic_fix.cs0139.enabled = true
roslynator_compiler_diagnostic_fix.cs0152.enabled = true
roslynator_compiler_diagnostic_fix.cs0161.enabled = true
roslynator_compiler_diagnostic_fix.cs0162.enabled = true
roslynator_compiler_diagnostic_fix.cs0163.enabled = true
roslynator_compiler_diagnostic_fix.cs0164.enabled = true
roslynator_compiler_diagnostic_fix.cs0165.enabled = true
roslynator_compiler_diagnostic_fix.cs0168.enabled = true
roslynator_compiler_diagnostic_fix.cs0173.enabled = true
roslynator_compiler_diagnostic_fix.cs0177.enabled = true
roslynator_compiler_diagnostic_fix.cs0191.enabled = true
roslynator_compiler_diagnostic_fix.cs0192.enabled = true
roslynator_compiler_diagnostic_fix.cs0201.enabled = true
roslynator_compiler_diagnostic_fix.cs0214.enabled = true
roslynator_compiler_diagnostic_fix.cs0216.enabled = true
roslynator_compiler_diagnostic_fix.cs0219.enabled = true
roslynator_compiler_diagnostic_fix.cs0221.enabled = true
roslynator_compiler_diagnostic_fix.cs0225.enabled = true
roslynator_compiler_diagnostic_fix.cs0238.enabled = true
roslynator_compiler_diagnostic_fix.cs0246.enabled = true
roslynator_compiler_diagnostic_fix.cs0260.enabled = true
roslynator_compiler_diagnostic_fix.cs0262.enabled = true
roslynator_compiler_diagnostic_fix.cs0266.enabled = true
roslynator_compiler_diagnostic_fix.cs0267.enabled = true
roslynator_compiler_diagnostic_fix.cs0272.enabled = true
roslynator_compiler_diagnostic_fix.cs0275.enabled = true
roslynator_compiler_diagnostic_fix.cs0305.enabled = true
roslynator_compiler_diagnostic_fix.cs0401.enabled = true
roslynator_compiler_diagnostic_fix.cs0403.enabled = true
roslynator_compiler_diagnostic_fix.cs0405.enabled = true
roslynator_compiler_diagnostic_fix.cs0407.enabled = true
roslynator_compiler_diagnostic_fix.cs0409.enabled = true
roslynator_compiler_diagnostic_fix.cs0428.enabled = true
roslynator_compiler_diagnostic_fix.cs0441.enabled = true
roslynator_compiler_diagnostic_fix.cs0442.enabled = true
roslynator_compiler_diagnostic_fix.cs0449.enabled = true
roslynator_compiler_diagnostic_fix.cs0450.enabled = true
roslynator_compiler_diagnostic_fix.cs0451.enabled = true
roslynator_compiler_diagnostic_fix.cs0472.enabled = true
roslynator_compiler_diagnostic_fix.cs0500.enabled = true
roslynator_compiler_diagnostic_fix.cs0501.enabled = true
roslynator_compiler_diagnostic_fix.cs0507.enabled = true
roslynator_compiler_diagnostic_fix.cs0508.enabled = true
roslynator_compiler_diagnostic_fix.cs0513.enabled = true
roslynator_compiler_diagnostic_fix.cs0515.enabled = true
roslynator_compiler_diagnostic_fix.cs0524.enabled = true
roslynator_compiler_diagnostic_fix.cs0525.enabled = true
roslynator_compiler_diagnostic_fix.cs0527.enabled = true
roslynator_compiler_diagnostic_fix.cs0531.enabled = true
roslynator_compiler_diagnostic_fix.cs0539.enabled = true
roslynator_compiler_diagnostic_fix.cs0541.enabled = true
roslynator_compiler_diagnostic_fix.cs0549.enabled = true
roslynator_compiler_diagnostic_fix.cs0558.enabled = true
roslynator_compiler_diagnostic_fix.cs0567.enabled = true
roslynator_compiler_diagnostic_fix.cs0568.enabled = true
roslynator_compiler_diagnostic_fix.cs0573.enabled = true
roslynator_compiler_diagnostic_fix.cs0574.enabled = true
roslynator_compiler_diagnostic_fix.cs0575.enabled = true
roslynator_compiler_diagnostic_fix.cs0579.enabled = true
roslynator_compiler_diagnostic_fix.cs0592.enabled = true
roslynator_compiler_diagnostic_fix.cs0621.enabled = true
roslynator_compiler_diagnostic_fix.cs0628.enabled = true
roslynator_compiler_diagnostic_fix.cs0659.enabled = true
roslynator_compiler_diagnostic_fix.cs0660.enabled = true
roslynator_compiler_diagnostic_fix.cs0661.enabled = true
roslynator_compiler_diagnostic_fix.cs0678.enabled = true
roslynator_compiler_diagnostic_fix.cs0693.enabled = true
roslynator_compiler_diagnostic_fix.cs0708.enabled = true
roslynator_compiler_diagnostic_fix.cs0710.enabled = true
roslynator_compiler_diagnostic_fix.cs0713.enabled = true
roslynator_compiler_diagnostic_fix.cs0714.enabled = true
roslynator_compiler_diagnostic_fix.cs0718.enabled = true
roslynator_compiler_diagnostic_fix.cs0750.enabled = true
roslynator_compiler_diagnostic_fix.cs0751.enabled = true
roslynator_compiler_diagnostic_fix.cs0753.enabled = true
roslynator_compiler_diagnostic_fix.cs0756.enabled = true
roslynator_compiler_diagnostic_fix.cs0759.enabled = true
roslynator_compiler_diagnostic_fix.cs0766.enabled = true
roslynator_compiler_diagnostic_fix.cs0815.enabled = true
roslynator_compiler_diagnostic_fix.cs0819.enabled = true
roslynator_compiler_diagnostic_fix.cs0822.enabled = true
roslynator_compiler_diagnostic_fix.cs1002.enabled = true
roslynator_compiler_diagnostic_fix.cs1003.enabled = true
roslynator_compiler_diagnostic_fix.cs1004.enabled = true
roslynator_compiler_diagnostic_fix.cs1012.enabled = true
roslynator_compiler_diagnostic_fix.cs1023.enabled = true
roslynator_compiler_diagnostic_fix.cs1031.enabled = true
roslynator_compiler_diagnostic_fix.cs1057.enabled = true
roslynator_compiler_diagnostic_fix.cs1061.enabled = true
roslynator_compiler_diagnostic_fix.cs1100.enabled = true
roslynator_compiler_diagnostic_fix.cs1105.enabled = true
roslynator_compiler_diagnostic_fix.cs1106.enabled = true
roslynator_compiler_diagnostic_fix.cs1503.enabled = true
roslynator_compiler_diagnostic_fix.cs1522.enabled = true
roslynator_compiler_diagnostic_fix.cs1526.enabled = true
roslynator_compiler_diagnostic_fix.cs1527.enabled = true
roslynator_compiler_diagnostic_fix.cs1591.enabled = true
roslynator_compiler_diagnostic_fix.cs1597.enabled = true
roslynator_compiler_diagnostic_fix.cs1609.enabled = true
roslynator_compiler_diagnostic_fix.cs1615.enabled = true
roslynator_compiler_diagnostic_fix.cs1620.enabled = true
roslynator_compiler_diagnostic_fix.cs1621.enabled = true
roslynator_compiler_diagnostic_fix.cs1622.enabled = true
roslynator_compiler_diagnostic_fix.cs1623.enabled = true
roslynator_compiler_diagnostic_fix.cs1624.enabled = true
roslynator_compiler_diagnostic_fix.cs1643.enabled = true
roslynator_compiler_diagnostic_fix.cs1674.enabled = true
roslynator_compiler_diagnostic_fix.cs1689.enabled = true
roslynator_compiler_diagnostic_fix.cs1715.enabled = true
roslynator_compiler_diagnostic_fix.cs1717.enabled = true
roslynator_compiler_diagnostic_fix.cs1722.enabled = true
roslynator_compiler_diagnostic_fix.cs1737.enabled = true
roslynator_compiler_diagnostic_fix.cs1741.enabled = true
roslynator_compiler_diagnostic_fix.cs1743.enabled = true
roslynator_compiler_diagnostic_fix.cs1750.enabled = true
roslynator_compiler_diagnostic_fix.cs1751.enabled = true
roslynator_compiler_diagnostic_fix.cs1955.enabled = true
roslynator_compiler_diagnostic_fix.cs1983.enabled = true
roslynator_compiler_diagnostic_fix.cs1988.enabled = true
roslynator_compiler_diagnostic_fix.cs1994.enabled = true
roslynator_compiler_diagnostic_fix.cs1997.enabled = true
roslynator_compiler_diagnostic_fix.cs3000.enabled = true
roslynator_compiler_diagnostic_fix.cs3001.enabled = true
roslynator_compiler_diagnostic_fix.cs3002.enabled = true
roslynator_compiler_diagnostic_fix.cs3003.enabled = true
roslynator_compiler_diagnostic_fix.cs3005.enabled = true
roslynator_compiler_diagnostic_fix.cs3006.enabled = true
roslynator_compiler_diagnostic_fix.cs3007.enabled = true
roslynator_compiler_diagnostic_fix.cs3008.enabled = true
roslynator_compiler_diagnostic_fix.cs3009.enabled = true
roslynator_compiler_diagnostic_fix.cs3016.enabled = true
roslynator_compiler_diagnostic_fix.cs3024.enabled = true
roslynator_compiler_diagnostic_fix.cs3027.enabled = true
roslynator_compiler_diagnostic_fix.cs7036.enabled = true
roslynator_compiler_diagnostic_fix.cs8050.enabled = true
roslynator_compiler_diagnostic_fix.cs8070.enabled = true
roslynator_compiler_diagnostic_fix.cs8112.enabled = true
roslynator_compiler_diagnostic_fix.cs8139.enabled = true
roslynator_compiler_diagnostic_fix.cs8340.enabled = true
roslynator_compiler_diagnostic_fix.cs8403.enabled = true
roslynator_compiler_diagnostic_fix.cs8618.enabled = true
roslynator_compiler_diagnostic_fix.cs8625.enabled = true
roslynator_compiler_diagnostic_fix.cs8632.enabled = true

ij_xml_align_attributes = true
ij_xml_align_text = false
ij_xml_attribute_wrap = normal
ij_xml_block_comment_at_first_column = true
ij_xml_keep_blank_lines = 2
ij_xml_keep_indents_on_empty_lines = false
ij_xml_keep_line_breaks = true
ij_xml_keep_line_breaks_in_text = true
ij_xml_keep_whitespaces = true
ij_xml_keep_whitespaces_around_cdata = preserve
ij_xml_keep_whitespaces_inside_cdata = false
ij_xml_line_comment_at_first_column = true
ij_xml_space_after_tag_name = false
ij_xml_space_around_equals_in_attribute = false
ij_xml_space_inside_empty_tag = true
ij_xml_text_wrap = off

# Microsoft .NET properties
dotnet_naming_rule.unity_serialized_field_rule.import_to_resharper = True
dotnet_naming_rule.unity_serialized_field_rule.resharper_description = Unity serialized field
dotnet_naming_rule.unity_serialized_field_rule.resharper_guid = 5f0fdb63-c892-4d2c-9324-15c80b22a7ef
dotnet_naming_rule.unity_serialized_field_rule.severity = warning
dotnet_naming_rule.unity_serialized_field_rule.style = lower_camel_case_style
dotnet_naming_rule.unity_serialized_field_rule.symbols = unity_serialized_field_symbols
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_accessibilities = *
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_kinds =
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_applicable_kinds = unity_serialised_field
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_required_modifiers = instance

[*.{appxmanifest,asax,ascx,aspx,axaml,build,cg,cginc,compute,dtd,fs,fsi,fsscript,fsx,hlsl,hlsli,hlslinc,master,ml,mli,nuspec,paml,resw,resx,shader,skin,usf,ush,vb,xaml,xamlx,xoml,xsd}]
indent_style = space
indent_size = 4
tab_width = 4
