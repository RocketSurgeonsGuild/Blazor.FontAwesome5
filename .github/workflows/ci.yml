# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsSteps (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_ci --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: ci

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'next'
    tags:
      - 'v*'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'next'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: write
  discussions: none
  packages: none
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: write
env:
  FONT_AWESOME_API_KEY: '${{ secrets.FONT_AWESOME_API_KEY }}'

jobs:
  build:
    permissions:
      actions: read
      checks: write
      contents: read
      deployments: read
      id-token: none
      issues: write
      discussions: none
      packages: none
      pages: none
      pull-requests: write
      repository-projects: none
      security-events: none
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          clean: 'false'
          fetch-depth: '0'
      - name: 🔨 Use .NET Core 8.0 SDK
        uses: actions/setup-dotnet@v4.2.0
        with:
          dotnet-version: '8.0.x'
      - name: 🔨 Use .NET Core 9.0 SDK
        uses: actions/setup-dotnet@v4.2.0
        with:
          dotnet-version: '9.0.x'
      - name: 🚒 dotnet workload restore
        continue-on-error: true
        run: |
          dotnet workload restore
      - name: ⚒️ dotnet tool restore
        run: |
          dotnet tool restore
      - name: 🎁 Restore
        id: restore
        run: |
          dotnet nuke --target DotnetCoreRestore Restore --FontAwesomeToken "${{ secrets.FONT_AWESOME_TOKEN }}"
      - name: ⚙️ Build
        id: build
        run: |
          dotnet .build/bin/Debug/.build.dll --target DotnetCoreBuild Build --FontAwesomeToken "${{ secrets.FONT_AWESOME_TOKEN }}"
      - name: 💨 Test
        id: test
        run: |
          dotnet .build/bin/Debug/.build.dll --target DotnetCoreTest Test CollectCodeCoverage GenerateCodeCoverageReportCobertura GenerateCodeCoverageBadges GenerateCodeCoverageSummary GenerateCodeCoverageReport --FontAwesomeToken "${{ secrets.FONT_AWESOME_TOKEN }}"
      - name: 📦 Pack
        id: pack
        run: |
          dotnet .build/bin/Debug/.build.dll --target DotnetCorePack Pack --skip Build --FontAwesomeToken "${{ secrets.FONT_AWESOME_TOKEN }}"
      - name: Default
        id: default
        run: |
          dotnet .build/bin/Debug/.build.dll --target Default --skip Restore Build Test Pack --FontAwesomeToken "${{ secrets.FONT_AWESOME_TOKEN }}"
      - name: 🏺 Publish logs
        if: always()
        uses: actions/upload-artifact@v4.6.0
        with:
          name: 'logs'
          path: 'artifacts/logs/'
      - name: 🏺 Publish test data
        if: always()
        uses: actions/upload-artifact@v4.6.0
        with:
          name: 'test data'
          path: 'artifacts/test/'
      - name: 🚀 Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: 'artifacts/test/**/*.trx'
      - name: 🏺 Publish coverage data
        if: always()
        uses: actions/upload-artifact@v4.6.0
        with:
          name: 'coverage'
          path: 'coverage/'
      - name: 🚀 Publish Coverage Comment
        if: always() && github.event_name == 'pull_request'
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: 'Coverage'
          path: 'coverage/summary/SummaryGithub.md'
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: 🚀 Publish Codecov Coverage
        if: always() && (github.event_name != 'pull_request' && github.event_name != 'pull_request_target') || ((github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.pull_request.user.login != 'renovate[bot]' && github.event.pull_request.user.login != 'dependabot[bot]')
        continue-on-error: true
        uses: codecov/codecov-action@v5.3.1
        with:
          name: 'actions'
          token: '${{ secrets.CODECOV_TOKEN }}'
      - name: 🏺 Publish NuGet Packages
        if: always()
        uses: actions/upload-artifact@v4.6.0
        with:
          name: 'nuget'
          path: 'artifacts/nuget/'
