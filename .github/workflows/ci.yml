# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsSteps (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_ci --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: ci

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'next'
    tags:
      - 'v*'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'next'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: write
  discussions: none
  packages: none
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b6849436894e144dbce29d7d7fda2ae3bf9d8365
        with:
          clean: 'false'
          fetch-depth: '0'
      - name: 🔨 Use .NET Core 8.0 SDK
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: '8.0.x'
      - name: 🚒 dotnet workload restore
        continue-on-error: true
        run: |
          dotnet workload restore
      - name: ⚒️ dotnet tool restore
        run: |
          dotnet tool restore
      - name: 🎁 Restore
        id: restore
        run: |
          dotnet nuke DotnetCoreRestore Restore --skip
      - name: ⚙️ Build
        id: build
        run: |
          dotnet nuke DotnetCoreBuild Build --skip
      - name: 🚦 Test
        id: test
        run: |
          dotnet nuke DotnetCoreTest Test TriggerCodeCoverageReports GenerateCodeCoverageReportCobertura GenerateCodeCoverageBadges GenerateCodeCoverageSummary GenerateCodeCoverageReport --skip
      - name: 📦 Pack
        id: pack
        run: |
          dotnet nuke DotnetCorePack Pack --skip
      - name: 🏺 Publish coverage data
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: 'coverage'
          path: 'coverage/'
      - name: 📫 Publish Coverage
        if: (github.event_name != 'pull_request' && github.event_name != 'pull_request_target') || ((github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.pull_request.user.login != 'renovate[bot]' && github.event.pull_request.user.login != 'dependabot[bot]')
        uses: codecov/codecov-action@v4.5.0
        with:
          name: 'actions-${{ matrix.os }}'
          token: '${{ secrets.CODECOV_TOKEN }}'
      - name: 🏺 Publish logs
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: 'logs'
          path: 'artifacts/logs/'
      - name: 🏺 Publish test data
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: 'test data'
          path: 'artifacts/test/'
      - name: 🏺 Publish NuGet Packages
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: 'nuget'
          path: 'artifacts/nuget/'
  Publish:
    needs:
      - Build
    uses: RocketSurgeonsGuild/actions/.github/workflows/publish-nuget.yml@v0.3.10
    secrets:
      RSG_NUGET_API_KEY: '${{ secrets.RSG_NUGET_API_KEY }}'
      RSG_AZURE_DEVOPS: '${{ secrets.RSG_AZURE_DEVOPS }}'
