# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsLint (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_lint --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: lint

on:
  pull_request_target:
    branches:
      - 'master'
      - 'main'
      - 'next'
permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  id-token: none
  issues: write
  discussions: none
  packages: none
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: write
concurrency:
  group: 'lint-${{ github.event.pull_request.number }}'
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: '${{ github.event.pull_request.head.repo.full_name }}'
          ref: '${{ github.event.pull_request.head.ref }}'
          token: '${{ secrets.RSG_BOT_TOKEN }}'
          clean: 'false'
          fetch-depth: '0'
      - name: Get Head Commit Message
        id: commit-message
        run: |
          echo "message=$(git show -s --format=%s)" >> "$GITHUB_OUTPUT"
      - name: 🔨 Use .NET Core 6.0 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
      - name: 🔨 Use .NET Core 8.0 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: 🚒 dotnet workload restore
        continue-on-error: true
        run: |
          dotnet workload restore
      - name: ⚒️ dotnet tool restore
        run: |
          dotnet tool restore
      - name: 🎁 Restore
        id: restore
        run: |
          dotnet nuke DotnetCoreRestore Restore --skip
      - name: Lint
        id: lint
        run: |
          dotnet nuke Lint --skip
      - name: Regenerate Build Configurations
        id: regenerateBuildConfigurations
        run: |
          dotnet nuke RegenerateBuildConfigurations --skip
      - name: Lint Public Api Analyzers
        id: lintPublicApiAnalyzers
        run: |
          dotnet nuke LintPublicApiAnalyzers --skip
      - name: Prettier
        id: prettier
        run: |
          dotnet nuke Prettier --skip
      - name: Dotnet Format
        id: dotnetFormat
        run: |
          dotnet nuke DotnetFormat --skip
      - name: Jet Brains Cleanup Code
        id: jetBrainsCleanupCode
        run: |
          dotnet nuke JetBrainsCleanupCode --skip
      - name: Generate Solution Items
        id: generateSolutionItems
        run: |
          dotnet nuke GenerateSolutionItems --skip
      - name: Generate Readme
        id: generateReadme
        run: |
          dotnet nuke GenerateReadme --skip
      - name: Move Unshipped to Shipped
        id: moveUnshippedToShipped
        run: |
          dotnet nuke MoveUnshippedToShipped --skip
      - name: Lint Git Add
        id: lintGitAdd
        run: |
          dotnet nuke LintGitAdd --skip
      - name: Add & Commit
        env:
          GITHUB_TOKEN: '${{ secrets.RSG_BOT_TOKEN }}'
        if: "contains('${{ steps.commit-message.outputs.message }}', 'Automatically linting code')"
        uses: planetscale/ghcommit-action@v0.1.44
        with:
          commit_message: 'Automatically linting code'
          repo: '${{ github.repository }}'
          branch: '${{ github.event.pull_request.head.ref }}'
