using System;
using Rocket.Surgery.Blazor.FontAwesome6;
namespace Rocket.Surgery.Blazor.FontAwesome6.Free;
public static partial class FaRegular
{
   private static Icon? AddressBookf;
   public static Icon AddressBook => AddressBookf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "address-book");
   public static Icon ContactBook => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.AddressBook;
   private static Icon? AddressCardf;
   public static Icon AddressCard => AddressCardf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "address-card");
   public static Icon ContactCard => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.AddressCard;
   public static Icon Vcard => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.AddressCard;
   private static Icon? Bellf;
   public static Icon Bell => Bellf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "bell");
   private static Icon? BellSlashf;
   public static Icon BellSlash => BellSlashf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "bell-slash");
   private static Icon? Bookmarkf;
   public static Icon Bookmark => Bookmarkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "bookmark");
   private static Icon? Buildingf;
   public static Icon Building => Buildingf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "building");
   private static Icon? Calendarf;
   public static Icon Calendar => Calendarf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "calendar");
   private static Icon? CalendarCheckf;
   public static Icon CalendarCheck => CalendarCheckf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "calendar-check");
   private static Icon? CalendarDaysf;
   public static Icon CalendarDays => CalendarDaysf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "calendar-days");
   public static Icon CalendarAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CalendarDays;
   private static Icon? CalendarMinusf;
   public static Icon CalendarMinus => CalendarMinusf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "calendar-minus");
   private static Icon? CalendarPlusf;
   public static Icon CalendarPlus => CalendarPlusf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "calendar-plus");
   private static Icon? CalendarXmarkf;
   public static Icon CalendarXmark => CalendarXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "calendar-xmark");
   public static Icon CalendarTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CalendarXmark;
   private static Icon? ChartBarf;
   public static Icon ChartBar => ChartBarf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chart-bar");
   public static Icon BarChart => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.ChartBar;
   private static Icon? ChessBishopf;
   public static Icon ChessBishop => ChessBishopf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chess-bishop");
   private static Icon? ChessKingf;
   public static Icon ChessKing => ChessKingf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chess-king");
   private static Icon? ChessKnightf;
   public static Icon ChessKnight => ChessKnightf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chess-knight");
   private static Icon? ChessPawnf;
   public static Icon ChessPawn => ChessPawnf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chess-pawn");
   private static Icon? ChessQueenf;
   public static Icon ChessQueen => ChessQueenf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chess-queen");
   private static Icon? ChessRookf;
   public static Icon ChessRook => ChessRookf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "chess-rook");
   private static Icon? Circlef;
   public static Icon Circle => Circlef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle");
   private static Icon? CircleCheckf;
   public static Icon CircleCheck => CircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-check");
   public static Icon CheckCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleCheck;
   private static Icon? CircleDotf;
   public static Icon CircleDot => CircleDotf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-dot");
   public static Icon DotCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleDot;
   private static Icon? CircleDownf;
   public static Icon CircleDown => CircleDownf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-down");
   public static Icon ArrowAltCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleDown;
   private static Icon? CircleLeftf;
   public static Icon CircleLeft => CircleLeftf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-left");
   public static Icon ArrowAltCircleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleLeft;
   private static Icon? CirclePausef;
   public static Icon CirclePause => CirclePausef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-pause");
   public static Icon PauseCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CirclePause;
   private static Icon? CirclePlayf;
   public static Icon CirclePlay => CirclePlayf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-play");
   public static Icon PlayCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CirclePlay;
   private static Icon? CircleQuestionf;
   public static Icon CircleQuestion => CircleQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-question");
   public static Icon QuestionCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleQuestion;
   private static Icon? CircleRightf;
   public static Icon CircleRight => CircleRightf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-right");
   public static Icon ArrowAltCircleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleRight;
   private static Icon? CircleStopf;
   public static Icon CircleStop => CircleStopf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-stop");
   public static Icon StopCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleStop;
   private static Icon? CircleUpf;
   public static Icon CircleUp => CircleUpf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-up");
   public static Icon ArrowAltCircleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleUp;
   private static Icon? CircleUserf;
   public static Icon CircleUser => CircleUserf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-user");
   public static Icon UserCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleUser;
   private static Icon? CircleXmarkf;
   public static Icon CircleXmark => CircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "circle-xmark");
   public static Icon TimesCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleXmark;
   public static Icon XmarkCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CircleXmark;
   private static Icon? Clipboardf;
   public static Icon Clipboard => Clipboardf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "clipboard");
   private static Icon? Clockf;
   public static Icon Clock => Clockf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "clock");
   public static Icon ClockFour => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Clock;
   private static Icon? Clonef;
   public static Icon Clone => Clonef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "clone");
   private static Icon? ClosedCaptioningf;
   public static Icon ClosedCaptioning => ClosedCaptioningf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "closed-captioning");
   private static Icon? Commentf;
   public static Icon Comment => Commentf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "comment");
   private static Icon? CommentDotsf;
   public static Icon CommentDots => CommentDotsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "comment-dots");
   public static Icon Commenting => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CommentDots;
   private static Icon? Commentsf;
   public static Icon Comments => Commentsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "comments");
   private static Icon? Compassf;
   public static Icon Compass => Compassf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "compass");
   private static Icon? Copyf;
   public static Icon Copy => Copyf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "copy");
   private static Icon? Copyrightf;
   public static Icon Copyright => Copyrightf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "copyright");
   private static Icon? CreditCardf;
   public static Icon CreditCard => CreditCardf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "credit-card");
   public static Icon CreditCardAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.CreditCard;
   private static Icon? Envelopef;
   public static Icon Envelope => Envelopef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "envelope");
   private static Icon? EnvelopeOpenf;
   public static Icon EnvelopeOpen => EnvelopeOpenf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "envelope-open");
   private static Icon? Eyef;
   public static Icon Eye => Eyef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "eye");
   private static Icon? EyeSlashf;
   public static Icon EyeSlash => EyeSlashf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "eye-slash");
   private static Icon? FaceAngryf;
   public static Icon FaceAngry => FaceAngryf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-angry");
   public static Icon Angry => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceAngry;
   private static Icon? FaceDizzyf;
   public static Icon FaceDizzy => FaceDizzyf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-dizzy");
   public static Icon Dizzy => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceDizzy;
   private static Icon? FaceFlushedf;
   public static Icon FaceFlushed => FaceFlushedf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-flushed");
   public static Icon Flushed => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceFlushed;
   private static Icon? FaceFrownf;
   public static Icon FaceFrown => FaceFrownf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-frown");
   public static Icon Frown => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceFrown;
   private static Icon? FaceFrownOpenf;
   public static Icon FaceFrownOpen => FaceFrownOpenf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-frown-open");
   public static Icon FrownOpen => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceFrownOpen;
   private static Icon? FaceGrimacef;
   public static Icon FaceGrimace => FaceGrimacef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grimace");
   public static Icon Grimace => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrimace;
   private static Icon? FaceGrinf;
   public static Icon FaceGrin => FaceGrinf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin");
   public static Icon Grin => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrin;
   private static Icon? FaceGrinBeamf;
   public static Icon FaceGrinBeam => FaceGrinBeamf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-beam");
   public static Icon GrinBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinBeam;
   private static Icon? FaceGrinBeamSweatf;
   public static Icon FaceGrinBeamSweat => FaceGrinBeamSweatf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-beam-sweat");
   public static Icon GrinBeamSweat => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinBeamSweat;
   private static Icon? FaceGrinHeartsf;
   public static Icon FaceGrinHearts => FaceGrinHeartsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-hearts");
   public static Icon GrinHearts => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinHearts;
   private static Icon? FaceGrinSquintf;
   public static Icon FaceGrinSquint => FaceGrinSquintf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-squint");
   public static Icon GrinSquint => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinSquint;
   private static Icon? FaceGrinSquintTearsf;
   public static Icon FaceGrinSquintTears => FaceGrinSquintTearsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-squint-tears");
   public static Icon GrinSquintTears => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinSquintTears;
   private static Icon? FaceGrinStarsf;
   public static Icon FaceGrinStars => FaceGrinStarsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-stars");
   public static Icon GrinStars => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinStars;
   private static Icon? FaceGrinTearsf;
   public static Icon FaceGrinTears => FaceGrinTearsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-tears");
   public static Icon GrinTears => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinTears;
   private static Icon? FaceGrinTonguef;
   public static Icon FaceGrinTongue => FaceGrinTonguef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-tongue");
   public static Icon GrinTongue => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinTongue;
   private static Icon? FaceGrinTongueSquintf;
   public static Icon FaceGrinTongueSquint => FaceGrinTongueSquintf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-tongue-squint");
   public static Icon GrinTongueSquint => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinTongueSquint;
   private static Icon? FaceGrinTongueWinkf;
   public static Icon FaceGrinTongueWink => FaceGrinTongueWinkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-tongue-wink");
   public static Icon GrinTongueWink => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinTongueWink;
   private static Icon? FaceGrinWidef;
   public static Icon FaceGrinWide => FaceGrinWidef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-wide");
   public static Icon GrinAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinWide;
   private static Icon? FaceGrinWinkf;
   public static Icon FaceGrinWink => FaceGrinWinkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-grin-wink");
   public static Icon GrinWink => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceGrinWink;
   private static Icon? FaceKissf;
   public static Icon FaceKiss => FaceKissf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-kiss");
   public static Icon Kiss => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceKiss;
   private static Icon? FaceKissBeamf;
   public static Icon FaceKissBeam => FaceKissBeamf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-kiss-beam");
   public static Icon KissBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceKissBeam;
   private static Icon? FaceKissWinkHeartf;
   public static Icon FaceKissWinkHeart => FaceKissWinkHeartf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-kiss-wink-heart");
   public static Icon KissWinkHeart => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceKissWinkHeart;
   private static Icon? FaceLaughf;
   public static Icon FaceLaugh => FaceLaughf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-laugh");
   public static Icon Laugh => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceLaugh;
   private static Icon? FaceLaughBeamf;
   public static Icon FaceLaughBeam => FaceLaughBeamf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-laugh-beam");
   public static Icon LaughBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceLaughBeam;
   private static Icon? FaceLaughSquintf;
   public static Icon FaceLaughSquint => FaceLaughSquintf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-laugh-squint");
   public static Icon LaughSquint => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceLaughSquint;
   private static Icon? FaceLaughWinkf;
   public static Icon FaceLaughWink => FaceLaughWinkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-laugh-wink");
   public static Icon LaughWink => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceLaughWink;
   private static Icon? FaceMehf;
   public static Icon FaceMeh => FaceMehf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-meh");
   public static Icon Meh => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceMeh;
   private static Icon? FaceMehBlankf;
   public static Icon FaceMehBlank => FaceMehBlankf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-meh-blank");
   public static Icon MehBlank => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceMehBlank;
   private static Icon? FaceRollingEyesf;
   public static Icon FaceRollingEyes => FaceRollingEyesf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-rolling-eyes");
   public static Icon MehRollingEyes => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceRollingEyes;
   private static Icon? FaceSadCryf;
   public static Icon FaceSadCry => FaceSadCryf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-sad-cry");
   public static Icon SadCry => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceSadCry;
   private static Icon? FaceSadTearf;
   public static Icon FaceSadTear => FaceSadTearf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-sad-tear");
   public static Icon SadTear => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceSadTear;
   private static Icon? FaceSmilef;
   public static Icon FaceSmile => FaceSmilef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-smile");
   public static Icon Smile => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceSmile;
   private static Icon? FaceSmileBeamf;
   public static Icon FaceSmileBeam => FaceSmileBeamf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-smile-beam");
   public static Icon SmileBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceSmileBeam;
   private static Icon? FaceSmileWinkf;
   public static Icon FaceSmileWink => FaceSmileWinkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-smile-wink");
   public static Icon SmileWink => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceSmileWink;
   private static Icon? FaceSurprisef;
   public static Icon FaceSurprise => FaceSurprisef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-surprise");
   public static Icon Surprise => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceSurprise;
   private static Icon? FaceTiredf;
   public static Icon FaceTired => FaceTiredf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "face-tired");
   public static Icon Tired => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FaceTired;
   private static Icon? Filef;
   public static Icon File => Filef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file");
   private static Icon? FileAudiof;
   public static Icon FileAudio => FileAudiof ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-audio");
   private static Icon? FileCodef;
   public static Icon FileCode => FileCodef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-code");
   private static Icon? FileExcelf;
   public static Icon FileExcel => FileExcelf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-excel");
   private static Icon? FileImagef;
   public static Icon FileImage => FileImagef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-image");
   private static Icon? FileLinesf;
   public static Icon FileLines => FileLinesf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-lines");
   public static Icon FileAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FileLines;
   public static Icon FileText => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FileLines;
   private static Icon? FilePdff;
   public static Icon FilePdf => FilePdff ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-pdf");
   private static Icon? FilePowerpointf;
   public static Icon FilePowerpoint => FilePowerpointf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-powerpoint");
   private static Icon? FileVideof;
   public static Icon FileVideo => FileVideof ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-video");
   private static Icon? FileWordf;
   public static Icon FileWord => FileWordf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-word");
   private static Icon? FileZipperf;
   public static Icon FileZipper => FileZipperf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "file-zipper");
   public static Icon FileArchive => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FileZipper;
   private static Icon? Flagf;
   public static Icon Flag => Flagf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "flag");
   private static Icon? FloppyDiskf;
   public static Icon FloppyDisk => FloppyDiskf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "floppy-disk");
   public static Icon Save => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FloppyDisk;
   private static Icon? Folderf;
   public static Icon Folder => Folderf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "folder");
   public static Icon FolderBlank => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Folder;
   private static Icon? FolderClosedf;
   public static Icon FolderClosed => FolderClosedf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "folder-closed");
   private static Icon? FolderOpenf;
   public static Icon FolderOpen => FolderOpenf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "folder-open");
   private static Icon? FontAwesomef;
   public static Icon FontAwesome => FontAwesomef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "font-awesome");
   public static Icon FontAwesomeFlag => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FontAwesome;
   public static Icon FontAwesomeLogoFull => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.FontAwesome;
   private static Icon? Futbolf;
   public static Icon Futbol => Futbolf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "futbol");
   public static Icon FutbolBall => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Futbol;
   public static Icon SoccerBall => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Futbol;
   private static Icon? Gemf;
   public static Icon Gem => Gemf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "gem");
   private static Icon? Handf;
   public static Icon Hand => Handf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand");
   public static Icon HandPaper => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Hand;
   private static Icon? HandBackFistf;
   public static Icon HandBackFist => HandBackFistf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-back-fist");
   public static Icon HandRock => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.HandBackFist;
   private static Icon? HandLizardf;
   public static Icon HandLizard => HandLizardf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-lizard");
   private static Icon? HandPeacef;
   public static Icon HandPeace => HandPeacef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-peace");
   private static Icon? HandPointDownf;
   public static Icon HandPointDown => HandPointDownf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-point-down");
   private static Icon? HandPointLeftf;
   public static Icon HandPointLeft => HandPointLeftf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-point-left");
   private static Icon? HandPointRightf;
   public static Icon HandPointRight => HandPointRightf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-point-right");
   private static Icon? HandPointUpf;
   public static Icon HandPointUp => HandPointUpf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-point-up");
   private static Icon? HandPointerf;
   public static Icon HandPointer => HandPointerf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-pointer");
   private static Icon? HandScissorsf;
   public static Icon HandScissors => HandScissorsf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-scissors");
   private static Icon? HandSpockf;
   public static Icon HandSpock => HandSpockf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hand-spock");
   private static Icon? Handshakef;
   public static Icon Handshake => Handshakef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "handshake");
   private static Icon? HardDrivef;
   public static Icon HardDrive => HardDrivef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hard-drive");
   public static Icon Hdd => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.HardDrive;
   private static Icon? Heartf;
   public static Icon Heart => Heartf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "heart");
   private static Icon? Hospitalf;
   public static Icon Hospital => Hospitalf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hospital");
   public static Icon HospitalAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Hospital;
   public static Icon HospitalWide => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Hospital;
   private static Icon? Hourglassf;
   public static Icon Hourglass => Hourglassf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hourglass");
   public static Icon HourglassEmpty => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Hourglass;
   private static Icon? HourglassHalff;
   public static Icon HourglassHalf => HourglassHalff ??= new Icon(IconFamily.Classic, IconStyle.Regular, "hourglass-half");
   public static Icon Hourglass2 => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.HourglassHalf;
   private static Icon? IdBadgef;
   public static Icon IdBadge => IdBadgef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "id-badge");
   private static Icon? IdCardf;
   public static Icon IdCard => IdCardf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "id-card");
   public static Icon DriversLicense => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.IdCard;
   private static Icon? Imagef;
   public static Icon Image => Imagef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "image");
   private static Icon? Imagesf;
   public static Icon Images => Imagesf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "images");
   private static Icon? Keyboardf;
   public static Icon Keyboard => Keyboardf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "keyboard");
   private static Icon? Lemonf;
   public static Icon Lemon => Lemonf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "lemon");
   private static Icon? LifeRingf;
   public static Icon LifeRing => LifeRingf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "life-ring");
   private static Icon? Lightbulbf;
   public static Icon Lightbulb => Lightbulbf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "lightbulb");
   private static Icon? Mapf;
   public static Icon Map => Mapf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "map");
   private static Icon? Messagef;
   public static Icon Message => Messagef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "message");
   public static Icon CommentAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Message;
   private static Icon? MoneyBill1f;
   public static Icon MoneyBill1 => MoneyBill1f ??= new Icon(IconFamily.Classic, IconStyle.Regular, "money-bill-1");
   public static Icon MoneyBillAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.MoneyBill1;
   private static Icon? Moonf;
   public static Icon Moon => Moonf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "moon");
   private static Icon? Newspaperf;
   public static Icon Newspaper => Newspaperf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "newspaper");
   private static Icon? NoteStickyf;
   public static Icon NoteSticky => NoteStickyf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "note-sticky");
   public static Icon StickyNote => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.NoteSticky;
   private static Icon? ObjectGroupf;
   public static Icon ObjectGroup => ObjectGroupf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "object-group");
   private static Icon? ObjectUngroupf;
   public static Icon ObjectUngroup => ObjectUngroupf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "object-ungroup");
   private static Icon? PaperPlanef;
   public static Icon PaperPlane => PaperPlanef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "paper-plane");
   private static Icon? Pastef;
   public static Icon Paste => Pastef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "paste");
   public static Icon FileClipboard => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.Paste;
   private static Icon? PenToSquaref;
   public static Icon PenToSquare => PenToSquaref ??= new Icon(IconFamily.Classic, IconStyle.Regular, "pen-to-square");
   public static Icon Edit => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.PenToSquare;
   private static Icon? RectangleListf;
   public static Icon RectangleList => RectangleListf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "rectangle-list");
   public static Icon ListAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.RectangleList;
   private static Icon? RectangleXmarkf;
   public static Icon RectangleXmark => RectangleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "rectangle-xmark");
   public static Icon RectangleTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.RectangleXmark;
   public static Icon TimesRectangle => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.RectangleXmark;
   public static Icon WindowClose => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.RectangleXmark;
   private static Icon? Registeredf;
   public static Icon Registered => Registeredf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "registered");
   private static Icon? ShareFromSquaref;
   public static Icon ShareFromSquare => ShareFromSquaref ??= new Icon(IconFamily.Classic, IconStyle.Regular, "share-from-square");
   public static Icon ShareSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.ShareFromSquare;
   private static Icon? Snowflakef;
   public static Icon Snowflake => Snowflakef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "snowflake");
   private static Icon? Squaref;
   public static Icon Square => Squaref ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square");
   private static Icon? SquareCaretDownf;
   public static Icon SquareCaretDown => SquareCaretDownf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-caret-down");
   public static Icon CaretSquareDown => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquareCaretDown;
   private static Icon? SquareCaretLeftf;
   public static Icon SquareCaretLeft => SquareCaretLeftf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-caret-left");
   public static Icon CaretSquareLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquareCaretLeft;
   private static Icon? SquareCaretRightf;
   public static Icon SquareCaretRight => SquareCaretRightf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-caret-right");
   public static Icon CaretSquareRight => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquareCaretRight;
   private static Icon? SquareCaretUpf;
   public static Icon SquareCaretUp => SquareCaretUpf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-caret-up");
   public static Icon CaretSquareUp => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquareCaretUp;
   private static Icon? SquareCheckf;
   public static Icon SquareCheck => SquareCheckf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-check");
   public static Icon CheckSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquareCheck;
   private static Icon? SquareFullf;
   public static Icon SquareFull => SquareFullf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-full");
   private static Icon? SquareMinusf;
   public static Icon SquareMinus => SquareMinusf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-minus");
   public static Icon MinusSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquareMinus;
   private static Icon? SquarePlusf;
   public static Icon SquarePlus => SquarePlusf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "square-plus");
   public static Icon PlusSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.SquarePlus;
   private static Icon? Starf;
   public static Icon Star => Starf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "star");
   private static Icon? StarHalff;
   public static Icon StarHalf => StarHalff ??= new Icon(IconFamily.Classic, IconStyle.Regular, "star-half");
   private static Icon? StarHalfStrokef;
   public static Icon StarHalfStroke => StarHalfStrokef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "star-half-stroke");
   public static Icon StarHalfAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.StarHalfStroke;
   private static Icon? Sunf;
   public static Icon Sun => Sunf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "sun");
   private static Icon? ThumbsDownf;
   public static Icon ThumbsDown => ThumbsDownf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "thumbs-down");
   private static Icon? ThumbsUpf;
   public static Icon ThumbsUp => ThumbsUpf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "thumbs-up");
   private static Icon? TrashCanf;
   public static Icon TrashCan => TrashCanf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "trash-can");
   public static Icon TrashAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Free.FaRegular.TrashCan;
   private static Icon? Userf;
   public static Icon User => Userf ??= new Icon(IconFamily.Classic, IconStyle.Regular, "user");
   private static Icon? WindowMaximizef;
   public static Icon WindowMaximize => WindowMaximizef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "window-maximize");
   private static Icon? WindowMinimizef;
   public static Icon WindowMinimize => WindowMinimizef ??= new Icon(IconFamily.Classic, IconStyle.Regular, "window-minimize");
   private static Icon? WindowRestoref;
   public static Icon WindowRestore => WindowRestoref ??= new Icon(IconFamily.Classic, IconStyle.Regular, "window-restore");
}
