using System;
using System.Collections.Immutable;
using Rocket.Surgery.Blazor.FontAwesome6;
namespace Rocket.Surgery.Blazor.FontAwesome6.Pro;
/// <summary>
/// Font Awesome Light Icons
/// </summary>
public static partial class FaLight
{
    private static Icon? _0f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/0?f=classic&amp;s=light">0</a>
    /// </summary>
    public static Icon _0 => _0f ??= new Icon(IconFamily.Classic, IconStyle.Light, "0", "30");
    private static Icon? _00f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/00?f=classic&amp;s=light">00</a>
    /// </summary>
    public static Icon _00 => _00f ??= new Icon(IconFamily.Classic, IconStyle.Light, "00", "e467");
    private static Icon? _1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/1?f=classic&amp;s=light">1</a>
    /// </summary>
    public static Icon _1 => _1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "1", "31");
    private static Icon? _2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/2?f=classic&amp;s=light">2</a>
    /// </summary>
    public static Icon _2 => _2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "2", "32");
    private static Icon? _3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/3?f=classic&amp;s=light">3</a>
    /// </summary>
    public static Icon _3 => _3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "3", "33");
    private static Icon? _360Degreesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/360-degrees?f=classic&amp;s=light">360 Degrees</a>
    /// </summary>
    public static Icon _360Degrees => _360Degreesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "360-degrees", "e2dc");
    private static Icon? _4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/4?f=classic&amp;s=light">4</a>
    /// </summary>
    public static Icon _4 => _4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "4", "34");
    private static Icon? _5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/5?f=classic&amp;s=light">5</a>
    /// </summary>
    public static Icon _5 => _5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "5", "35");
    private static Icon? _6f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/6?f=classic&amp;s=light">6</a>
    /// </summary>
    public static Icon _6 => _6f ??= new Icon(IconFamily.Classic, IconStyle.Light, "6", "36");
    private static Icon? _7f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/7?f=classic&amp;s=light">7</a>
    /// </summary>
    public static Icon _7 => _7f ??= new Icon(IconFamily.Classic, IconStyle.Light, "7", "37");
    private static Icon? _8f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/8?f=classic&amp;s=light">8</a>
    /// </summary>
    public static Icon _8 => _8f ??= new Icon(IconFamily.Classic, IconStyle.Light, "8", "38");
    private static Icon? _9f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/9?f=classic&amp;s=light">9</a>
    /// </summary>
    public static Icon _9 => _9f ??= new Icon(IconFamily.Classic, IconStyle.Light, "9", "39");
    private static Icon? Af;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/a?f=classic&amp;s=light">A</a>
    /// </summary>
    public static Icon A => Af ??= new Icon(IconFamily.Classic, IconStyle.Light, "a", "41");
    private static Icon? Abacusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/abacus?f=classic&amp;s=light">Abacus</a>
    /// </summary>
    public static Icon Abacus => Abacusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "abacus", "f640");
    private static Icon? AccentGravef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/accent-grave?f=classic&amp;s=light">Accent Grave</a>
    /// </summary>
    public static Icon AccentGrave => AccentGravef ??= new Icon(IconFamily.Classic, IconStyle.Light, "accent-grave", "60");
    private static Icon? Acornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/acorn?f=classic&amp;s=light">Acorn</a>
    /// </summary>
    public static Icon Acorn => Acornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "acorn", "f6ae");
    private static Icon? AddressBookf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/address-book?f=classic&amp;s=light">Address Book</a>
    /// </summary>
    public static Icon AddressBook => AddressBookf ??= new Icon(IconFamily.Classic, IconStyle.Light, "address-book", "f2b9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/address-book?f=classic&amp;s=light">Address Book</a>
    /// </summary>
    public static Icon ContactBook => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AddressBook;
    private static Icon? AddressCardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/address-card?f=classic&amp;s=light">Address Card</a>
    /// </summary>
    public static Icon AddressCard => AddressCardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "address-card", "f2bb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/address-card?f=classic&amp;s=light">Address Card</a>
    /// </summary>
    public static Icon ContactCard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AddressCard;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/address-card?f=classic&amp;s=light">Address Card</a>
    /// </summary>
    public static Icon Vcard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AddressCard;
    private static Icon? AirConditionerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/air-conditioner?f=classic&amp;s=light">Air Conditioner</a>
    /// </summary>
    public static Icon AirConditioner => AirConditionerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "air-conditioner", "f8f4");
    private static Icon? Airplayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/airplay?f=classic&amp;s=light">Airplay</a>
    /// </summary>
    public static Icon Airplay => Airplayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "airplay", "e089");
    private static Icon? AlarmClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alarm-clock?f=classic&amp;s=light">Alarm Clock</a>
    /// </summary>
    public static Icon AlarmClock => AlarmClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alarm-clock", "f34e");
    private static Icon? AlarmExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alarm-exclamation?f=classic&amp;s=light">Alarm Exclamation</a>
    /// </summary>
    public static Icon AlarmExclamation => AlarmExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alarm-exclamation", "f843");
    private static Icon? AlarmPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alarm-plus?f=classic&amp;s=light">Alarm Plus</a>
    /// </summary>
    public static Icon AlarmPlus => AlarmPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alarm-plus", "f844");
    private static Icon? AlarmSnoozef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alarm-snooze?f=classic&amp;s=light">Alarm Snooze</a>
    /// </summary>
    public static Icon AlarmSnooze => AlarmSnoozef ??= new Icon(IconFamily.Classic, IconStyle.Light, "alarm-snooze", "f845");
    private static Icon? Albumf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/album?f=classic&amp;s=light">Album</a>
    /// </summary>
    public static Icon Album => Albumf ??= new Icon(IconFamily.Classic, IconStyle.Light, "album", "f89f");
    private static Icon? AlbumCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/album-circle-plus?f=classic&amp;s=light">Album Circle Plus</a>
    /// </summary>
    public static Icon AlbumCirclePlus => AlbumCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "album-circle-plus", "e48c");
    private static Icon? AlbumCircleUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/album-circle-user?f=classic&amp;s=light">Album Circle User</a>
    /// </summary>
    public static Icon AlbumCircleUser => AlbumCircleUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "album-circle-user", "e48d");
    private static Icon? AlbumCollectionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/album-collection?f=classic&amp;s=light">Album Collection</a>
    /// </summary>
    public static Icon AlbumCollection => AlbumCollectionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "album-collection", "f8a0");
    private static Icon? AlbumCollectionCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/album-collection-circle-plus?f=classic&amp;s=light">Album Collection Circle Plus</a>
    /// </summary>
    public static Icon AlbumCollectionCirclePlus => AlbumCollectionCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "album-collection-circle-plus", "e48e");
    private static Icon? AlbumCollectionCircleUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/album-collection-circle-user?f=classic&amp;s=light">Album Collection Circle User</a>
    /// </summary>
    public static Icon AlbumCollectionCircleUser => AlbumCollectionCircleUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "album-collection-circle-user", "e48f");
    private static Icon? Alicornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alicorn?f=classic&amp;s=light">Alicorn</a>
    /// </summary>
    public static Icon Alicorn => Alicornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alicorn", "f6b0");
    private static Icon? Alienf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alien?f=classic&amp;s=light">Alien</a>
    /// </summary>
    public static Icon Alien => Alienf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alien", "f8f5");
    private static Icon? Alien8bitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alien-8bit?f=classic&amp;s=light">Alien 8bit</a>
    /// </summary>
    public static Icon Alien8bit => Alien8bitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alien-8bit", "f8f6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alien-8bit?f=classic&amp;s=light">Alien 8bit</a>
    /// </summary>
    public static Icon AlienMonster => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Alien8bit;
    private static Icon? AlignCenterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/align-center?f=classic&amp;s=light">Align Center</a>
    /// </summary>
    public static Icon AlignCenter => AlignCenterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "align-center", "f037");
    private static Icon? AlignJustifyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/align-justify?f=classic&amp;s=light">Align Justify</a>
    /// </summary>
    public static Icon AlignJustify => AlignJustifyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "align-justify", "f039");
    private static Icon? AlignLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/align-left?f=classic&amp;s=light">Align Left</a>
    /// </summary>
    public static Icon AlignLeft => AlignLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "align-left", "f036");
    private static Icon? AlignRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/align-right?f=classic&amp;s=light">Align Right</a>
    /// </summary>
    public static Icon AlignRight => AlignRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "align-right", "f038");
    private static Icon? AlignSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/align-slash?f=classic&amp;s=light">Align Slash</a>
    /// </summary>
    public static Icon AlignSlash => AlignSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "align-slash", "f846");
    private static Icon? Altf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/alt?f=classic&amp;s=light">Alt</a>
    /// </summary>
    public static Icon Alt => Altf ??= new Icon(IconFamily.Classic, IconStyle.Light, "alt", "e08a");
    private static Icon? AmpGuitarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/amp-guitar?f=classic&amp;s=light">Amp Guitar</a>
    /// </summary>
    public static Icon AmpGuitar => AmpGuitarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "amp-guitar", "f8a1");
    private static Icon? Ampersandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ampersand?f=classic&amp;s=light">Ampersand</a>
    /// </summary>
    public static Icon Ampersand => Ampersandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ampersand", "26");
    private static Icon? Anchorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/anchor?f=classic&amp;s=light">Anchor</a>
    /// </summary>
    public static Icon Anchor => Anchorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "anchor", "f13d");
    private static Icon? AnchorCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/anchor-circle-check?f=classic&amp;s=light">Anchor Circle Check</a>
    /// </summary>
    public static Icon AnchorCircleCheck => AnchorCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "anchor-circle-check", "e4aa");
    private static Icon? AnchorCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/anchor-circle-exclamation?f=classic&amp;s=light">Anchor Circle Exclamation</a>
    /// </summary>
    public static Icon AnchorCircleExclamation => AnchorCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "anchor-circle-exclamation", "e4ab");
    private static Icon? AnchorCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/anchor-circle-xmark?f=classic&amp;s=light">Anchor Circle Xmark</a>
    /// </summary>
    public static Icon AnchorCircleXmark => AnchorCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "anchor-circle-xmark", "e4ac");
    private static Icon? AnchorLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/anchor-lock?f=classic&amp;s=light">Anchor Lock</a>
    /// </summary>
    public static Icon AnchorLock => AnchorLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "anchor-lock", "e4ad");
    private static Icon? Angelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angel?f=classic&amp;s=light">Angel</a>
    /// </summary>
    public static Icon Angel => Angelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angel", "f779");
    private static Icon? Anglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angle?f=classic&amp;s=light">Angle</a>
    /// </summary>
    public static Icon Angle => Anglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "angle", "e08c");
    private static Icon? Angle90f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angle-90?f=classic&amp;s=light">Angle 90</a>
    /// </summary>
    public static Icon Angle90 => Angle90f ??= new Icon(IconFamily.Classic, IconStyle.Light, "angle-90", "e08d");
    private static Icon? AngleDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angle-down?f=classic&amp;s=light">Angle Down</a>
    /// </summary>
    public static Icon AngleDown => AngleDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angle-down", "f107");
    private static Icon? AngleLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angle-left?f=classic&amp;s=light">Angle Left</a>
    /// </summary>
    public static Icon AngleLeft => AngleLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angle-left", "f104");
    private static Icon? AngleRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angle-right?f=classic&amp;s=light">Angle Right</a>
    /// </summary>
    public static Icon AngleRight => AngleRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angle-right", "f105");
    private static Icon? AngleUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angle-up?f=classic&amp;s=light">Angle Up</a>
    /// </summary>
    public static Icon AngleUp => AngleUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angle-up", "f106");
    private static Icon? AnglesDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-down?f=classic&amp;s=light">Angles Down</a>
    /// </summary>
    public static Icon AnglesDown => AnglesDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angles-down", "f103");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-down?f=classic&amp;s=light">Angles Down</a>
    /// </summary>
    public static Icon AngleDoubleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AnglesDown;
    private static Icon? AnglesLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-left?f=classic&amp;s=light">Angles Left</a>
    /// </summary>
    public static Icon AnglesLeft => AnglesLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angles-left", "f100");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-left?f=classic&amp;s=light">Angles Left</a>
    /// </summary>
    public static Icon AngleDoubleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AnglesLeft;
    private static Icon? AnglesRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-right?f=classic&amp;s=light">Angles Right</a>
    /// </summary>
    public static Icon AnglesRight => AnglesRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angles-right", "f101");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-right?f=classic&amp;s=light">Angles Right</a>
    /// </summary>
    public static Icon AngleDoubleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AnglesRight;
    private static Icon? AnglesUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-up?f=classic&amp;s=light">Angles Up</a>
    /// </summary>
    public static Icon AnglesUp => AnglesUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angles-up", "f102");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-up?f=classic&amp;s=light">Angles Up</a>
    /// </summary>
    public static Icon AngleDoubleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AnglesUp;
    private static Icon? AnglesUpDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/angles-up-down?f=classic&amp;s=light">Angles Up Down</a>
    /// </summary>
    public static Icon AnglesUpDown => AnglesUpDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "angles-up-down", "e60d");
    private static Icon? Ankhf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ankh?f=classic&amp;s=light">Ankh</a>
    /// </summary>
    public static Icon Ankh => Ankhf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ankh", "f644");
    private static Icon? Apartmentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/apartment?f=classic&amp;s=light">Apartment</a>
    /// </summary>
    public static Icon Apartment => Apartmentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "apartment", "e468");
    private static Icon? Aperturef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/aperture?f=classic&amp;s=light">Aperture</a>
    /// </summary>
    public static Icon Aperture => Aperturef ??= new Icon(IconFamily.Classic, IconStyle.Light, "aperture", "e2df");
    private static Icon? Apostrophef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/apostrophe?f=classic&amp;s=light">Apostrophe</a>
    /// </summary>
    public static Icon Apostrophe => Apostrophef ??= new Icon(IconFamily.Classic, IconStyle.Light, "apostrophe", "27");
    private static Icon? AppleCoref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/apple-core?f=classic&amp;s=light">Apple Core</a>
    /// </summary>
    public static Icon AppleCore => AppleCoref ??= new Icon(IconFamily.Classic, IconStyle.Light, "apple-core", "e08f");
    private static Icon? AppleWholef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/apple-whole?f=classic&amp;s=light">Apple Whole</a>
    /// </summary>
    public static Icon AppleWhole => AppleWholef ??= new Icon(IconFamily.Classic, IconStyle.Light, "apple-whole", "f5d1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/apple-whole?f=classic&amp;s=light">Apple Whole</a>
    /// </summary>
    public static Icon AppleAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AppleWhole;
    private static Icon? Archwayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/archway?f=classic&amp;s=light">Archway</a>
    /// </summary>
    public static Icon Archway => Archwayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "archway", "f557");
    private static Icon? ArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down?f=classic&amp;s=light">Arrow Down</a>
    /// </summary>
    public static Icon ArrowDown => ArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down", "f063");
    private static Icon? ArrowDown19f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-1-9?f=classic&amp;s=light">Arrow Down 1 9</a>
    /// </summary>
    public static Icon ArrowDown19 => ArrowDown19f ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-1-9", "f162");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-1-9?f=classic&amp;s=light">Arrow Down 1 9</a>
    /// </summary>
    public static Icon SortNumericAsc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDown19;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-1-9?f=classic&amp;s=light">Arrow Down 1 9</a>
    /// </summary>
    public static Icon SortNumericDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDown19;
    private static Icon? ArrowDown91f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-9-1?f=classic&amp;s=light">Arrow Down 9 1</a>
    /// </summary>
    public static Icon ArrowDown91 => ArrowDown91f ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-9-1", "f886");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-9-1?f=classic&amp;s=light">Arrow Down 9 1</a>
    /// </summary>
    public static Icon SortNumericDesc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDown91;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-9-1?f=classic&amp;s=light">Arrow Down 9 1</a>
    /// </summary>
    public static Icon SortNumericDownAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDown91;
    private static Icon? ArrowDownAZf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-a-z?f=classic&amp;s=light">Arrow Down A Z</a>
    /// </summary>
    public static Icon ArrowDownAZ => ArrowDownAZf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-a-z", "f15d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-a-z?f=classic&amp;s=light">Arrow Down A Z</a>
    /// </summary>
    public static Icon SortAlphaAsc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownAZ;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-a-z?f=classic&amp;s=light">Arrow Down A Z</a>
    /// </summary>
    public static Icon SortAlphaDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownAZ;
    private static Icon? ArrowDownArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-arrow-up?f=classic&amp;s=light">Arrow Down Arrow Up</a>
    /// </summary>
    public static Icon ArrowDownArrowUp => ArrowDownArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-arrow-up", "f883");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-arrow-up?f=classic&amp;s=light">Arrow Down Arrow Up</a>
    /// </summary>
    public static Icon SortAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownArrowUp;
    private static Icon? ArrowDownBigSmallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-big-small?f=classic&amp;s=light">Arrow Down Big Small</a>
    /// </summary>
    public static Icon ArrowDownBigSmall => ArrowDownBigSmallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-big-small", "f88c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-big-small?f=classic&amp;s=light">Arrow Down Big Small</a>
    /// </summary>
    public static Icon SortSizeDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownBigSmall;
    private static Icon? ArrowDownFromArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-from-arc?f=classic&amp;s=light">Arrow Down From Arc</a>
    /// </summary>
    public static Icon ArrowDownFromArc => ArrowDownFromArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-from-arc", "e614");
    private static Icon? ArrowDownFromDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-from-dotted-line?f=classic&amp;s=light">Arrow Down From Dotted Line</a>
    /// </summary>
    public static Icon ArrowDownFromDottedLine => ArrowDownFromDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-from-dotted-line", "e090");
    private static Icon? ArrowDownFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-from-line?f=classic&amp;s=light">Arrow Down From Line</a>
    /// </summary>
    public static Icon ArrowDownFromLine => ArrowDownFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-from-line", "f345");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-from-line?f=classic&amp;s=light">Arrow Down From Line</a>
    /// </summary>
    public static Icon ArrowFromTop => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownFromLine;
    private static Icon? ArrowDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-left?f=classic&amp;s=light">Arrow Down Left</a>
    /// </summary>
    public static Icon ArrowDownLeft => ArrowDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-left", "e091");
    private static Icon? ArrowDownLeftAndArrowUpRightToCenterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-left-and-arrow-up-right-to-center?f=classic&amp;s=light">Arrow Down Left And Arrow Up Right To Center</a>
    /// </summary>
    public static Icon ArrowDownLeftAndArrowUpRightToCenter => ArrowDownLeftAndArrowUpRightToCenterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-left-and-arrow-up-right-to-center", "e092");
    private static Icon? ArrowDownLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-long?f=classic&amp;s=light">Arrow Down Long</a>
    /// </summary>
    public static Icon ArrowDownLong => ArrowDownLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-long", "f175");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-long?f=classic&amp;s=light">Arrow Down Long</a>
    /// </summary>
    public static Icon LongArrowDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownLong;
    private static Icon? ArrowDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-right?f=classic&amp;s=light">Arrow Down Right</a>
    /// </summary>
    public static Icon ArrowDownRight => ArrowDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-right", "e093");
    private static Icon? ArrowDownShortWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-short-wide?f=classic&amp;s=light">Arrow Down Short Wide</a>
    /// </summary>
    public static Icon ArrowDownShortWide => ArrowDownShortWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-short-wide", "f884");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-short-wide?f=classic&amp;s=light">Arrow Down Short Wide</a>
    /// </summary>
    public static Icon SortAmountDesc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownShortWide;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-short-wide?f=classic&amp;s=light">Arrow Down Short Wide</a>
    /// </summary>
    public static Icon SortAmountDownAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownShortWide;
    private static Icon? ArrowDownSmallBigf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-small-big?f=classic&amp;s=light">Arrow Down Small Big</a>
    /// </summary>
    public static Icon ArrowDownSmallBig => ArrowDownSmallBigf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-small-big", "f88d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-small-big?f=classic&amp;s=light">Arrow Down Small Big</a>
    /// </summary>
    public static Icon SortSizeDownAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownSmallBig;
    private static Icon? ArrowDownSquareTrianglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-square-triangle?f=classic&amp;s=light">Arrow Down Square Triangle</a>
    /// </summary>
    public static Icon ArrowDownSquareTriangle => ArrowDownSquareTrianglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-square-triangle", "f889");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-square-triangle?f=classic&amp;s=light">Arrow Down Square Triangle</a>
    /// </summary>
    public static Icon SortShapesDownAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownSquareTriangle;
    private static Icon? ArrowDownToArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-to-arc?f=classic&amp;s=light">Arrow Down To Arc</a>
    /// </summary>
    public static Icon ArrowDownToArc => ArrowDownToArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-to-arc", "e4ae");
    private static Icon? ArrowDownToBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-to-bracket?f=classic&amp;s=light">Arrow Down To Bracket</a>
    /// </summary>
    public static Icon ArrowDownToBracket => ArrowDownToBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-to-bracket", "e094");
    private static Icon? ArrowDownToDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-to-dotted-line?f=classic&amp;s=light">Arrow Down To Dotted Line</a>
    /// </summary>
    public static Icon ArrowDownToDottedLine => ArrowDownToDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-to-dotted-line", "e095");
    private static Icon? ArrowDownToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-to-line?f=classic&amp;s=light">Arrow Down To Line</a>
    /// </summary>
    public static Icon ArrowDownToLine => ArrowDownToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-to-line", "f33d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-to-line?f=classic&amp;s=light">Arrow Down To Line</a>
    /// </summary>
    public static Icon ArrowToBottom => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownToLine;
    private static Icon? ArrowDownToSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-to-square?f=classic&amp;s=light">Arrow Down To Square</a>
    /// </summary>
    public static Icon ArrowDownToSquare => ArrowDownToSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-to-square", "e096");
    private static Icon? ArrowDownTriangleSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-triangle-square?f=classic&amp;s=light">Arrow Down Triangle Square</a>
    /// </summary>
    public static Icon ArrowDownTriangleSquare => ArrowDownTriangleSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-triangle-square", "f888");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-triangle-square?f=classic&amp;s=light">Arrow Down Triangle Square</a>
    /// </summary>
    public static Icon SortShapesDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownTriangleSquare;
    private static Icon? ArrowDownUpAcrossLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-up-across-line?f=classic&amp;s=light">Arrow Down Up Across Line</a>
    /// </summary>
    public static Icon ArrowDownUpAcrossLine => ArrowDownUpAcrossLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-up-across-line", "e4af");
    private static Icon? ArrowDownUpLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-up-lock?f=classic&amp;s=light">Arrow Down Up Lock</a>
    /// </summary>
    public static Icon ArrowDownUpLock => ArrowDownUpLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-up-lock", "e4b0");
    private static Icon? ArrowDownWideShortf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-wide-short?f=classic&amp;s=light">Arrow Down Wide Short</a>
    /// </summary>
    public static Icon ArrowDownWideShort => ArrowDownWideShortf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-wide-short", "f160");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-wide-short?f=classic&amp;s=light">Arrow Down Wide Short</a>
    /// </summary>
    public static Icon SortAmountAsc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownWideShort;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-wide-short?f=classic&amp;s=light">Arrow Down Wide Short</a>
    /// </summary>
    public static Icon SortAmountDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownWideShort;
    private static Icon? ArrowDownZAf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-z-a?f=classic&amp;s=light">Arrow Down Z A</a>
    /// </summary>
    public static Icon ArrowDownZA => ArrowDownZAf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-down-z-a", "f881");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-z-a?f=classic&amp;s=light">Arrow Down Z A</a>
    /// </summary>
    public static Icon SortAlphaDesc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownZA;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-down-z-a?f=classic&amp;s=light">Arrow Down Z A</a>
    /// </summary>
    public static Icon SortAlphaDownAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowDownZA;
    private static Icon? ArrowLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left?f=classic&amp;s=light">Arrow Left</a>
    /// </summary>
    public static Icon ArrowLeft => ArrowLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left", "f060");
    private static Icon? ArrowLeftFromArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-from-arc?f=classic&amp;s=light">Arrow Left From Arc</a>
    /// </summary>
    public static Icon ArrowLeftFromArc => ArrowLeftFromArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left-from-arc", "e615");
    private static Icon? ArrowLeftFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-from-line?f=classic&amp;s=light">Arrow Left From Line</a>
    /// </summary>
    public static Icon ArrowLeftFromLine => ArrowLeftFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left-from-line", "f344");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-from-line?f=classic&amp;s=light">Arrow Left From Line</a>
    /// </summary>
    public static Icon ArrowFromRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowLeftFromLine;
    private static Icon? ArrowLeftLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-long?f=classic&amp;s=light">Arrow Left Long</a>
    /// </summary>
    public static Icon ArrowLeftLong => ArrowLeftLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left-long", "f177");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-long?f=classic&amp;s=light">Arrow Left Long</a>
    /// </summary>
    public static Icon LongArrowLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowLeftLong;
    private static Icon? ArrowLeftLongToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-long-to-line?f=classic&amp;s=light">Arrow Left Long To Line</a>
    /// </summary>
    public static Icon ArrowLeftLongToLine => ArrowLeftLongToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left-long-to-line", "e3d4");
    private static Icon? ArrowLeftToArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-to-arc?f=classic&amp;s=light">Arrow Left To Arc</a>
    /// </summary>
    public static Icon ArrowLeftToArc => ArrowLeftToArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left-to-arc", "e616");
    private static Icon? ArrowLeftToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-to-line?f=classic&amp;s=light">Arrow Left To Line</a>
    /// </summary>
    public static Icon ArrowLeftToLine => ArrowLeftToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-left-to-line", "f33e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-left-to-line?f=classic&amp;s=light">Arrow Left To Line</a>
    /// </summary>
    public static Icon ArrowToLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowLeftToLine;
    private static Icon? ArrowPointerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-pointer?f=classic&amp;s=light">Arrow Pointer</a>
    /// </summary>
    public static Icon ArrowPointer => ArrowPointerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-pointer", "f245");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-pointer?f=classic&amp;s=light">Arrow Pointer</a>
    /// </summary>
    public static Icon MousePointer => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowPointer;
    private static Icon? ArrowProgressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-progress?f=classic&amp;s=light">Arrow Progress</a>
    /// </summary>
    public static Icon ArrowProgress => ArrowProgressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-progress", "e5df");
    private static Icon? ArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right?f=classic&amp;s=light">Arrow Right</a>
    /// </summary>
    public static Icon ArrowRight => ArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right", "f061");
    private static Icon? ArrowRightArrowLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-arrow-left?f=classic&amp;s=light">Arrow Right Arrow Left</a>
    /// </summary>
    public static Icon ArrowRightArrowLeft => ArrowRightArrowLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-arrow-left", "f0ec");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-arrow-left?f=classic&amp;s=light">Arrow Right Arrow Left</a>
    /// </summary>
    public static Icon Exchange => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRightArrowLeft;
    private static Icon? ArrowRightFromArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-from-arc?f=classic&amp;s=light">Arrow Right From Arc</a>
    /// </summary>
    public static Icon ArrowRightFromArc => ArrowRightFromArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-from-arc", "e4b1");
    private static Icon? ArrowRightFromBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-from-bracket?f=classic&amp;s=light">Arrow Right From Bracket</a>
    /// </summary>
    public static Icon ArrowRightFromBracket => ArrowRightFromBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-from-bracket", "f08b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-from-bracket?f=classic&amp;s=light">Arrow Right From Bracket</a>
    /// </summary>
    public static Icon SignOut => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRightFromBracket;
    private static Icon? ArrowRightFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-from-line?f=classic&amp;s=light">Arrow Right From Line</a>
    /// </summary>
    public static Icon ArrowRightFromLine => ArrowRightFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-from-line", "f343");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-from-line?f=classic&amp;s=light">Arrow Right From Line</a>
    /// </summary>
    public static Icon ArrowFromLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRightFromLine;
    private static Icon? ArrowRightLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-long?f=classic&amp;s=light">Arrow Right Long</a>
    /// </summary>
    public static Icon ArrowRightLong => ArrowRightLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-long", "f178");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-long?f=classic&amp;s=light">Arrow Right Long</a>
    /// </summary>
    public static Icon LongArrowRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRightLong;
    private static Icon? ArrowRightLongToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-long-to-line?f=classic&amp;s=light">Arrow Right Long To Line</a>
    /// </summary>
    public static Icon ArrowRightLongToLine => ArrowRightLongToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-long-to-line", "e3d5");
    private static Icon? ArrowRightToArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-to-arc?f=classic&amp;s=light">Arrow Right To Arc</a>
    /// </summary>
    public static Icon ArrowRightToArc => ArrowRightToArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-to-arc", "e4b2");
    private static Icon? ArrowRightToBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-to-bracket?f=classic&amp;s=light">Arrow Right To Bracket</a>
    /// </summary>
    public static Icon ArrowRightToBracket => ArrowRightToBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-to-bracket", "f090");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-to-bracket?f=classic&amp;s=light">Arrow Right To Bracket</a>
    /// </summary>
    public static Icon SignIn => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRightToBracket;
    private static Icon? ArrowRightToCityf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-to-city?f=classic&amp;s=light">Arrow Right To City</a>
    /// </summary>
    public static Icon ArrowRightToCity => ArrowRightToCityf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-to-city", "e4b3");
    private static Icon? ArrowRightToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-to-line?f=classic&amp;s=light">Arrow Right To Line</a>
    /// </summary>
    public static Icon ArrowRightToLine => ArrowRightToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-right-to-line", "f340");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-right-to-line?f=classic&amp;s=light">Arrow Right To Line</a>
    /// </summary>
    public static Icon ArrowToRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRightToLine;
    private static Icon? ArrowRotateLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-left?f=classic&amp;s=light">Arrow Rotate Left</a>
    /// </summary>
    public static Icon ArrowRotateLeft => ArrowRotateLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-rotate-left", "f0e2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-left?f=classic&amp;s=light">Arrow Rotate Left</a>
    /// </summary>
    public static Icon ArrowLeftRotate => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateLeft;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-left?f=classic&amp;s=light">Arrow Rotate Left</a>
    /// </summary>
    public static Icon ArrowRotateBack => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateLeft;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-left?f=classic&amp;s=light">Arrow Rotate Left</a>
    /// </summary>
    public static Icon ArrowRotateBackward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateLeft;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-left?f=classic&amp;s=light">Arrow Rotate Left</a>
    /// </summary>
    public static Icon Undo => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateLeft;
    private static Icon? ArrowRotateRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-right?f=classic&amp;s=light">Arrow Rotate Right</a>
    /// </summary>
    public static Icon ArrowRotateRight => ArrowRotateRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-rotate-right", "f01e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-right?f=classic&amp;s=light">Arrow Rotate Right</a>
    /// </summary>
    public static Icon ArrowRightRotate => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateRight;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-right?f=classic&amp;s=light">Arrow Rotate Right</a>
    /// </summary>
    public static Icon ArrowRotateForward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateRight;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-rotate-right?f=classic&amp;s=light">Arrow Rotate Right</a>
    /// </summary>
    public static Icon Redo => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowRotateRight;
    private static Icon? ArrowTrendDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-trend-down?f=classic&amp;s=light">Arrow Trend Down</a>
    /// </summary>
    public static Icon ArrowTrendDown => ArrowTrendDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-trend-down", "e097");
    private static Icon? ArrowTrendUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-trend-up?f=classic&amp;s=light">Arrow Trend Up</a>
    /// </summary>
    public static Icon ArrowTrendUp => ArrowTrendUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-trend-up", "e098");
    private static Icon? ArrowTurnDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-down?f=classic&amp;s=light">Arrow Turn Down</a>
    /// </summary>
    public static Icon ArrowTurnDown => ArrowTurnDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-down", "f149");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-down?f=classic&amp;s=light">Arrow Turn Down</a>
    /// </summary>
    public static Icon LevelDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowTurnDown;
    private static Icon? ArrowTurnDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-down-left?f=classic&amp;s=light">Arrow Turn Down Left</a>
    /// </summary>
    public static Icon ArrowTurnDownLeft => ArrowTurnDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-down-left", "e2e1");
    private static Icon? ArrowTurnDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-down-right?f=classic&amp;s=light">Arrow Turn Down Right</a>
    /// </summary>
    public static Icon ArrowTurnDownRight => ArrowTurnDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-down-right", "e3d6");
    private static Icon? ArrowTurnLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-left?f=classic&amp;s=light">Arrow Turn Left</a>
    /// </summary>
    public static Icon ArrowTurnLeft => ArrowTurnLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-left", "e632");
    private static Icon? ArrowTurnLeftDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-left-down?f=classic&amp;s=light">Arrow Turn Left Down</a>
    /// </summary>
    public static Icon ArrowTurnLeftDown => ArrowTurnLeftDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-left-down", "e633");
    private static Icon? ArrowTurnLeftUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-left-up?f=classic&amp;s=light">Arrow Turn Left Up</a>
    /// </summary>
    public static Icon ArrowTurnLeftUp => ArrowTurnLeftUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-left-up", "e634");
    private static Icon? ArrowTurnRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-right?f=classic&amp;s=light">Arrow Turn Right</a>
    /// </summary>
    public static Icon ArrowTurnRight => ArrowTurnRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-right", "e635");
    private static Icon? ArrowTurnUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-up?f=classic&amp;s=light">Arrow Turn Up</a>
    /// </summary>
    public static Icon ArrowTurnUp => ArrowTurnUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-turn-up", "f148");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-turn-up?f=classic&amp;s=light">Arrow Turn Up</a>
    /// </summary>
    public static Icon LevelUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowTurnUp;
    private static Icon? ArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up?f=classic&amp;s=light">Arrow Up</a>
    /// </summary>
    public static Icon ArrowUp => ArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up", "f062");
    private static Icon? ArrowUp19f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-1-9?f=classic&amp;s=light">Arrow Up 1 9</a>
    /// </summary>
    public static Icon ArrowUp19 => ArrowUp19f ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-1-9", "f163");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-1-9?f=classic&amp;s=light">Arrow Up 1 9</a>
    /// </summary>
    public static Icon SortNumericUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUp19;
    private static Icon? ArrowUp91f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-9-1?f=classic&amp;s=light">Arrow Up 9 1</a>
    /// </summary>
    public static Icon ArrowUp91 => ArrowUp91f ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-9-1", "f887");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-9-1?f=classic&amp;s=light">Arrow Up 9 1</a>
    /// </summary>
    public static Icon SortNumericUpAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUp91;
    private static Icon? ArrowUpAZf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-a-z?f=classic&amp;s=light">Arrow Up A Z</a>
    /// </summary>
    public static Icon ArrowUpAZ => ArrowUpAZf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-a-z", "f15e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-a-z?f=classic&amp;s=light">Arrow Up A Z</a>
    /// </summary>
    public static Icon SortAlphaUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpAZ;
    private static Icon? ArrowUpArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-arrow-down?f=classic&amp;s=light">Arrow Up Arrow Down</a>
    /// </summary>
    public static Icon ArrowUpArrowDown => ArrowUpArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-arrow-down", "e099");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-arrow-down?f=classic&amp;s=light">Arrow Up Arrow Down</a>
    /// </summary>
    public static Icon SortUpDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpArrowDown;
    private static Icon? ArrowUpBigSmallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-big-small?f=classic&amp;s=light">Arrow Up Big Small</a>
    /// </summary>
    public static Icon ArrowUpBigSmall => ArrowUpBigSmallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-big-small", "f88e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-big-small?f=classic&amp;s=light">Arrow Up Big Small</a>
    /// </summary>
    public static Icon SortSizeUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpBigSmall;
    private static Icon? ArrowUpFromArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-arc?f=classic&amp;s=light">Arrow Up From Arc</a>
    /// </summary>
    public static Icon ArrowUpFromArc => ArrowUpFromArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-arc", "e4b4");
    private static Icon? ArrowUpFromBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-bracket?f=classic&amp;s=light">Arrow Up From Bracket</a>
    /// </summary>
    public static Icon ArrowUpFromBracket => ArrowUpFromBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-bracket", "e09a");
    private static Icon? ArrowUpFromDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-dotted-line?f=classic&amp;s=light">Arrow Up From Dotted Line</a>
    /// </summary>
    public static Icon ArrowUpFromDottedLine => ArrowUpFromDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-dotted-line", "e09b");
    private static Icon? ArrowUpFromGroundWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-ground-water?f=classic&amp;s=light">Arrow Up From Ground Water</a>
    /// </summary>
    public static Icon ArrowUpFromGroundWater => ArrowUpFromGroundWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-ground-water", "e4b5");
    private static Icon? ArrowUpFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-line?f=classic&amp;s=light">Arrow Up From Line</a>
    /// </summary>
    public static Icon ArrowUpFromLine => ArrowUpFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-line", "f342");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-line?f=classic&amp;s=light">Arrow Up From Line</a>
    /// </summary>
    public static Icon ArrowFromBottom => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpFromLine;
    private static Icon? ArrowUpFromSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-square?f=classic&amp;s=light">Arrow Up From Square</a>
    /// </summary>
    public static Icon ArrowUpFromSquare => ArrowUpFromSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-square", "e09c");
    private static Icon? ArrowUpFromWaterPumpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-from-water-pump?f=classic&amp;s=light">Arrow Up From Water Pump</a>
    /// </summary>
    public static Icon ArrowUpFromWaterPump => ArrowUpFromWaterPumpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-from-water-pump", "e4b6");
    private static Icon? ArrowUpLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-left?f=classic&amp;s=light">Arrow Up Left</a>
    /// </summary>
    public static Icon ArrowUpLeft => ArrowUpLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-left", "e09d");
    private static Icon? ArrowUpLeftFromCirclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-left-from-circle?f=classic&amp;s=light">Arrow Up Left From Circle</a>
    /// </summary>
    public static Icon ArrowUpLeftFromCircle => ArrowUpLeftFromCirclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-left-from-circle", "e09e");
    private static Icon? ArrowUpLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-long?f=classic&amp;s=light">Arrow Up Long</a>
    /// </summary>
    public static Icon ArrowUpLong => ArrowUpLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-long", "f176");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-long?f=classic&amp;s=light">Arrow Up Long</a>
    /// </summary>
    public static Icon LongArrowUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpLong;
    private static Icon? ArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-right?f=classic&amp;s=light">Arrow Up Right</a>
    /// </summary>
    public static Icon ArrowUpRight => ArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-right", "e09f");
    private static Icon? ArrowUpRightAndArrowDownLeftFromCenterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-right-and-arrow-down-left-from-center?f=classic&amp;s=light">Arrow Up Right And Arrow Down Left From Center</a>
    /// </summary>
    public static Icon ArrowUpRightAndArrowDownLeftFromCenter => ArrowUpRightAndArrowDownLeftFromCenterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-right-and-arrow-down-left-from-center", "e0a0");
    private static Icon? ArrowUpRightDotsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-right-dots?f=classic&amp;s=light">Arrow Up Right Dots</a>
    /// </summary>
    public static Icon ArrowUpRightDots => ArrowUpRightDotsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-right-dots", "e4b7");
    private static Icon? ArrowUpRightFromSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-right-from-square?f=classic&amp;s=light">Arrow Up Right From Square</a>
    /// </summary>
    public static Icon ArrowUpRightFromSquare => ArrowUpRightFromSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-right-from-square", "f08e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-right-from-square?f=classic&amp;s=light">Arrow Up Right From Square</a>
    /// </summary>
    public static Icon ExternalLink => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpRightFromSquare;
    private static Icon? ArrowUpShortWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-short-wide?f=classic&amp;s=light">Arrow Up Short Wide</a>
    /// </summary>
    public static Icon ArrowUpShortWide => ArrowUpShortWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-short-wide", "f885");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-short-wide?f=classic&amp;s=light">Arrow Up Short Wide</a>
    /// </summary>
    public static Icon SortAmountUpAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpShortWide;
    private static Icon? ArrowUpSmallBigf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-small-big?f=classic&amp;s=light">Arrow Up Small Big</a>
    /// </summary>
    public static Icon ArrowUpSmallBig => ArrowUpSmallBigf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-small-big", "f88f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-small-big?f=classic&amp;s=light">Arrow Up Small Big</a>
    /// </summary>
    public static Icon SortSizeUpAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpSmallBig;
    private static Icon? ArrowUpSquareTrianglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-square-triangle?f=classic&amp;s=light">Arrow Up Square Triangle</a>
    /// </summary>
    public static Icon ArrowUpSquareTriangle => ArrowUpSquareTrianglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-square-triangle", "f88b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-square-triangle?f=classic&amp;s=light">Arrow Up Square Triangle</a>
    /// </summary>
    public static Icon SortShapesUpAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpSquareTriangle;
    private static Icon? ArrowUpToArcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-to-arc?f=classic&amp;s=light">Arrow Up To Arc</a>
    /// </summary>
    public static Icon ArrowUpToArc => ArrowUpToArcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-to-arc", "e617");
    private static Icon? ArrowUpToDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-to-dotted-line?f=classic&amp;s=light">Arrow Up To Dotted Line</a>
    /// </summary>
    public static Icon ArrowUpToDottedLine => ArrowUpToDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-to-dotted-line", "e0a1");
    private static Icon? ArrowUpToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-to-line?f=classic&amp;s=light">Arrow Up To Line</a>
    /// </summary>
    public static Icon ArrowUpToLine => ArrowUpToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-to-line", "f341");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-to-line?f=classic&amp;s=light">Arrow Up To Line</a>
    /// </summary>
    public static Icon ArrowToTop => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpToLine;
    private static Icon? ArrowUpTriangleSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-triangle-square?f=classic&amp;s=light">Arrow Up Triangle Square</a>
    /// </summary>
    public static Icon ArrowUpTriangleSquare => ArrowUpTriangleSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-triangle-square", "f88a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-triangle-square?f=classic&amp;s=light">Arrow Up Triangle Square</a>
    /// </summary>
    public static Icon SortShapesUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpTriangleSquare;
    private static Icon? ArrowUpWideShortf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-wide-short?f=classic&amp;s=light">Arrow Up Wide Short</a>
    /// </summary>
    public static Icon ArrowUpWideShort => ArrowUpWideShortf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-wide-short", "f161");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-wide-short?f=classic&amp;s=light">Arrow Up Wide Short</a>
    /// </summary>
    public static Icon SortAmountUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpWideShort;
    private static Icon? ArrowUpZAf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-z-a?f=classic&amp;s=light">Arrow Up Z A</a>
    /// </summary>
    public static Icon ArrowUpZA => ArrowUpZAf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrow-up-z-a", "f882");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrow-up-z-a?f=classic&amp;s=light">Arrow Up Z A</a>
    /// </summary>
    public static Icon SortAlphaUpAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowUpZA;
    private static Icon? ArrowsCrossf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-cross?f=classic&amp;s=light">Arrows Cross</a>
    /// </summary>
    public static Icon ArrowsCross => ArrowsCrossf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-cross", "e0a2");
    private static Icon? ArrowsDownToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-down-to-line?f=classic&amp;s=light">Arrows Down To Line</a>
    /// </summary>
    public static Icon ArrowsDownToLine => ArrowsDownToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-down-to-line", "e4b8");
    private static Icon? ArrowsDownToPeoplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-down-to-people?f=classic&amp;s=light">Arrows Down To People</a>
    /// </summary>
    public static Icon ArrowsDownToPeople => ArrowsDownToPeoplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-down-to-people", "e4b9");
    private static Icon? ArrowsFromDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-from-dotted-line?f=classic&amp;s=light">Arrows From Dotted Line</a>
    /// </summary>
    public static Icon ArrowsFromDottedLine => ArrowsFromDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-from-dotted-line", "e0a3");
    private static Icon? ArrowsFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-from-line?f=classic&amp;s=light">Arrows From Line</a>
    /// </summary>
    public static Icon ArrowsFromLine => ArrowsFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-from-line", "e0a4");
    private static Icon? ArrowsLeftRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-left-right?f=classic&amp;s=light">Arrows Left Right</a>
    /// </summary>
    public static Icon ArrowsLeftRight => ArrowsLeftRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-left-right", "f07e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-left-right?f=classic&amp;s=light">Arrows Left Right</a>
    /// </summary>
    public static Icon ArrowsH => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsLeftRight;
    private static Icon? ArrowsLeftRightToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-left-right-to-line?f=classic&amp;s=light">Arrows Left Right To Line</a>
    /// </summary>
    public static Icon ArrowsLeftRightToLine => ArrowsLeftRightToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-left-right-to-line", "e4ba");
    private static Icon? ArrowsMaximizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-maximize?f=classic&amp;s=light">Arrows Maximize</a>
    /// </summary>
    public static Icon ArrowsMaximize => ArrowsMaximizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-maximize", "f31d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-maximize?f=classic&amp;s=light">Arrows Maximize</a>
    /// </summary>
    public static Icon ExpandArrows => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsMaximize;
    private static Icon? ArrowsMinimizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-minimize?f=classic&amp;s=light">Arrows Minimize</a>
    /// </summary>
    public static Icon ArrowsMinimize => ArrowsMinimizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-minimize", "e0a5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-minimize?f=classic&amp;s=light">Arrows Minimize</a>
    /// </summary>
    public static Icon CompressArrows => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsMinimize;
    private static Icon? ArrowsRepeatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-repeat?f=classic&amp;s=light">Arrows Repeat</a>
    /// </summary>
    public static Icon ArrowsRepeat => ArrowsRepeatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-repeat", "f364");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-repeat?f=classic&amp;s=light">Arrows Repeat</a>
    /// </summary>
    public static Icon RepeatAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsRepeat;
    private static Icon? ArrowsRepeat1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-repeat-1?f=classic&amp;s=light">Arrows Repeat 1</a>
    /// </summary>
    public static Icon ArrowsRepeat1 => ArrowsRepeat1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-repeat-1", "f366");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-repeat-1?f=classic&amp;s=light">Arrows Repeat 1</a>
    /// </summary>
    public static Icon Repeat1Alt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsRepeat1;
    private static Icon? ArrowsRetweetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-retweet?f=classic&amp;s=light">Arrows Retweet</a>
    /// </summary>
    public static Icon ArrowsRetweet => ArrowsRetweetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-retweet", "f361");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-retweet?f=classic&amp;s=light">Arrows Retweet</a>
    /// </summary>
    public static Icon RetweetAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsRetweet;
    private static Icon? ArrowsRotatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-rotate?f=classic&amp;s=light">Arrows Rotate</a>
    /// </summary>
    public static Icon ArrowsRotate => ArrowsRotatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-rotate", "f021");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-rotate?f=classic&amp;s=light">Arrows Rotate</a>
    /// </summary>
    public static Icon Refresh => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsRotate;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-rotate?f=classic&amp;s=light">Arrows Rotate</a>
    /// </summary>
    public static Icon Sync => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsRotate;
    private static Icon? ArrowsRotateReversef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-rotate-reverse?f=classic&amp;s=light">Arrows Rotate Reverse</a>
    /// </summary>
    public static Icon ArrowsRotateReverse => ArrowsRotateReversef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-rotate-reverse", "e630");
    private static Icon? ArrowsSpinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-spin?f=classic&amp;s=light">Arrows Spin</a>
    /// </summary>
    public static Icon ArrowsSpin => ArrowsSpinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-spin", "e4bb");
    private static Icon? ArrowsSplitUpAndLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-split-up-and-left?f=classic&amp;s=light">Arrows Split Up And Left</a>
    /// </summary>
    public static Icon ArrowsSplitUpAndLeft => ArrowsSplitUpAndLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-split-up-and-left", "e4bc");
    private static Icon? ArrowsToCirclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-to-circle?f=classic&amp;s=light">Arrows To Circle</a>
    /// </summary>
    public static Icon ArrowsToCircle => ArrowsToCirclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-to-circle", "e4bd");
    private static Icon? ArrowsToDotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-to-dot?f=classic&amp;s=light">Arrows To Dot</a>
    /// </summary>
    public static Icon ArrowsToDot => ArrowsToDotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-to-dot", "e4be");
    private static Icon? ArrowsToDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-to-dotted-line?f=classic&amp;s=light">Arrows To Dotted Line</a>
    /// </summary>
    public static Icon ArrowsToDottedLine => ArrowsToDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-to-dotted-line", "e0a6");
    private static Icon? ArrowsToEyef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-to-eye?f=classic&amp;s=light">Arrows To Eye</a>
    /// </summary>
    public static Icon ArrowsToEye => ArrowsToEyef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-to-eye", "e4bf");
    private static Icon? ArrowsToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-to-line?f=classic&amp;s=light">Arrows To Line</a>
    /// </summary>
    public static Icon ArrowsToLine => ArrowsToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-to-line", "e0a7");
    private static Icon? ArrowsTurnRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-turn-right?f=classic&amp;s=light">Arrows Turn Right</a>
    /// </summary>
    public static Icon ArrowsTurnRight => ArrowsTurnRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-turn-right", "e4c0");
    private static Icon? ArrowsTurnToDotsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-turn-to-dots?f=classic&amp;s=light">Arrows Turn To Dots</a>
    /// </summary>
    public static Icon ArrowsTurnToDots => ArrowsTurnToDotsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-turn-to-dots", "e4c1");
    private static Icon? ArrowsUpDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-up-down?f=classic&amp;s=light">Arrows Up Down</a>
    /// </summary>
    public static Icon ArrowsUpDown => ArrowsUpDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-up-down", "f07d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-up-down?f=classic&amp;s=light">Arrows Up Down</a>
    /// </summary>
    public static Icon ArrowsV => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsUpDown;
    private static Icon? ArrowsUpDownLeftRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-up-down-left-right?f=classic&amp;s=light">Arrows Up Down Left Right</a>
    /// </summary>
    public static Icon ArrowsUpDownLeftRight => ArrowsUpDownLeftRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-up-down-left-right", "f047");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-up-down-left-right?f=classic&amp;s=light">Arrows Up Down Left Right</a>
    /// </summary>
    public static Icon Arrows => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ArrowsUpDownLeftRight;
    private static Icon? ArrowsUpToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/arrows-up-to-line?f=classic&amp;s=light">Arrows Up To Line</a>
    /// </summary>
    public static Icon ArrowsUpToLine => ArrowsUpToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "arrows-up-to-line", "e4c2");
    private static Icon? Asteriskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/asterisk?f=classic&amp;s=light">Asterisk</a>
    /// </summary>
    public static Icon Asterisk => Asteriskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "asterisk", "2a");
    private static Icon? Atf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/at?f=classic&amp;s=light">At</a>
    /// </summary>
    public static Icon At => Atf ??= new Icon(IconFamily.Classic, IconStyle.Light, "at", "40");
    private static Icon? Atomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/atom?f=classic&amp;s=light">Atom</a>
    /// </summary>
    public static Icon Atom => Atomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "atom", "f5d2");
    private static Icon? AtomSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/atom-simple?f=classic&amp;s=light">Atom Simple</a>
    /// </summary>
    public static Icon AtomSimple => AtomSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "atom-simple", "f5d3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/atom-simple?f=classic&amp;s=light">Atom Simple</a>
    /// </summary>
    public static Icon AtomAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.AtomSimple;
    private static Icon? AudioDescriptionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/audio-description?f=classic&amp;s=light">Audio Description</a>
    /// </summary>
    public static Icon AudioDescription => AudioDescriptionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "audio-description", "f29e");
    private static Icon? AudioDescriptionSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/audio-description-slash?f=classic&amp;s=light">Audio Description Slash</a>
    /// </summary>
    public static Icon AudioDescriptionSlash => AudioDescriptionSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "audio-description-slash", "e0a8");
    private static Icon? AustralSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/austral-sign?f=classic&amp;s=light">Austral Sign</a>
    /// </summary>
    public static Icon AustralSign => AustralSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "austral-sign", "e0a9");
    private static Icon? Avocadof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/avocado?f=classic&amp;s=light">Avocado</a>
    /// </summary>
    public static Icon Avocado => Avocadof ??= new Icon(IconFamily.Classic, IconStyle.Light, "avocado", "e0aa");
    private static Icon? Awardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/award?f=classic&amp;s=light">Award</a>
    /// </summary>
    public static Icon Award => Awardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "award", "f559");
    private static Icon? AwardSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/award-simple?f=classic&amp;s=light">Award Simple</a>
    /// </summary>
    public static Icon AwardSimple => AwardSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "award-simple", "e0ab");
    private static Icon? Axef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/axe?f=classic&amp;s=light">Axe</a>
    /// </summary>
    public static Icon Axe => Axef ??= new Icon(IconFamily.Classic, IconStyle.Light, "axe", "f6b2");
    private static Icon? AxeBattlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/axe-battle?f=classic&amp;s=light">Axe Battle</a>
    /// </summary>
    public static Icon AxeBattle => AxeBattlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "axe-battle", "f6b3");
    private static Icon? Bf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/b?f=classic&amp;s=light">B</a>
    /// </summary>
    public static Icon B => Bf ??= new Icon(IconFamily.Classic, IconStyle.Light, "b", "42");
    private static Icon? Babyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baby?f=classic&amp;s=light">Baby</a>
    /// </summary>
    public static Icon Baby => Babyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "baby", "f77c");
    private static Icon? BabyCarriagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baby-carriage?f=classic&amp;s=light">Baby Carriage</a>
    /// </summary>
    public static Icon BabyCarriage => BabyCarriagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "baby-carriage", "f77d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baby-carriage?f=classic&amp;s=light">Baby Carriage</a>
    /// </summary>
    public static Icon CarriageBaby => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BabyCarriage;
    private static Icon? Backpackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/backpack?f=classic&amp;s=light">Backpack</a>
    /// </summary>
    public static Icon Backpack => Backpackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "backpack", "f5d4");
    private static Icon? Backwardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/backward?f=classic&amp;s=light">Backward</a>
    /// </summary>
    public static Icon Backward => Backwardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "backward", "f04a");
    private static Icon? BackwardFastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/backward-fast?f=classic&amp;s=light">Backward Fast</a>
    /// </summary>
    public static Icon BackwardFast => BackwardFastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "backward-fast", "f049");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/backward-fast?f=classic&amp;s=light">Backward Fast</a>
    /// </summary>
    public static Icon FastBackward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BackwardFast;
    private static Icon? BackwardStepf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/backward-step?f=classic&amp;s=light">Backward Step</a>
    /// </summary>
    public static Icon BackwardStep => BackwardStepf ??= new Icon(IconFamily.Classic, IconStyle.Light, "backward-step", "f048");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/backward-step?f=classic&amp;s=light">Backward Step</a>
    /// </summary>
    public static Icon StepBackward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BackwardStep;
    private static Icon? Baconf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bacon?f=classic&amp;s=light">Bacon</a>
    /// </summary>
    public static Icon Bacon => Baconf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bacon", "f7e5");
    private static Icon? Bacteriaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bacteria?f=classic&amp;s=light">Bacteria</a>
    /// </summary>
    public static Icon Bacteria => Bacteriaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bacteria", "e059");
    private static Icon? Bacteriumf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bacterium?f=classic&amp;s=light">Bacterium</a>
    /// </summary>
    public static Icon Bacterium => Bacteriumf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bacterium", "e05a");
    private static Icon? Badgef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badge?f=classic&amp;s=light">Badge</a>
    /// </summary>
    public static Icon Badge => Badgef ??= new Icon(IconFamily.Classic, IconStyle.Light, "badge", "f335");
    private static Icon? BadgeCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badge-check?f=classic&amp;s=light">Badge Check</a>
    /// </summary>
    public static Icon BadgeCheck => BadgeCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "badge-check", "f336");
    private static Icon? BadgeDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badge-dollar?f=classic&amp;s=light">Badge Dollar</a>
    /// </summary>
    public static Icon BadgeDollar => BadgeDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "badge-dollar", "f645");
    private static Icon? BadgePercentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badge-percent?f=classic&amp;s=light">Badge Percent</a>
    /// </summary>
    public static Icon BadgePercent => BadgePercentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "badge-percent", "f646");
    private static Icon? BadgeSherifff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badge-sheriff?f=classic&amp;s=light">Badge Sheriff</a>
    /// </summary>
    public static Icon BadgeSheriff => BadgeSherifff ??= new Icon(IconFamily.Classic, IconStyle.Light, "badge-sheriff", "f8a2");
    private static Icon? BadgerHoneyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badger-honey?f=classic&amp;s=light">Badger Honey</a>
    /// </summary>
    public static Icon BadgerHoney => BadgerHoneyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "badger-honey", "f6b4");
    private static Icon? Badmintonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/badminton?f=classic&amp;s=light">Badminton</a>
    /// </summary>
    public static Icon Badminton => Badmintonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "badminton", "e33a");
    private static Icon? BagSeedlingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bag-seedling?f=classic&amp;s=light">Bag Seedling</a>
    /// </summary>
    public static Icon BagSeedling => BagSeedlingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bag-seedling", "e5f2");
    private static Icon? BagShoppingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bag-shopping?f=classic&amp;s=light">Bag Shopping</a>
    /// </summary>
    public static Icon BagShopping => BagShoppingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bag-shopping", "f290");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bag-shopping?f=classic&amp;s=light">Bag Shopping</a>
    /// </summary>
    public static Icon ShoppingBag => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BagShopping;
    private static Icon? BagShoppingMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bag-shopping-minus?f=classic&amp;s=light">Bag Shopping Minus</a>
    /// </summary>
    public static Icon BagShoppingMinus => BagShoppingMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bag-shopping-minus", "e650");
    private static Icon? BagShoppingPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bag-shopping-plus?f=classic&amp;s=light">Bag Shopping Plus</a>
    /// </summary>
    public static Icon BagShoppingPlus => BagShoppingPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bag-shopping-plus", "e651");
    private static Icon? Bagelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bagel?f=classic&amp;s=light">Bagel</a>
    /// </summary>
    public static Icon Bagel => Bagelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bagel", "e3d7");
    private static Icon? BagsShoppingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bags-shopping?f=classic&amp;s=light">Bags Shopping</a>
    /// </summary>
    public static Icon BagsShopping => BagsShoppingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bags-shopping", "f847");
    private static Icon? Baguettef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baguette?f=classic&amp;s=light">Baguette</a>
    /// </summary>
    public static Icon Baguette => Baguettef ??= new Icon(IconFamily.Classic, IconStyle.Light, "baguette", "e3d8");
    private static Icon? Bahaif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bahai?f=classic&amp;s=light">Bahai</a>
    /// </summary>
    public static Icon Bahai => Bahaif ??= new Icon(IconFamily.Classic, IconStyle.Light, "bahai", "f666");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bahai?f=classic&amp;s=light">Bahai</a>
    /// </summary>
    public static Icon Haykal => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Bahai;
    private static Icon? BahtSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baht-sign?f=classic&amp;s=light">Baht Sign</a>
    /// </summary>
    public static Icon BahtSign => BahtSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "baht-sign", "e0ac");
    private static Icon? BallPilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ball-pile?f=classic&amp;s=light">Ball Pile</a>
    /// </summary>
    public static Icon BallPile => BallPilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "ball-pile", "f77e");
    private static Icon? Balloonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/balloon?f=classic&amp;s=light">Balloon</a>
    /// </summary>
    public static Icon Balloon => Balloonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "balloon", "e2e3");
    private static Icon? Balloonsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/balloons?f=classic&amp;s=light">Balloons</a>
    /// </summary>
    public static Icon Balloons => Balloonsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "balloons", "e2e4");
    private static Icon? Ballotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ballot?f=classic&amp;s=light">Ballot</a>
    /// </summary>
    public static Icon Ballot => Ballotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ballot", "f732");
    private static Icon? BallotCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ballot-check?f=classic&amp;s=light">Ballot Check</a>
    /// </summary>
    public static Icon BallotCheck => BallotCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ballot-check", "f733");
    private static Icon? Banf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban?f=classic&amp;s=light">Ban</a>
    /// </summary>
    public static Icon Ban => Banf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ban", "f05e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban?f=classic&amp;s=light">Ban</a>
    /// </summary>
    public static Icon Cancel => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Ban;
    private static Icon? BanBugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban-bug?f=classic&amp;s=light">Ban Bug</a>
    /// </summary>
    public static Icon BanBug => BanBugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ban-bug", "f7f9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban-bug?f=classic&amp;s=light">Ban Bug</a>
    /// </summary>
    public static Icon Debug => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BanBug;
    private static Icon? BanParkingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban-parking?f=classic&amp;s=light">Ban Parking</a>
    /// </summary>
    public static Icon BanParking => BanParkingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ban-parking", "f616");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban-parking?f=classic&amp;s=light">Ban Parking</a>
    /// </summary>
    public static Icon ParkingCircleSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BanParking;
    private static Icon? BanSmokingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban-smoking?f=classic&amp;s=light">Ban Smoking</a>
    /// </summary>
    public static Icon BanSmoking => BanSmokingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ban-smoking", "f54d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ban-smoking?f=classic&amp;s=light">Ban Smoking</a>
    /// </summary>
    public static Icon SmokingBan => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BanSmoking;
    private static Icon? Bananaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/banana?f=classic&amp;s=light">Banana</a>
    /// </summary>
    public static Icon Banana => Bananaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "banana", "e2e5");
    private static Icon? Bandagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bandage?f=classic&amp;s=light">Bandage</a>
    /// </summary>
    public static Icon Bandage => Bandagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bandage", "f462");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bandage?f=classic&amp;s=light">Bandage</a>
    /// </summary>
    public static Icon BandAid => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Bandage;
    private static Icon? BangladeshiTakaSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bangladeshi-taka-sign?f=classic&amp;s=light">Bangladeshi Taka Sign</a>
    /// </summary>
    public static Icon BangladeshiTakaSign => BangladeshiTakaSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bangladeshi-taka-sign", "e2e6");
    private static Icon? Banjof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/banjo?f=classic&amp;s=light">Banjo</a>
    /// </summary>
    public static Icon Banjo => Banjof ??= new Icon(IconFamily.Classic, IconStyle.Light, "banjo", "f8a3");
    private static Icon? Barcodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/barcode?f=classic&amp;s=light">Barcode</a>
    /// </summary>
    public static Icon Barcode => Barcodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "barcode", "f02a");
    private static Icon? BarcodeReadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/barcode-read?f=classic&amp;s=light">Barcode Read</a>
    /// </summary>
    public static Icon BarcodeRead => BarcodeReadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "barcode-read", "f464");
    private static Icon? BarcodeScanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/barcode-scan?f=classic&amp;s=light">Barcode Scan</a>
    /// </summary>
    public static Icon BarcodeScan => BarcodeScanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "barcode-scan", "f465");
    private static Icon? Barsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars?f=classic&amp;s=light">Bars</a>
    /// </summary>
    public static Icon Bars => Barsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bars", "f0c9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars?f=classic&amp;s=light">Bars</a>
    /// </summary>
    public static Icon Navicon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Bars;
    private static Icon? BarsFilterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-filter?f=classic&amp;s=light">Bars Filter</a>
    /// </summary>
    public static Icon BarsFilter => BarsFilterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bars-filter", "e0ad");
    private static Icon? BarsProgressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-progress?f=classic&amp;s=light">Bars Progress</a>
    /// </summary>
    public static Icon BarsProgress => BarsProgressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bars-progress", "f828");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-progress?f=classic&amp;s=light">Bars Progress</a>
    /// </summary>
    public static Icon TasksAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BarsProgress;
    private static Icon? BarsSortf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-sort?f=classic&amp;s=light">Bars Sort</a>
    /// </summary>
    public static Icon BarsSort => BarsSortf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bars-sort", "e0ae");
    private static Icon? BarsStaggeredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-staggered?f=classic&amp;s=light">Bars Staggered</a>
    /// </summary>
    public static Icon BarsStaggered => BarsStaggeredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bars-staggered", "f550");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-staggered?f=classic&amp;s=light">Bars Staggered</a>
    /// </summary>
    public static Icon Reorder => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BarsStaggered;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bars-staggered?f=classic&amp;s=light">Bars Staggered</a>
    /// </summary>
    public static Icon Stream => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BarsStaggered;
    private static Icon? Baseballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baseball?f=classic&amp;s=light">Baseball</a>
    /// </summary>
    public static Icon Baseball => Baseballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "baseball", "f433");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baseball?f=classic&amp;s=light">Baseball</a>
    /// </summary>
    public static Icon BaseballBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Baseball;
    private static Icon? BaseballBatBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/baseball-bat-ball?f=classic&amp;s=light">Baseball Bat Ball</a>
    /// </summary>
    public static Icon BaseballBatBall => BaseballBatBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "baseball-bat-ball", "f432");
    private static Icon? BasketShoppingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basket-shopping?f=classic&amp;s=light">Basket Shopping</a>
    /// </summary>
    public static Icon BasketShopping => BasketShoppingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "basket-shopping", "f291");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basket-shopping?f=classic&amp;s=light">Basket Shopping</a>
    /// </summary>
    public static Icon ShoppingBasket => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BasketShopping;
    private static Icon? BasketShoppingMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basket-shopping-minus?f=classic&amp;s=light">Basket Shopping Minus</a>
    /// </summary>
    public static Icon BasketShoppingMinus => BasketShoppingMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "basket-shopping-minus", "e652");
    private static Icon? BasketShoppingPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basket-shopping-plus?f=classic&amp;s=light">Basket Shopping Plus</a>
    /// </summary>
    public static Icon BasketShoppingPlus => BasketShoppingPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "basket-shopping-plus", "e653");
    private static Icon? BasketShoppingSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basket-shopping-simple?f=classic&amp;s=light">Basket Shopping Simple</a>
    /// </summary>
    public static Icon BasketShoppingSimple => BasketShoppingSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "basket-shopping-simple", "e0af");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basket-shopping-simple?f=classic&amp;s=light">Basket Shopping Simple</a>
    /// </summary>
    public static Icon ShoppingBasketAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BasketShoppingSimple;
    private static Icon? Basketballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basketball?f=classic&amp;s=light">Basketball</a>
    /// </summary>
    public static Icon Basketball => Basketballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "basketball", "f434");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basketball?f=classic&amp;s=light">Basketball</a>
    /// </summary>
    public static Icon BasketballBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Basketball;
    private static Icon? BasketballHoopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/basketball-hoop?f=classic&amp;s=light">Basketball Hoop</a>
    /// </summary>
    public static Icon BasketballHoop => BasketballHoopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "basketball-hoop", "f435");
    private static Icon? Batf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bat?f=classic&amp;s=light">Bat</a>
    /// </summary>
    public static Icon Bat => Batf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bat", "f6b5");
    private static Icon? Bathf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bath?f=classic&amp;s=light">Bath</a>
    /// </summary>
    public static Icon Bath => Bathf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bath", "f2cd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bath?f=classic&amp;s=light">Bath</a>
    /// </summary>
    public static Icon Bathtub => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Bath;
    private static Icon? BatteryBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-bolt?f=classic&amp;s=light">Battery Bolt</a>
    /// </summary>
    public static Icon BatteryBolt => BatteryBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-bolt", "f376");
    private static Icon? BatteryEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-empty?f=classic&amp;s=light">Battery Empty</a>
    /// </summary>
    public static Icon BatteryEmpty => BatteryEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-empty", "f244");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-empty?f=classic&amp;s=light">Battery Empty</a>
    /// </summary>
    public static Icon Battery0 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryEmpty;
    private static Icon? BatteryExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-exclamation?f=classic&amp;s=light">Battery Exclamation</a>
    /// </summary>
    public static Icon BatteryExclamation => BatteryExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-exclamation", "e0b0");
    private static Icon? BatteryFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-full?f=classic&amp;s=light">Battery Full</a>
    /// </summary>
    public static Icon BatteryFull => BatteryFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-full", "f240");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-full?f=classic&amp;s=light">Battery Full</a>
    /// </summary>
    public static Icon Battery => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryFull;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-full?f=classic&amp;s=light">Battery Full</a>
    /// </summary>
    public static Icon Battery5 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryFull;
    private static Icon? BatteryHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-half?f=classic&amp;s=light">Battery Half</a>
    /// </summary>
    public static Icon BatteryHalf => BatteryHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-half", "f242");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-half?f=classic&amp;s=light">Battery Half</a>
    /// </summary>
    public static Icon Battery3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryHalf;
    private static Icon? BatteryLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-low?f=classic&amp;s=light">Battery Low</a>
    /// </summary>
    public static Icon BatteryLow => BatteryLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-low", "e0b1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-low?f=classic&amp;s=light">Battery Low</a>
    /// </summary>
    public static Icon Battery1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryLow;
    private static Icon? BatteryQuarterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-quarter?f=classic&amp;s=light">Battery Quarter</a>
    /// </summary>
    public static Icon BatteryQuarter => BatteryQuarterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-quarter", "f243");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-quarter?f=classic&amp;s=light">Battery Quarter</a>
    /// </summary>
    public static Icon Battery2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryQuarter;
    private static Icon? BatterySlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-slash?f=classic&amp;s=light">Battery Slash</a>
    /// </summary>
    public static Icon BatterySlash => BatterySlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-slash", "f377");
    private static Icon? BatteryThreeQuartersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-three-quarters?f=classic&amp;s=light">Battery Three Quarters</a>
    /// </summary>
    public static Icon BatteryThreeQuarters => BatteryThreeQuartersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "battery-three-quarters", "f241");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/battery-three-quarters?f=classic&amp;s=light">Battery Three Quarters</a>
    /// </summary>
    public static Icon Battery4 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BatteryThreeQuarters;
    private static Icon? Bedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed?f=classic&amp;s=light">Bed</a>
    /// </summary>
    public static Icon Bed => Bedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bed", "f236");
    private static Icon? BedBunkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed-bunk?f=classic&amp;s=light">Bed Bunk</a>
    /// </summary>
    public static Icon BedBunk => BedBunkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bed-bunk", "f8f8");
    private static Icon? BedEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed-empty?f=classic&amp;s=light">Bed Empty</a>
    /// </summary>
    public static Icon BedEmpty => BedEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bed-empty", "f8f9");
    private static Icon? BedFrontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed-front?f=classic&amp;s=light">Bed Front</a>
    /// </summary>
    public static Icon BedFront => BedFrontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bed-front", "f8f7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed-front?f=classic&amp;s=light">Bed Front</a>
    /// </summary>
    public static Icon BedAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BedFront;
    private static Icon? BedPulsef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed-pulse?f=classic&amp;s=light">Bed Pulse</a>
    /// </summary>
    public static Icon BedPulse => BedPulsef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bed-pulse", "f487");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bed-pulse?f=classic&amp;s=light">Bed Pulse</a>
    /// </summary>
    public static Icon Procedures => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BedPulse;
    private static Icon? Beef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bee?f=classic&amp;s=light">Bee</a>
    /// </summary>
    public static Icon Bee => Beef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bee", "e0b2");
    private static Icon? BeerMugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/beer-mug?f=classic&amp;s=light">Beer Mug</a>
    /// </summary>
    public static Icon BeerMug => BeerMugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "beer-mug", "e0b3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/beer-mug?f=classic&amp;s=light">Beer Mug</a>
    /// </summary>
    public static Icon BeerFoam => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BeerMug;
    private static Icon? BeerMugEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/beer-mug-empty?f=classic&amp;s=light">Beer Mug Empty</a>
    /// </summary>
    public static Icon BeerMugEmpty => BeerMugEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "beer-mug-empty", "f0fc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/beer-mug-empty?f=classic&amp;s=light">Beer Mug Empty</a>
    /// </summary>
    public static Icon Beer => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BeerMugEmpty;
    private static Icon? Bellf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell?f=classic&amp;s=light">Bell</a>
    /// </summary>
    public static Icon Bell => Bellf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell", "f0f3");
    private static Icon? BellConciergef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-concierge?f=classic&amp;s=light">Bell Concierge</a>
    /// </summary>
    public static Icon BellConcierge => BellConciergef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-concierge", "f562");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-concierge?f=classic&amp;s=light">Bell Concierge</a>
    /// </summary>
    public static Icon ConciergeBell => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BellConcierge;
    private static Icon? BellExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-exclamation?f=classic&amp;s=light">Bell Exclamation</a>
    /// </summary>
    public static Icon BellExclamation => BellExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-exclamation", "f848");
    private static Icon? BellOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-on?f=classic&amp;s=light">Bell On</a>
    /// </summary>
    public static Icon BellOn => BellOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-on", "f8fa");
    private static Icon? BellPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-plus?f=classic&amp;s=light">Bell Plus</a>
    /// </summary>
    public static Icon BellPlus => BellPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-plus", "f849");
    private static Icon? BellRingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-ring?f=classic&amp;s=light">Bell Ring</a>
    /// </summary>
    public static Icon BellRing => BellRingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-ring", "e62c");
    private static Icon? BellSchoolf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-school?f=classic&amp;s=light">Bell School</a>
    /// </summary>
    public static Icon BellSchool => BellSchoolf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-school", "f5d5");
    private static Icon? BellSchoolSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-school-slash?f=classic&amp;s=light">Bell School Slash</a>
    /// </summary>
    public static Icon BellSchoolSlash => BellSchoolSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-school-slash", "f5d6");
    private static Icon? BellSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bell-slash?f=classic&amp;s=light">Bell Slash</a>
    /// </summary>
    public static Icon BellSlash => BellSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bell-slash", "f1f6");
    private static Icon? Bellsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bells?f=classic&amp;s=light">Bells</a>
    /// </summary>
    public static Icon Bells => Bellsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bells", "f77f");
    private static Icon? BenchTreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bench-tree?f=classic&amp;s=light">Bench Tree</a>
    /// </summary>
    public static Icon BenchTree => BenchTreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bench-tree", "e2e7");
    private static Icon? BezierCurvef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bezier-curve?f=classic&amp;s=light">Bezier Curve</a>
    /// </summary>
    public static Icon BezierCurve => BezierCurvef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bezier-curve", "f55b");
    private static Icon? Bicyclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bicycle?f=classic&amp;s=light">Bicycle</a>
    /// </summary>
    public static Icon Bicycle => Bicyclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bicycle", "f206");
    private static Icon? Billboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/billboard?f=classic&amp;s=light">Billboard</a>
    /// </summary>
    public static Icon Billboard => Billboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "billboard", "e5cd");
    private static Icon? BinBottlesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bin-bottles?f=classic&amp;s=light">Bin Bottles</a>
    /// </summary>
    public static Icon BinBottles => BinBottlesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bin-bottles", "e5f5");
    private static Icon? BinBottlesRecyclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bin-bottles-recycle?f=classic&amp;s=light">Bin Bottles Recycle</a>
    /// </summary>
    public static Icon BinBottlesRecycle => BinBottlesRecyclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bin-bottles-recycle", "e5f6");
    private static Icon? BinRecyclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bin-recycle?f=classic&amp;s=light">Bin Recycle</a>
    /// </summary>
    public static Icon BinRecycle => BinRecyclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bin-recycle", "e5f7");
    private static Icon? Binaryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/binary?f=classic&amp;s=light">Binary</a>
    /// </summary>
    public static Icon Binary => Binaryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "binary", "e33b");
    private static Icon? BinaryCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/binary-circle-check?f=classic&amp;s=light">Binary Circle Check</a>
    /// </summary>
    public static Icon BinaryCircleCheck => BinaryCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "binary-circle-check", "e33c");
    private static Icon? BinaryLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/binary-lock?f=classic&amp;s=light">Binary Lock</a>
    /// </summary>
    public static Icon BinaryLock => BinaryLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "binary-lock", "e33d");
    private static Icon? BinarySlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/binary-slash?f=classic&amp;s=light">Binary Slash</a>
    /// </summary>
    public static Icon BinarySlash => BinarySlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "binary-slash", "e33e");
    private static Icon? Binocularsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/binoculars?f=classic&amp;s=light">Binoculars</a>
    /// </summary>
    public static Icon Binoculars => Binocularsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "binoculars", "f1e5");
    private static Icon? Biohazardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/biohazard?f=classic&amp;s=light">Biohazard</a>
    /// </summary>
    public static Icon Biohazard => Biohazardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "biohazard", "f780");
    private static Icon? Birdf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bird?f=classic&amp;s=light">Bird</a>
    /// </summary>
    public static Icon Bird => Birdf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bird", "e469");
    private static Icon? BitcoinSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bitcoin-sign?f=classic&amp;s=light">Bitcoin Sign</a>
    /// </summary>
    public static Icon BitcoinSign => BitcoinSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bitcoin-sign", "e0b4");
    private static Icon? Blanketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blanket?f=classic&amp;s=light">Blanket</a>
    /// </summary>
    public static Icon Blanket => Blanketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blanket", "f498");
    private static Icon? BlanketFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blanket-fire?f=classic&amp;s=light">Blanket Fire</a>
    /// </summary>
    public static Icon BlanketFire => BlanketFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "blanket-fire", "e3da");
    private static Icon? Blenderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blender?f=classic&amp;s=light">Blender</a>
    /// </summary>
    public static Icon Blender => Blenderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blender", "f517");
    private static Icon? BlenderPhonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blender-phone?f=classic&amp;s=light">Blender Phone</a>
    /// </summary>
    public static Icon BlenderPhone => BlenderPhonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "blender-phone", "f6b6");
    private static Icon? Blindsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blinds?f=classic&amp;s=light">Blinds</a>
    /// </summary>
    public static Icon Blinds => Blindsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blinds", "f8fb");
    private static Icon? BlindsOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blinds-open?f=classic&amp;s=light">Blinds Open</a>
    /// </summary>
    public static Icon BlindsOpen => BlindsOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blinds-open", "f8fc");
    private static Icon? BlindsRaisedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blinds-raised?f=classic&amp;s=light">Blinds Raised</a>
    /// </summary>
    public static Icon BlindsRaised => BlindsRaisedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blinds-raised", "f8fd");
    private static Icon? Blockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block?f=classic&amp;s=light">Block</a>
    /// </summary>
    public static Icon Block => Blockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "block", "e46a");
    private static Icon? BlockBrickf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block-brick?f=classic&amp;s=light">Block Brick</a>
    /// </summary>
    public static Icon BlockBrick => BlockBrickf ??= new Icon(IconFamily.Classic, IconStyle.Light, "block-brick", "e3db");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block-brick?f=classic&amp;s=light">Block Brick</a>
    /// </summary>
    public static Icon WallBrick => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BlockBrick;
    private static Icon? BlockBrickFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block-brick-fire?f=classic&amp;s=light">Block Brick Fire</a>
    /// </summary>
    public static Icon BlockBrickFire => BlockBrickFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "block-brick-fire", "e3dc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block-brick-fire?f=classic&amp;s=light">Block Brick Fire</a>
    /// </summary>
    public static Icon Firewall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BlockBrickFire;
    private static Icon? BlockQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block-question?f=classic&amp;s=light">Block Question</a>
    /// </summary>
    public static Icon BlockQuestion => BlockQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "block-question", "e3dd");
    private static Icon? BlockQuotef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/block-quote?f=classic&amp;s=light">Block Quote</a>
    /// </summary>
    public static Icon BlockQuote => BlockQuotef ??= new Icon(IconFamily.Classic, IconStyle.Light, "block-quote", "e0b5");
    private static Icon? Blogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blog?f=classic&amp;s=light">Blog</a>
    /// </summary>
    public static Icon Blog => Blogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blog", "f781");
    private static Icon? Blueberriesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/blueberries?f=classic&amp;s=light">Blueberries</a>
    /// </summary>
    public static Icon Blueberries => Blueberriesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "blueberries", "e2e8");
    private static Icon? Bluetoothf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bluetooth?f=classic&amp;s=light">Bluetooth</a>
    /// </summary>
    public static Icon Bluetooth => Bluetoothf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bluetooth", "f293");
    private static Icon? Boldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bold?f=classic&amp;s=light">Bold</a>
    /// </summary>
    public static Icon Bold => Boldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bold", "f032");
    private static Icon? Boltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bolt?f=classic&amp;s=light">Bolt</a>
    /// </summary>
    public static Icon Bolt => Boltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bolt", "f0e7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bolt?f=classic&amp;s=light">Bolt</a>
    /// </summary>
    public static Icon Zap => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Bolt;
    private static Icon? BoltAutof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bolt-auto?f=classic&amp;s=light">Bolt Auto</a>
    /// </summary>
    public static Icon BoltAuto => BoltAutof ??= new Icon(IconFamily.Classic, IconStyle.Light, "bolt-auto", "e0b6");
    private static Icon? BoltLightningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bolt-lightning?f=classic&amp;s=light">Bolt Lightning</a>
    /// </summary>
    public static Icon BoltLightning => BoltLightningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bolt-lightning", "e0b7");
    private static Icon? BoltSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bolt-slash?f=classic&amp;s=light">Bolt Slash</a>
    /// </summary>
    public static Icon BoltSlash => BoltSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bolt-slash", "e0b8");
    private static Icon? Bombf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bomb?f=classic&amp;s=light">Bomb</a>
    /// </summary>
    public static Icon Bomb => Bombf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bomb", "f1e2");
    private static Icon? Bonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bone?f=classic&amp;s=light">Bone</a>
    /// </summary>
    public static Icon Bone => Bonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bone", "f5d7");
    private static Icon? BoneBreakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bone-break?f=classic&amp;s=light">Bone Break</a>
    /// </summary>
    public static Icon BoneBreak => BoneBreakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bone-break", "f5d8");
    private static Icon? Bongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bong?f=classic&amp;s=light">Bong</a>
    /// </summary>
    public static Icon Bong => Bongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bong", "f55c");
    private static Icon? Bookf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book?f=classic&amp;s=light">Book</a>
    /// </summary>
    public static Icon Book => Bookf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book", "f02d");
    private static Icon? BookArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-arrow-right?f=classic&amp;s=light">Book Arrow Right</a>
    /// </summary>
    public static Icon BookArrowRight => BookArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-arrow-right", "e0b9");
    private static Icon? BookArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-arrow-up?f=classic&amp;s=light">Book Arrow Up</a>
    /// </summary>
    public static Icon BookArrowUp => BookArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-arrow-up", "e0ba");
    private static Icon? BookAtlasf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-atlas?f=classic&amp;s=light">Book Atlas</a>
    /// </summary>
    public static Icon BookAtlas => BookAtlasf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-atlas", "f558");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-atlas?f=classic&amp;s=light">Book Atlas</a>
    /// </summary>
    public static Icon Atlas => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookAtlas;
    private static Icon? BookBiblef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-bible?f=classic&amp;s=light">Book Bible</a>
    /// </summary>
    public static Icon BookBible => BookBiblef ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-bible", "f647");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-bible?f=classic&amp;s=light">Book Bible</a>
    /// </summary>
    public static Icon Bible => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookBible;
    private static Icon? BookBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-blank?f=classic&amp;s=light">Book Blank</a>
    /// </summary>
    public static Icon BookBlank => BookBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-blank", "f5d9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-blank?f=classic&amp;s=light">Book Blank</a>
    /// </summary>
    public static Icon BookAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookBlank;
    private static Icon? BookBookmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-bookmark?f=classic&amp;s=light">Book Bookmark</a>
    /// </summary>
    public static Icon BookBookmark => BookBookmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-bookmark", "e0bb");
    private static Icon? BookCircleArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-circle-arrow-right?f=classic&amp;s=light">Book Circle Arrow Right</a>
    /// </summary>
    public static Icon BookCircleArrowRight => BookCircleArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-circle-arrow-right", "e0bc");
    private static Icon? BookCircleArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-circle-arrow-up?f=classic&amp;s=light">Book Circle Arrow Up</a>
    /// </summary>
    public static Icon BookCircleArrowUp => BookCircleArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-circle-arrow-up", "e0bd");
    private static Icon? BookCopyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-copy?f=classic&amp;s=light">Book Copy</a>
    /// </summary>
    public static Icon BookCopy => BookCopyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-copy", "e0be");
    private static Icon? BookFontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-font?f=classic&amp;s=light">Book Font</a>
    /// </summary>
    public static Icon BookFont => BookFontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-font", "e0bf");
    private static Icon? BookHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-heart?f=classic&amp;s=light">Book Heart</a>
    /// </summary>
    public static Icon BookHeart => BookHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-heart", "f499");
    private static Icon? BookJournalWhillsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-journal-whills?f=classic&amp;s=light">Book Journal Whills</a>
    /// </summary>
    public static Icon BookJournalWhills => BookJournalWhillsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-journal-whills", "f66a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-journal-whills?f=classic&amp;s=light">Book Journal Whills</a>
    /// </summary>
    public static Icon JournalWhills => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookJournalWhills;
    private static Icon? BookMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-medical?f=classic&amp;s=light">Book Medical</a>
    /// </summary>
    public static Icon BookMedical => BookMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-medical", "f7e6");
    private static Icon? BookOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-open?f=classic&amp;s=light">Book Open</a>
    /// </summary>
    public static Icon BookOpen => BookOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-open", "f518");
    private static Icon? BookOpenCoverf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-open-cover?f=classic&amp;s=light">Book Open Cover</a>
    /// </summary>
    public static Icon BookOpenCover => BookOpenCoverf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-open-cover", "e0c0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-open-cover?f=classic&amp;s=light">Book Open Cover</a>
    /// </summary>
    public static Icon BookOpenAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookOpenCover;
    private static Icon? BookOpenReaderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-open-reader?f=classic&amp;s=light">Book Open Reader</a>
    /// </summary>
    public static Icon BookOpenReader => BookOpenReaderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-open-reader", "f5da");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-open-reader?f=classic&amp;s=light">Book Open Reader</a>
    /// </summary>
    public static Icon BookReader => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookOpenReader;
    private static Icon? BookQuranf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-quran?f=classic&amp;s=light">Book Quran</a>
    /// </summary>
    public static Icon BookQuran => BookQuranf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-quran", "f687");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-quran?f=classic&amp;s=light">Book Quran</a>
    /// </summary>
    public static Icon Quran => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookQuran;
    private static Icon? BookSectionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-section?f=classic&amp;s=light">Book Section</a>
    /// </summary>
    public static Icon BookSection => BookSectionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-section", "e0c1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-section?f=classic&amp;s=light">Book Section</a>
    /// </summary>
    public static Icon BookLaw => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookSection;
    private static Icon? BookSkullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-skull?f=classic&amp;s=light">Book Skull</a>
    /// </summary>
    public static Icon BookSkull => BookSkullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-skull", "f6b7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-skull?f=classic&amp;s=light">Book Skull</a>
    /// </summary>
    public static Icon BookDead => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookSkull;
    private static Icon? BookSparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-sparkles?f=classic&amp;s=light">Book Sparkles</a>
    /// </summary>
    public static Icon BookSparkles => BookSparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-sparkles", "f6b8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-sparkles?f=classic&amp;s=light">Book Sparkles</a>
    /// </summary>
    public static Icon BookSpells => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookSparkles;
    private static Icon? BookTanakhf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-tanakh?f=classic&amp;s=light">Book Tanakh</a>
    /// </summary>
    public static Icon BookTanakh => BookTanakhf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-tanakh", "f827");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-tanakh?f=classic&amp;s=light">Book Tanakh</a>
    /// </summary>
    public static Icon Tanakh => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BookTanakh;
    private static Icon? BookUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/book-user?f=classic&amp;s=light">Book User</a>
    /// </summary>
    public static Icon BookUser => BookUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "book-user", "f7e7");
    private static Icon? Bookmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bookmark?f=classic&amp;s=light">Bookmark</a>
    /// </summary>
    public static Icon Bookmark => Bookmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bookmark", "f02e");
    private static Icon? BookmarkSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bookmark-slash?f=classic&amp;s=light">Bookmark Slash</a>
    /// </summary>
    public static Icon BookmarkSlash => BookmarkSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bookmark-slash", "e0c2");
    private static Icon? Booksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/books?f=classic&amp;s=light">Books</a>
    /// </summary>
    public static Icon Books => Booksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "books", "f5db");
    private static Icon? BooksMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/books-medical?f=classic&amp;s=light">Books Medical</a>
    /// </summary>
    public static Icon BooksMedical => BooksMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "books-medical", "f7e8");
    private static Icon? Boomboxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boombox?f=classic&amp;s=light">Boombox</a>
    /// </summary>
    public static Icon Boombox => Boomboxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "boombox", "f8a5");
    private static Icon? Bootf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boot?f=classic&amp;s=light">Boot</a>
    /// </summary>
    public static Icon Boot => Bootf ??= new Icon(IconFamily.Classic, IconStyle.Light, "boot", "f782");
    private static Icon? BootHeeledf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boot-heeled?f=classic&amp;s=light">Boot Heeled</a>
    /// </summary>
    public static Icon BootHeeled => BootHeeledf ??= new Icon(IconFamily.Classic, IconStyle.Light, "boot-heeled", "e33f");
    private static Icon? BoothCurtainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/booth-curtain?f=classic&amp;s=light">Booth Curtain</a>
    /// </summary>
    public static Icon BoothCurtain => BoothCurtainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "booth-curtain", "f734");
    private static Icon? BorderAllf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-all?f=classic&amp;s=light">Border All</a>
    /// </summary>
    public static Icon BorderAll => BorderAllf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-all", "f84c");
    private static Icon? BorderBottomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-bottom?f=classic&amp;s=light">Border Bottom</a>
    /// </summary>
    public static Icon BorderBottom => BorderBottomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-bottom", "f84d");
    private static Icon? BorderBottomRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-bottom-right?f=classic&amp;s=light">Border Bottom Right</a>
    /// </summary>
    public static Icon BorderBottomRight => BorderBottomRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-bottom-right", "f854");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-bottom-right?f=classic&amp;s=light">Border Bottom Right</a>
    /// </summary>
    public static Icon BorderStyleAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BorderBottomRight;
    private static Icon? BorderCenterHf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-center-h?f=classic&amp;s=light">Border Center H</a>
    /// </summary>
    public static Icon BorderCenterH => BorderCenterHf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-center-h", "f89c");
    private static Icon? BorderCenterVf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-center-v?f=classic&amp;s=light">Border Center V</a>
    /// </summary>
    public static Icon BorderCenterV => BorderCenterVf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-center-v", "f89d");
    private static Icon? BorderInnerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-inner?f=classic&amp;s=light">Border Inner</a>
    /// </summary>
    public static Icon BorderInner => BorderInnerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-inner", "f84e");
    private static Icon? BorderLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-left?f=classic&amp;s=light">Border Left</a>
    /// </summary>
    public static Icon BorderLeft => BorderLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-left", "f84f");
    private static Icon? BorderNonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-none?f=classic&amp;s=light">Border None</a>
    /// </summary>
    public static Icon BorderNone => BorderNonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-none", "f850");
    private static Icon? BorderOuterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-outer?f=classic&amp;s=light">Border Outer</a>
    /// </summary>
    public static Icon BorderOuter => BorderOuterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-outer", "f851");
    private static Icon? BorderRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-right?f=classic&amp;s=light">Border Right</a>
    /// </summary>
    public static Icon BorderRight => BorderRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-right", "f852");
    private static Icon? BorderTopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-top?f=classic&amp;s=light">Border Top</a>
    /// </summary>
    public static Icon BorderTop => BorderTopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-top", "f855");
    private static Icon? BorderTopLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-top-left?f=classic&amp;s=light">Border Top Left</a>
    /// </summary>
    public static Icon BorderTopLeft => BorderTopLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "border-top-left", "f853");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/border-top-left?f=classic&amp;s=light">Border Top Left</a>
    /// </summary>
    public static Icon BorderStyle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BorderTopLeft;
    private static Icon? BoreHolef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bore-hole?f=classic&amp;s=light">Bore Hole</a>
    /// </summary>
    public static Icon BoreHole => BoreHolef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bore-hole", "e4c3");
    private static Icon? BottleDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bottle-droplet?f=classic&amp;s=light">Bottle Droplet</a>
    /// </summary>
    public static Icon BottleDroplet => BottleDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bottle-droplet", "e4c4");
    private static Icon? BottleWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bottle-water?f=classic&amp;s=light">Bottle Water</a>
    /// </summary>
    public static Icon BottleWater => BottleWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bottle-water", "e4c5");
    private static Icon? BowArrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bow-arrow?f=classic&amp;s=light">Bow Arrow</a>
    /// </summary>
    public static Icon BowArrow => BowArrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bow-arrow", "f6b9");
    private static Icon? BowlChopsticksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-chopsticks?f=classic&amp;s=light">Bowl Chopsticks</a>
    /// </summary>
    public static Icon BowlChopsticks => BowlChopsticksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-chopsticks", "e2e9");
    private static Icon? BowlChopsticksNoodlesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-chopsticks-noodles?f=classic&amp;s=light">Bowl Chopsticks Noodles</a>
    /// </summary>
    public static Icon BowlChopsticksNoodles => BowlChopsticksNoodlesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-chopsticks-noodles", "e2ea");
    private static Icon? BowlFoodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-food?f=classic&amp;s=light">Bowl Food</a>
    /// </summary>
    public static Icon BowlFood => BowlFoodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-food", "e4c6");
    private static Icon? BowlHotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-hot?f=classic&amp;s=light">Bowl Hot</a>
    /// </summary>
    public static Icon BowlHot => BowlHotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-hot", "f823");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-hot?f=classic&amp;s=light">Bowl Hot</a>
    /// </summary>
    public static Icon Soup => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BowlHot;
    private static Icon? BowlRicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-rice?f=classic&amp;s=light">Bowl Rice</a>
    /// </summary>
    public static Icon BowlRice => BowlRicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-rice", "e2eb");
    private static Icon? BowlScoopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-scoop?f=classic&amp;s=light">Bowl Scoop</a>
    /// </summary>
    public static Icon BowlScoop => BowlScoopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-scoop", "e3de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-scoop?f=classic&amp;s=light">Bowl Scoop</a>
    /// </summary>
    public static Icon BowlShavedIce => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BowlScoop;
    private static Icon? BowlScoopsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-scoops?f=classic&amp;s=light">Bowl Scoops</a>
    /// </summary>
    public static Icon BowlScoops => BowlScoopsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-scoops", "e3df");
    private static Icon? BowlSoftServef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-soft-serve?f=classic&amp;s=light">Bowl Soft Serve</a>
    /// </summary>
    public static Icon BowlSoftServe => BowlSoftServef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-soft-serve", "e46b");
    private static Icon? BowlSpoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowl-spoon?f=classic&amp;s=light">Bowl Spoon</a>
    /// </summary>
    public static Icon BowlSpoon => BowlSpoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowl-spoon", "e3e0");
    private static Icon? BowlingBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowling-ball?f=classic&amp;s=light">Bowling Ball</a>
    /// </summary>
    public static Icon BowlingBall => BowlingBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowling-ball", "f436");
    private static Icon? BowlingBallPinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowling-ball-pin?f=classic&amp;s=light">Bowling Ball Pin</a>
    /// </summary>
    public static Icon BowlingBallPin => BowlingBallPinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowling-ball-pin", "e0c3");
    private static Icon? BowlingPinsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bowling-pins?f=classic&amp;s=light">Bowling Pins</a>
    /// </summary>
    public static Icon BowlingPins => BowlingPinsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bowling-pins", "f437");
    private static Icon? Boxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box?f=classic&amp;s=light">Box</a>
    /// </summary>
    public static Icon Box => Boxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box", "f466");
    private static Icon? BoxArchivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-archive?f=classic&amp;s=light">Box Archive</a>
    /// </summary>
    public static Icon BoxArchive => BoxArchivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-archive", "f187");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-archive?f=classic&amp;s=light">Box Archive</a>
    /// </summary>
    public static Icon Archive => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxArchive;
    private static Icon? BoxBallotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-ballot?f=classic&amp;s=light">Box Ballot</a>
    /// </summary>
    public static Icon BoxBallot => BoxBallotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-ballot", "f735");
    private static Icon? BoxCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-check?f=classic&amp;s=light">Box Check</a>
    /// </summary>
    public static Icon BoxCheck => BoxCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-check", "f467");
    private static Icon? BoxCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-circle-check?f=classic&amp;s=light">Box Circle Check</a>
    /// </summary>
    public static Icon BoxCircleCheck => BoxCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-circle-check", "e0c4");
    private static Icon? BoxDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-dollar?f=classic&amp;s=light">Box Dollar</a>
    /// </summary>
    public static Icon BoxDollar => BoxDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-dollar", "f4a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-dollar?f=classic&amp;s=light">Box Dollar</a>
    /// </summary>
    public static Icon BoxUsd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxDollar;
    private static Icon? BoxHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-heart?f=classic&amp;s=light">Box Heart</a>
    /// </summary>
    public static Icon BoxHeart => BoxHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-heart", "f49d");
    private static Icon? BoxOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-open?f=classic&amp;s=light">Box Open</a>
    /// </summary>
    public static Icon BoxOpen => BoxOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-open", "f49e");
    private static Icon? BoxOpenFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-open-full?f=classic&amp;s=light">Box Open Full</a>
    /// </summary>
    public static Icon BoxOpenFull => BoxOpenFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-open-full", "f49c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-open-full?f=classic&amp;s=light">Box Open Full</a>
    /// </summary>
    public static Icon BoxFull => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxOpenFull;
    private static Icon? BoxTapedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-taped?f=classic&amp;s=light">Box Taped</a>
    /// </summary>
    public static Icon BoxTaped => BoxTapedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-taped", "f49a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-taped?f=classic&amp;s=light">Box Taped</a>
    /// </summary>
    public static Icon BoxAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxTaped;
    private static Icon? BoxTissuef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/box-tissue?f=classic&amp;s=light">Box Tissue</a>
    /// </summary>
    public static Icon BoxTissue => BoxTissuef ??= new Icon(IconFamily.Classic, IconStyle.Light, "box-tissue", "e05b");
    private static Icon? BoxesPackingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boxes-packing?f=classic&amp;s=light">Boxes Packing</a>
    /// </summary>
    public static Icon BoxesPacking => BoxesPackingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "boxes-packing", "e4c7");
    private static Icon? BoxesStackedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boxes-stacked?f=classic&amp;s=light">Boxes Stacked</a>
    /// </summary>
    public static Icon BoxesStacked => BoxesStackedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "boxes-stacked", "f468");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boxes-stacked?f=classic&amp;s=light">Boxes Stacked</a>
    /// </summary>
    public static Icon Boxes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxesStacked;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boxes-stacked?f=classic&amp;s=light">Boxes Stacked</a>
    /// </summary>
    public static Icon BoxesAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxesStacked;
    private static Icon? BoxingGlovef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boxing-glove?f=classic&amp;s=light">Boxing Glove</a>
    /// </summary>
    public static Icon BoxingGlove => BoxingGlovef ??= new Icon(IconFamily.Classic, IconStyle.Light, "boxing-glove", "f438");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/boxing-glove?f=classic&amp;s=light">Boxing Glove</a>
    /// </summary>
    public static Icon GloveBoxing => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BoxingGlove;
    private static Icon? BracketCurlyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-curly?f=classic&amp;s=light">Bracket Curly</a>
    /// </summary>
    public static Icon BracketCurly => BracketCurlyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bracket-curly", "7b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-curly?f=classic&amp;s=light">Bracket Curly</a>
    /// </summary>
    public static Icon BracketCurlyLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BracketCurly;
    private static Icon? BracketCurlyRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-curly-right?f=classic&amp;s=light">Bracket Curly Right</a>
    /// </summary>
    public static Icon BracketCurlyRight => BracketCurlyRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bracket-curly-right", "7d");
    private static Icon? BracketRoundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-round?f=classic&amp;s=light">Bracket Round</a>
    /// </summary>
    public static Icon BracketRound => BracketRoundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bracket-round", "28");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-round?f=classic&amp;s=light">Bracket Round</a>
    /// </summary>
    public static Icon Parenthesis => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BracketRound;
    private static Icon? BracketRoundRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-round-right?f=classic&amp;s=light">Bracket Round Right</a>
    /// </summary>
    public static Icon BracketRoundRight => BracketRoundRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bracket-round-right", "29");
    private static Icon? BracketSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-square?f=classic&amp;s=light">Bracket Square</a>
    /// </summary>
    public static Icon BracketSquare => BracketSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "bracket-square", "5b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-square?f=classic&amp;s=light">Bracket Square</a>
    /// </summary>
    public static Icon Bracket => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BracketSquare;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-square?f=classic&amp;s=light">Bracket Square</a>
    /// </summary>
    public static Icon BracketLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BracketSquare;
    private static Icon? BracketSquareRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bracket-square-right?f=classic&amp;s=light">Bracket Square Right</a>
    /// </summary>
    public static Icon BracketSquareRight => BracketSquareRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bracket-square-right", "5d");
    private static Icon? BracketsCurlyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brackets-curly?f=classic&amp;s=light">Brackets Curly</a>
    /// </summary>
    public static Icon BracketsCurly => BracketsCurlyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brackets-curly", "f7ea");
    private static Icon? BracketsRoundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brackets-round?f=classic&amp;s=light">Brackets Round</a>
    /// </summary>
    public static Icon BracketsRound => BracketsRoundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brackets-round", "e0c5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brackets-round?f=classic&amp;s=light">Brackets Round</a>
    /// </summary>
    public static Icon Parentheses => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BracketsRound;
    private static Icon? BracketsSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brackets-square?f=classic&amp;s=light">Brackets Square</a>
    /// </summary>
    public static Icon BracketsSquare => BracketsSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "brackets-square", "f7e9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brackets-square?f=classic&amp;s=light">Brackets Square</a>
    /// </summary>
    public static Icon Brackets => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BracketsSquare;
    private static Icon? Braillef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/braille?f=classic&amp;s=light">Braille</a>
    /// </summary>
    public static Icon Braille => Braillef ??= new Icon(IconFamily.Classic, IconStyle.Light, "braille", "f2a1");
    private static Icon? Brainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brain?f=classic&amp;s=light">Brain</a>
    /// </summary>
    public static Icon Brain => Brainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brain", "f5dc");
    private static Icon? BrainArrowCurvedRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brain-arrow-curved-right?f=classic&amp;s=light">Brain Arrow Curved Right</a>
    /// </summary>
    public static Icon BrainArrowCurvedRight => BrainArrowCurvedRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brain-arrow-curved-right", "f677");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brain-arrow-curved-right?f=classic&amp;s=light">Brain Arrow Curved Right</a>
    /// </summary>
    public static Icon MindShare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BrainArrowCurvedRight;
    private static Icon? BrainCircuitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brain-circuit?f=classic&amp;s=light">Brain Circuit</a>
    /// </summary>
    public static Icon BrainCircuit => BrainCircuitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brain-circuit", "e0c6");
    private static Icon? BrakeWarningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brake-warning?f=classic&amp;s=light">Brake Warning</a>
    /// </summary>
    public static Icon BrakeWarning => BrakeWarningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brake-warning", "e0c7");
    private static Icon? BrazilianRealSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brazilian-real-sign?f=classic&amp;s=light">Brazilian Real Sign</a>
    /// </summary>
    public static Icon BrazilianRealSign => BrazilianRealSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brazilian-real-sign", "e46c");
    private static Icon? BreadLoaff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bread-loaf?f=classic&amp;s=light">Bread Loaf</a>
    /// </summary>
    public static Icon BreadLoaf => BreadLoaff ??= new Icon(IconFamily.Classic, IconStyle.Light, "bread-loaf", "f7eb");
    private static Icon? BreadSlicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bread-slice?f=classic&amp;s=light">Bread Slice</a>
    /// </summary>
    public static Icon BreadSlice => BreadSlicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bread-slice", "f7ec");
    private static Icon? BreadSliceButterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bread-slice-butter?f=classic&amp;s=light">Bread Slice Butter</a>
    /// </summary>
    public static Icon BreadSliceButter => BreadSliceButterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bread-slice-butter", "e3e1");
    private static Icon? Bridgef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge?f=classic&amp;s=light">Bridge</a>
    /// </summary>
    public static Icon Bridge => Bridgef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge", "e4c8");
    private static Icon? BridgeCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge-circle-check?f=classic&amp;s=light">Bridge Circle Check</a>
    /// </summary>
    public static Icon BridgeCircleCheck => BridgeCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge-circle-check", "e4c9");
    private static Icon? BridgeCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge-circle-exclamation?f=classic&amp;s=light">Bridge Circle Exclamation</a>
    /// </summary>
    public static Icon BridgeCircleExclamation => BridgeCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge-circle-exclamation", "e4ca");
    private static Icon? BridgeCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge-circle-xmark?f=classic&amp;s=light">Bridge Circle Xmark</a>
    /// </summary>
    public static Icon BridgeCircleXmark => BridgeCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge-circle-xmark", "e4cb");
    private static Icon? BridgeLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge-lock?f=classic&amp;s=light">Bridge Lock</a>
    /// </summary>
    public static Icon BridgeLock => BridgeLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge-lock", "e4cc");
    private static Icon? BridgeSuspensionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge-suspension?f=classic&amp;s=light">Bridge Suspension</a>
    /// </summary>
    public static Icon BridgeSuspension => BridgeSuspensionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge-suspension", "e4cd");
    private static Icon? BridgeWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bridge-water?f=classic&amp;s=light">Bridge Water</a>
    /// </summary>
    public static Icon BridgeWater => BridgeWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bridge-water", "e4ce");
    private static Icon? Briefcasef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/briefcase?f=classic&amp;s=light">Briefcase</a>
    /// </summary>
    public static Icon Briefcase => Briefcasef ??= new Icon(IconFamily.Classic, IconStyle.Light, "briefcase", "f0b1");
    private static Icon? BriefcaseArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/briefcase-arrow-right?f=classic&amp;s=light">Briefcase Arrow Right</a>
    /// </summary>
    public static Icon BriefcaseArrowRight => BriefcaseArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "briefcase-arrow-right", "e2f2");
    private static Icon? BriefcaseBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/briefcase-blank?f=classic&amp;s=light">Briefcase Blank</a>
    /// </summary>
    public static Icon BriefcaseBlank => BriefcaseBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "briefcase-blank", "e0c8");
    private static Icon? BriefcaseMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/briefcase-medical?f=classic&amp;s=light">Briefcase Medical</a>
    /// </summary>
    public static Icon BriefcaseMedical => BriefcaseMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "briefcase-medical", "f469");
    private static Icon? Brightnessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brightness?f=classic&amp;s=light">Brightness</a>
    /// </summary>
    public static Icon Brightness => Brightnessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brightness", "e0c9");
    private static Icon? BrightnessLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brightness-low?f=classic&amp;s=light">Brightness Low</a>
    /// </summary>
    public static Icon BrightnessLow => BrightnessLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brightness-low", "e0ca");
    private static Icon? BringForwardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bring-forward?f=classic&amp;s=light">Bring Forward</a>
    /// </summary>
    public static Icon BringForward => BringForwardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bring-forward", "f856");
    private static Icon? BringFrontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bring-front?f=classic&amp;s=light">Bring Front</a>
    /// </summary>
    public static Icon BringFront => BringFrontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bring-front", "f857");
    private static Icon? Broccolif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/broccoli?f=classic&amp;s=light">Broccoli</a>
    /// </summary>
    public static Icon Broccoli => Broccolif ??= new Icon(IconFamily.Classic, IconStyle.Light, "broccoli", "e3e2");
    private static Icon? Broomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/broom?f=classic&amp;s=light">Broom</a>
    /// </summary>
    public static Icon Broom => Broomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "broom", "f51a");
    private static Icon? BroomBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/broom-ball?f=classic&amp;s=light">Broom Ball</a>
    /// </summary>
    public static Icon BroomBall => BroomBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "broom-ball", "f458");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/broom-ball?f=classic&amp;s=light">Broom Ball</a>
    /// </summary>
    public static Icon Quidditch => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BroomBall;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/broom-ball?f=classic&amp;s=light">Broom Ball</a>
    /// </summary>
    public static Icon QuidditchBroomBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BroomBall;
    private static Icon? BroomWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/broom-wide?f=classic&amp;s=light">Broom Wide</a>
    /// </summary>
    public static Icon BroomWide => BroomWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "broom-wide", "e5d1");
    private static Icon? Browserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/browser?f=classic&amp;s=light">Browser</a>
    /// </summary>
    public static Icon Browser => Browserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "browser", "f37e");
    private static Icon? Browsersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/browsers?f=classic&amp;s=light">Browsers</a>
    /// </summary>
    public static Icon Browsers => Browsersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "browsers", "e0cb");
    private static Icon? Brushf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/brush?f=classic&amp;s=light">Brush</a>
    /// </summary>
    public static Icon Brush => Brushf ??= new Icon(IconFamily.Classic, IconStyle.Light, "brush", "f55d");
    private static Icon? Bucketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bucket?f=classic&amp;s=light">Bucket</a>
    /// </summary>
    public static Icon Bucket => Bucketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bucket", "e4cf");
    private static Icon? Bugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bug?f=classic&amp;s=light">Bug</a>
    /// </summary>
    public static Icon Bug => Bugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bug", "f188");
    private static Icon? BugSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bug-slash?f=classic&amp;s=light">Bug Slash</a>
    /// </summary>
    public static Icon BugSlash => BugSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bug-slash", "e490");
    private static Icon? Bugsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bugs?f=classic&amp;s=light">Bugs</a>
    /// </summary>
    public static Icon Bugs => Bugsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bugs", "e4d0");
    private static Icon? Buildingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building?f=classic&amp;s=light">Building</a>
    /// </summary>
    public static Icon Building => Buildingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building", "f1ad");
    private static Icon? BuildingCircleArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-circle-arrow-right?f=classic&amp;s=light">Building Circle Arrow Right</a>
    /// </summary>
    public static Icon BuildingCircleArrowRight => BuildingCircleArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-circle-arrow-right", "e4d1");
    private static Icon? BuildingCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-circle-check?f=classic&amp;s=light">Building Circle Check</a>
    /// </summary>
    public static Icon BuildingCircleCheck => BuildingCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-circle-check", "e4d2");
    private static Icon? BuildingCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-circle-exclamation?f=classic&amp;s=light">Building Circle Exclamation</a>
    /// </summary>
    public static Icon BuildingCircleExclamation => BuildingCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-circle-exclamation", "e4d3");
    private static Icon? BuildingCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-circle-xmark?f=classic&amp;s=light">Building Circle Xmark</a>
    /// </summary>
    public static Icon BuildingCircleXmark => BuildingCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-circle-xmark", "e4d4");
    private static Icon? BuildingColumnsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-columns?f=classic&amp;s=light">Building Columns</a>
    /// </summary>
    public static Icon BuildingColumns => BuildingColumnsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-columns", "f19c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-columns?f=classic&amp;s=light">Building Columns</a>
    /// </summary>
    public static Icon Bank => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BuildingColumns;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-columns?f=classic&amp;s=light">Building Columns</a>
    /// </summary>
    public static Icon Institution => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BuildingColumns;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-columns?f=classic&amp;s=light">Building Columns</a>
    /// </summary>
    public static Icon Museum => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BuildingColumns;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-columns?f=classic&amp;s=light">Building Columns</a>
    /// </summary>
    public static Icon University => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BuildingColumns;
    private static Icon? BuildingFlagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-flag?f=classic&amp;s=light">Building Flag</a>
    /// </summary>
    public static Icon BuildingFlag => BuildingFlagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-flag", "e4d5");
    private static Icon? BuildingLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-lock?f=classic&amp;s=light">Building Lock</a>
    /// </summary>
    public static Icon BuildingLock => BuildingLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-lock", "e4d6");
    private static Icon? BuildingMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-magnifying-glass?f=classic&amp;s=light">Building Magnifying Glass</a>
    /// </summary>
    public static Icon BuildingMagnifyingGlass => BuildingMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-magnifying-glass", "e61c");
    private static Icon? BuildingMemof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-memo?f=classic&amp;s=light">Building Memo</a>
    /// </summary>
    public static Icon BuildingMemo => BuildingMemof ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-memo", "e61e");
    private static Icon? BuildingNgof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-ngo?f=classic&amp;s=light">Building Ngo</a>
    /// </summary>
    public static Icon BuildingNgo => BuildingNgof ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-ngo", "e4d7");
    private static Icon? BuildingShieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-shield?f=classic&amp;s=light">Building Shield</a>
    /// </summary>
    public static Icon BuildingShield => BuildingShieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-shield", "e4d8");
    private static Icon? BuildingUnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-un?f=classic&amp;s=light">Building Un</a>
    /// </summary>
    public static Icon BuildingUn => BuildingUnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-un", "e4d9");
    private static Icon? BuildingUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-user?f=classic&amp;s=light">Building User</a>
    /// </summary>
    public static Icon BuildingUser => BuildingUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-user", "e4da");
    private static Icon? BuildingWheatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/building-wheat?f=classic&amp;s=light">Building Wheat</a>
    /// </summary>
    public static Icon BuildingWheat => BuildingWheatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "building-wheat", "e4db");
    private static Icon? Buildingsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/buildings?f=classic&amp;s=light">Buildings</a>
    /// </summary>
    public static Icon Buildings => Buildingsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "buildings", "e0cc");
    private static Icon? Bulldozerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bulldozer?f=classic&amp;s=light">Bulldozer</a>
    /// </summary>
    public static Icon Bulldozer => Bulldozerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bulldozer", "e655");
    private static Icon? Bullhornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bullhorn?f=classic&amp;s=light">Bullhorn</a>
    /// </summary>
    public static Icon Bullhorn => Bullhornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bullhorn", "f0a1");
    private static Icon? Bullseyef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bullseye?f=classic&amp;s=light">Bullseye</a>
    /// </summary>
    public static Icon Bullseye => Bullseyef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bullseye", "f140");
    private static Icon? BullseyeArrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bullseye-arrow?f=classic&amp;s=light">Bullseye Arrow</a>
    /// </summary>
    public static Icon BullseyeArrow => BullseyeArrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bullseye-arrow", "f648");
    private static Icon? BullseyePointerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bullseye-pointer?f=classic&amp;s=light">Bullseye Pointer</a>
    /// </summary>
    public static Icon BullseyePointer => BullseyePointerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bullseye-pointer", "f649");
    private static Icon? Buoyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/buoy?f=classic&amp;s=light">Buoy</a>
    /// </summary>
    public static Icon Buoy => Buoyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "buoy", "e5b5");
    private static Icon? BuoyMooringf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/buoy-mooring?f=classic&amp;s=light">Buoy Mooring</a>
    /// </summary>
    public static Icon BuoyMooring => BuoyMooringf ??= new Icon(IconFamily.Classic, IconStyle.Light, "buoy-mooring", "e5b6");
    private static Icon? Burgerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger?f=classic&amp;s=light">Burger</a>
    /// </summary>
    public static Icon Burger => Burgerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "burger", "f805");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger?f=classic&amp;s=light">Burger</a>
    /// </summary>
    public static Icon Hamburger => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Burger;
    private static Icon? BurgerCheesef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger-cheese?f=classic&amp;s=light">Burger Cheese</a>
    /// </summary>
    public static Icon BurgerCheese => BurgerCheesef ??= new Icon(IconFamily.Classic, IconStyle.Light, "burger-cheese", "f7f1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger-cheese?f=classic&amp;s=light">Burger Cheese</a>
    /// </summary>
    public static Icon Cheeseburger => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BurgerCheese;
    private static Icon? BurgerFriesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger-fries?f=classic&amp;s=light">Burger Fries</a>
    /// </summary>
    public static Icon BurgerFries => BurgerFriesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "burger-fries", "e0cd");
    private static Icon? BurgerGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger-glass?f=classic&amp;s=light">Burger Glass</a>
    /// </summary>
    public static Icon BurgerGlass => BurgerGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "burger-glass", "e0ce");
    private static Icon? BurgerLettucef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger-lettuce?f=classic&amp;s=light">Burger Lettuce</a>
    /// </summary>
    public static Icon BurgerLettuce => BurgerLettucef ??= new Icon(IconFamily.Classic, IconStyle.Light, "burger-lettuce", "e3e3");
    private static Icon? BurgerSodaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burger-soda?f=classic&amp;s=light">Burger Soda</a>
    /// </summary>
    public static Icon BurgerSoda => BurgerSodaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "burger-soda", "f858");
    private static Icon? Burritof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burrito?f=classic&amp;s=light">Burrito</a>
    /// </summary>
    public static Icon Burrito => Burritof ??= new Icon(IconFamily.Classic, IconStyle.Light, "burrito", "f7ed");
    private static Icon? Burstf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/burst?f=classic&amp;s=light">Burst</a>
    /// </summary>
    public static Icon Burst => Burstf ??= new Icon(IconFamily.Classic, IconStyle.Light, "burst", "e4dc");
    private static Icon? Busf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bus?f=classic&amp;s=light">Bus</a>
    /// </summary>
    public static Icon Bus => Busf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bus", "f207");
    private static Icon? BusSchoolf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bus-school?f=classic&amp;s=light">Bus School</a>
    /// </summary>
    public static Icon BusSchool => BusSchoolf ??= new Icon(IconFamily.Classic, IconStyle.Light, "bus-school", "f5dd");
    private static Icon? BusSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bus-simple?f=classic&amp;s=light">Bus Simple</a>
    /// </summary>
    public static Icon BusSimple => BusSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "bus-simple", "f55e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/bus-simple?f=classic&amp;s=light">Bus Simple</a>
    /// </summary>
    public static Icon BusAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BusSimple;
    private static Icon? BusinessTimef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/business-time?f=classic&amp;s=light">Business Time</a>
    /// </summary>
    public static Icon BusinessTime => BusinessTimef ??= new Icon(IconFamily.Classic, IconStyle.Light, "business-time", "f64a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/business-time?f=classic&amp;s=light">Business Time</a>
    /// </summary>
    public static Icon BriefcaseClock => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.BusinessTime;
    private static Icon? Butterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/butter?f=classic&amp;s=light">Butter</a>
    /// </summary>
    public static Icon Butter => Butterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "butter", "e3e4");
    private static Icon? Cf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/c?f=classic&amp;s=light">C</a>
    /// </summary>
    public static Icon C => Cf ??= new Icon(IconFamily.Classic, IconStyle.Light, "c", "43");
    private static Icon? Cabinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cabin?f=classic&amp;s=light">Cabin</a>
    /// </summary>
    public static Icon Cabin => Cabinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cabin", "e46d");
    private static Icon? CabinetFilingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cabinet-filing?f=classic&amp;s=light">Cabinet Filing</a>
    /// </summary>
    public static Icon CabinetFiling => CabinetFilingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cabinet-filing", "f64b");
    private static Icon? CableCarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cable-car?f=classic&amp;s=light">Cable Car</a>
    /// </summary>
    public static Icon CableCar => CableCarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cable-car", "f7da");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cable-car?f=classic&amp;s=light">Cable Car</a>
    /// </summary>
    public static Icon Tram => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CableCar;
    private static Icon? Cactusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cactus?f=classic&amp;s=light">Cactus</a>
    /// </summary>
    public static Icon Cactus => Cactusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cactus", "f8a7");
    private static Icon? CakeCandlesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cake-candles?f=classic&amp;s=light">Cake Candles</a>
    /// </summary>
    public static Icon CakeCandles => CakeCandlesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cake-candles", "f1fd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cake-candles?f=classic&amp;s=light">Cake Candles</a>
    /// </summary>
    public static Icon BirthdayCake => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CakeCandles;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cake-candles?f=classic&amp;s=light">Cake Candles</a>
    /// </summary>
    public static Icon Cake => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CakeCandles;
    private static Icon? CakeSlicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cake-slice?f=classic&amp;s=light">Cake Slice</a>
    /// </summary>
    public static Icon CakeSlice => CakeSlicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cake-slice", "e3e5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cake-slice?f=classic&amp;s=light">Cake Slice</a>
    /// </summary>
    public static Icon Shortcake => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CakeSlice;
    private static Icon? Calculatorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calculator?f=classic&amp;s=light">Calculator</a>
    /// </summary>
    public static Icon Calculator => Calculatorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calculator", "f1ec");
    private static Icon? CalculatorSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calculator-simple?f=classic&amp;s=light">Calculator Simple</a>
    /// </summary>
    public static Icon CalculatorSimple => CalculatorSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "calculator-simple", "f64c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calculator-simple?f=classic&amp;s=light">Calculator Simple</a>
    /// </summary>
    public static Icon CalculatorAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalculatorSimple;
    private static Icon? Calendarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar?f=classic&amp;s=light">Calendar</a>
    /// </summary>
    public static Icon Calendar => Calendarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar", "f133");
    private static Icon? CalendarArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-arrow-down?f=classic&amp;s=light">Calendar Arrow Down</a>
    /// </summary>
    public static Icon CalendarArrowDown => CalendarArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-arrow-down", "e0d0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-arrow-down?f=classic&amp;s=light">Calendar Arrow Down</a>
    /// </summary>
    public static Icon CalendarDownload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarArrowDown;
    private static Icon? CalendarArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-arrow-up?f=classic&amp;s=light">Calendar Arrow Up</a>
    /// </summary>
    public static Icon CalendarArrowUp => CalendarArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-arrow-up", "e0d1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-arrow-up?f=classic&amp;s=light">Calendar Arrow Up</a>
    /// </summary>
    public static Icon CalendarUpload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarArrowUp;
    private static Icon? CalendarCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-check?f=classic&amp;s=light">Calendar Check</a>
    /// </summary>
    public static Icon CalendarCheck => CalendarCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-check", "f274");
    private static Icon? CalendarCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-circle-exclamation?f=classic&amp;s=light">Calendar Circle Exclamation</a>
    /// </summary>
    public static Icon CalendarCircleExclamation => CalendarCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-circle-exclamation", "e46e");
    private static Icon? CalendarCircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-circle-minus?f=classic&amp;s=light">Calendar Circle Minus</a>
    /// </summary>
    public static Icon CalendarCircleMinus => CalendarCircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-circle-minus", "e46f");
    private static Icon? CalendarCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-circle-plus?f=classic&amp;s=light">Calendar Circle Plus</a>
    /// </summary>
    public static Icon CalendarCirclePlus => CalendarCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-circle-plus", "e470");
    private static Icon? CalendarCircleUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-circle-user?f=classic&amp;s=light">Calendar Circle User</a>
    /// </summary>
    public static Icon CalendarCircleUser => CalendarCircleUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-circle-user", "e471");
    private static Icon? CalendarClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-clock?f=classic&amp;s=light">Calendar Clock</a>
    /// </summary>
    public static Icon CalendarClock => CalendarClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-clock", "e0d2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-clock?f=classic&amp;s=light">Calendar Clock</a>
    /// </summary>
    public static Icon CalendarTime => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarClock;
    private static Icon? CalendarDayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-day?f=classic&amp;s=light">Calendar Day</a>
    /// </summary>
    public static Icon CalendarDay => CalendarDayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-day", "f783");
    private static Icon? CalendarDaysf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-days?f=classic&amp;s=light">Calendar Days</a>
    /// </summary>
    public static Icon CalendarDays => CalendarDaysf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-days", "f073");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-days?f=classic&amp;s=light">Calendar Days</a>
    /// </summary>
    public static Icon CalendarAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarDays;
    private static Icon? CalendarExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-exclamation?f=classic&amp;s=light">Calendar Exclamation</a>
    /// </summary>
    public static Icon CalendarExclamation => CalendarExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-exclamation", "f334");
    private static Icon? CalendarHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-heart?f=classic&amp;s=light">Calendar Heart</a>
    /// </summary>
    public static Icon CalendarHeart => CalendarHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-heart", "e0d3");
    private static Icon? CalendarImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-image?f=classic&amp;s=light">Calendar Image</a>
    /// </summary>
    public static Icon CalendarImage => CalendarImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-image", "e0d4");
    private static Icon? CalendarLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-lines?f=classic&amp;s=light">Calendar Lines</a>
    /// </summary>
    public static Icon CalendarLines => CalendarLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-lines", "e0d5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-lines?f=classic&amp;s=light">Calendar Lines</a>
    /// </summary>
    public static Icon CalendarNote => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarLines;
    private static Icon? CalendarLinesPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-lines-pen?f=classic&amp;s=light">Calendar Lines Pen</a>
    /// </summary>
    public static Icon CalendarLinesPen => CalendarLinesPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-lines-pen", "e472");
    private static Icon? CalendarMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-minus?f=classic&amp;s=light">Calendar Minus</a>
    /// </summary>
    public static Icon CalendarMinus => CalendarMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-minus", "f272");
    private static Icon? CalendarPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-pen?f=classic&amp;s=light">Calendar Pen</a>
    /// </summary>
    public static Icon CalendarPen => CalendarPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-pen", "f333");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-pen?f=classic&amp;s=light">Calendar Pen</a>
    /// </summary>
    public static Icon CalendarEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarPen;
    private static Icon? CalendarPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-plus?f=classic&amp;s=light">Calendar Plus</a>
    /// </summary>
    public static Icon CalendarPlus => CalendarPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-plus", "f271");
    private static Icon? CalendarRangef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-range?f=classic&amp;s=light">Calendar Range</a>
    /// </summary>
    public static Icon CalendarRange => CalendarRangef ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-range", "e0d6");
    private static Icon? CalendarStarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-star?f=classic&amp;s=light">Calendar Star</a>
    /// </summary>
    public static Icon CalendarStar => CalendarStarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-star", "f736");
    private static Icon? CalendarUsersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-users?f=classic&amp;s=light">Calendar Users</a>
    /// </summary>
    public static Icon CalendarUsers => CalendarUsersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-users", "e5e2");
    private static Icon? CalendarWeekf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-week?f=classic&amp;s=light">Calendar Week</a>
    /// </summary>
    public static Icon CalendarWeek => CalendarWeekf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-week", "f784");
    private static Icon? CalendarXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-xmark?f=classic&amp;s=light">Calendar Xmark</a>
    /// </summary>
    public static Icon CalendarXmark => CalendarXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendar-xmark", "f273");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendar-xmark?f=classic&amp;s=light">Calendar Xmark</a>
    /// </summary>
    public static Icon CalendarTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CalendarXmark;
    private static Icon? Calendarsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/calendars?f=classic&amp;s=light">Calendars</a>
    /// </summary>
    public static Icon Calendars => Calendarsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "calendars", "e0d7");
    private static Icon? Camcorderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camcorder?f=classic&amp;s=light">Camcorder</a>
    /// </summary>
    public static Icon Camcorder => Camcorderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camcorder", "f8a8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camcorder?f=classic&amp;s=light">Camcorder</a>
    /// </summary>
    public static Icon VideoHandheld => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Camcorder;
    private static Icon? Cameraf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera?f=classic&amp;s=light">Camera</a>
    /// </summary>
    public static Icon Camera => Cameraf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera", "f030");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera?f=classic&amp;s=light">Camera</a>
    /// </summary>
    public static Icon CameraAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Camera;
    private static Icon? CameraCctvf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-cctv?f=classic&amp;s=light">Camera Cctv</a>
    /// </summary>
    public static Icon CameraCctv => CameraCctvf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-cctv", "f8ac");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-cctv?f=classic&amp;s=light">Camera Cctv</a>
    /// </summary>
    public static Icon Cctv => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CameraCctv;
    private static Icon? CameraMovief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-movie?f=classic&amp;s=light">Camera Movie</a>
    /// </summary>
    public static Icon CameraMovie => CameraMovief ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-movie", "f8a9");
    private static Icon? CameraPolaroidf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-polaroid?f=classic&amp;s=light">Camera Polaroid</a>
    /// </summary>
    public static Icon CameraPolaroid => CameraPolaroidf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-polaroid", "f8aa");
    private static Icon? CameraRetrof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-retro?f=classic&amp;s=light">Camera Retro</a>
    /// </summary>
    public static Icon CameraRetro => CameraRetrof ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-retro", "f083");
    private static Icon? CameraRotatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-rotate?f=classic&amp;s=light">Camera Rotate</a>
    /// </summary>
    public static Icon CameraRotate => CameraRotatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-rotate", "e0d8");
    private static Icon? CameraSecurityf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-security?f=classic&amp;s=light">Camera Security</a>
    /// </summary>
    public static Icon CameraSecurity => CameraSecurityf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-security", "f8fe");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-security?f=classic&amp;s=light">Camera Security</a>
    /// </summary>
    public static Icon CameraHome => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CameraSecurity;
    private static Icon? CameraSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-slash?f=classic&amp;s=light">Camera Slash</a>
    /// </summary>
    public static Icon CameraSlash => CameraSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-slash", "e0d9");
    private static Icon? CameraViewfinderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-viewfinder?f=classic&amp;s=light">Camera Viewfinder</a>
    /// </summary>
    public static Icon CameraViewfinder => CameraViewfinderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-viewfinder", "e0da");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-viewfinder?f=classic&amp;s=light">Camera Viewfinder</a>
    /// </summary>
    public static Icon Screenshot => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CameraViewfinder;
    private static Icon? CameraWebf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-web?f=classic&amp;s=light">Camera Web</a>
    /// </summary>
    public static Icon CameraWeb => CameraWebf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-web", "f832");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-web?f=classic&amp;s=light">Camera Web</a>
    /// </summary>
    public static Icon Webcam => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CameraWeb;
    private static Icon? CameraWebSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-web-slash?f=classic&amp;s=light">Camera Web Slash</a>
    /// </summary>
    public static Icon CameraWebSlash => CameraWebSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "camera-web-slash", "f833");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/camera-web-slash?f=classic&amp;s=light">Camera Web Slash</a>
    /// </summary>
    public static Icon WebcamSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CameraWebSlash;
    private static Icon? Campfiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/campfire?f=classic&amp;s=light">Campfire</a>
    /// </summary>
    public static Icon Campfire => Campfiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "campfire", "f6ba");
    private static Icon? Campgroundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/campground?f=classic&amp;s=light">Campground</a>
    /// </summary>
    public static Icon Campground => Campgroundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "campground", "f6bb");
    private static Icon? CanFoodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/can-food?f=classic&amp;s=light">Can Food</a>
    /// </summary>
    public static Icon CanFood => CanFoodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "can-food", "e3e6");
    private static Icon? CandleHolderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/candle-holder?f=classic&amp;s=light">Candle Holder</a>
    /// </summary>
    public static Icon CandleHolder => CandleHolderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "candle-holder", "f6bc");
    private static Icon? Candyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/candy?f=classic&amp;s=light">Candy</a>
    /// </summary>
    public static Icon Candy => Candyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "candy", "e3e7");
    private static Icon? CandyBarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/candy-bar?f=classic&amp;s=light">Candy Bar</a>
    /// </summary>
    public static Icon CandyBar => CandyBarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "candy-bar", "e3e8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/candy-bar?f=classic&amp;s=light">Candy Bar</a>
    /// </summary>
    public static Icon ChocolateBar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CandyBar;
    private static Icon? CandyCanef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/candy-cane?f=classic&amp;s=light">Candy Cane</a>
    /// </summary>
    public static Icon CandyCane => CandyCanef ??= new Icon(IconFamily.Classic, IconStyle.Light, "candy-cane", "f786");
    private static Icon? CandyCornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/candy-corn?f=classic&amp;s=light">Candy Corn</a>
    /// </summary>
    public static Icon CandyCorn => CandyCornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "candy-corn", "f6bd");
    private static Icon? Cannabisf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cannabis?f=classic&amp;s=light">Cannabis</a>
    /// </summary>
    public static Icon Cannabis => Cannabisf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cannabis", "f55f");
    private static Icon? Cannonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cannon?f=classic&amp;s=light">Cannon</a>
    /// </summary>
    public static Icon Cannon => Cannonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cannon", "e642");
    private static Icon? Capsulesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/capsules?f=classic&amp;s=light">Capsules</a>
    /// </summary>
    public static Icon Capsules => Capsulesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "capsules", "f46b");
    private static Icon? Carf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car?f=classic&amp;s=light">Car</a>
    /// </summary>
    public static Icon Car => Carf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car", "f1b9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car?f=classic&amp;s=light">Car</a>
    /// </summary>
    public static Icon Automobile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Car;
    private static Icon? CarBatteryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-battery?f=classic&amp;s=light">Car Battery</a>
    /// </summary>
    public static Icon CarBattery => CarBatteryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-battery", "f5df");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-battery?f=classic&amp;s=light">Car Battery</a>
    /// </summary>
    public static Icon BatteryCar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CarBattery;
    private static Icon? CarBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-bolt?f=classic&amp;s=light">Car Bolt</a>
    /// </summary>
    public static Icon CarBolt => CarBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-bolt", "e341");
    private static Icon? CarBuildingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-building?f=classic&amp;s=light">Car Building</a>
    /// </summary>
    public static Icon CarBuilding => CarBuildingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-building", "f859");
    private static Icon? CarBumpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-bump?f=classic&amp;s=light">Car Bump</a>
    /// </summary>
    public static Icon CarBump => CarBumpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-bump", "f5e0");
    private static Icon? CarBurstf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-burst?f=classic&amp;s=light">Car Burst</a>
    /// </summary>
    public static Icon CarBurst => CarBurstf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-burst", "f5e1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-burst?f=classic&amp;s=light">Car Burst</a>
    /// </summary>
    public static Icon CarCrash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CarBurst;
    private static Icon? CarBusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-bus?f=classic&amp;s=light">Car Bus</a>
    /// </summary>
    public static Icon CarBus => CarBusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-bus", "f85a");
    private static Icon? CarCircleBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-circle-bolt?f=classic&amp;s=light">Car Circle Bolt</a>
    /// </summary>
    public static Icon CarCircleBolt => CarCircleBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-circle-bolt", "e342");
    private static Icon? CarGaragef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-garage?f=classic&amp;s=light">Car Garage</a>
    /// </summary>
    public static Icon CarGarage => CarGaragef ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-garage", "f5e2");
    private static Icon? CarMirrorsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-mirrors?f=classic&amp;s=light">Car Mirrors</a>
    /// </summary>
    public static Icon CarMirrors => CarMirrorsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-mirrors", "e343");
    private static Icon? CarOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-on?f=classic&amp;s=light">Car On</a>
    /// </summary>
    public static Icon CarOn => CarOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-on", "e4dd");
    private static Icon? CarRearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-rear?f=classic&amp;s=light">Car Rear</a>
    /// </summary>
    public static Icon CarRear => CarRearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-rear", "f5de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-rear?f=classic&amp;s=light">Car Rear</a>
    /// </summary>
    public static Icon CarAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CarRear;
    private static Icon? CarSidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-side?f=classic&amp;s=light">Car Side</a>
    /// </summary>
    public static Icon CarSide => CarSidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-side", "f5e4");
    private static Icon? CarSideBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-side-bolt?f=classic&amp;s=light">Car Side Bolt</a>
    /// </summary>
    public static Icon CarSideBolt => CarSideBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-side-bolt", "e344");
    private static Icon? CarTiltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-tilt?f=classic&amp;s=light">Car Tilt</a>
    /// </summary>
    public static Icon CarTilt => CarTiltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-tilt", "f5e5");
    private static Icon? CarTunnelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-tunnel?f=classic&amp;s=light">Car Tunnel</a>
    /// </summary>
    public static Icon CarTunnel => CarTunnelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-tunnel", "e4de");
    private static Icon? CarWashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-wash?f=classic&amp;s=light">Car Wash</a>
    /// </summary>
    public static Icon CarWash => CarWashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-wash", "f5e6");
    private static Icon? CarWrenchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-wrench?f=classic&amp;s=light">Car Wrench</a>
    /// </summary>
    public static Icon CarWrench => CarWrenchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "car-wrench", "f5e3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/car-wrench?f=classic&amp;s=light">Car Wrench</a>
    /// </summary>
    public static Icon CarMechanic => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CarWrench;
    private static Icon? Caravanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caravan?f=classic&amp;s=light">Caravan</a>
    /// </summary>
    public static Icon Caravan => Caravanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "caravan", "f8ff");
    private static Icon? CaravanSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caravan-simple?f=classic&amp;s=light">Caravan Simple</a>
    /// </summary>
    public static Icon CaravanSimple => CaravanSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "caravan-simple", "e000");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caravan-simple?f=classic&amp;s=light">Caravan Simple</a>
    /// </summary>
    public static Icon CaravanAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CaravanSimple;
    private static Icon? CardClubf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/card-club?f=classic&amp;s=light">Card Club</a>
    /// </summary>
    public static Icon CardClub => CardClubf ??= new Icon(IconFamily.Classic, IconStyle.Light, "card-club", "e3e9");
    private static Icon? CardDiamondf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/card-diamond?f=classic&amp;s=light">Card Diamond</a>
    /// </summary>
    public static Icon CardDiamond => CardDiamondf ??= new Icon(IconFamily.Classic, IconStyle.Light, "card-diamond", "e3ea");
    private static Icon? CardHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/card-heart?f=classic&amp;s=light">Card Heart</a>
    /// </summary>
    public static Icon CardHeart => CardHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "card-heart", "e3eb");
    private static Icon? CardSpadef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/card-spade?f=classic&amp;s=light">Card Spade</a>
    /// </summary>
    public static Icon CardSpade => CardSpadef ??= new Icon(IconFamily.Classic, IconStyle.Light, "card-spade", "e3ec");
    private static Icon? Cardsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cards?f=classic&amp;s=light">Cards</a>
    /// </summary>
    public static Icon Cards => Cardsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cards", "e3ed");
    private static Icon? CardsBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cards-blank?f=classic&amp;s=light">Cards Blank</a>
    /// </summary>
    public static Icon CardsBlank => CardsBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cards-blank", "e4df");
    private static Icon? CaretDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caret-down?f=classic&amp;s=light">Caret Down</a>
    /// </summary>
    public static Icon CaretDown => CaretDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "caret-down", "f0d7");
    private static Icon? CaretLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caret-left?f=classic&amp;s=light">Caret Left</a>
    /// </summary>
    public static Icon CaretLeft => CaretLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "caret-left", "f0d9");
    private static Icon? CaretRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caret-right?f=classic&amp;s=light">Caret Right</a>
    /// </summary>
    public static Icon CaretRight => CaretRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "caret-right", "f0da");
    private static Icon? CaretUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/caret-up?f=classic&amp;s=light">Caret Up</a>
    /// </summary>
    public static Icon CaretUp => CaretUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "caret-up", "f0d8");
    private static Icon? Carrotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/carrot?f=classic&amp;s=light">Carrot</a>
    /// </summary>
    public static Icon Carrot => Carrotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "carrot", "f787");
    private static Icon? Carsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cars?f=classic&amp;s=light">Cars</a>
    /// </summary>
    public static Icon Cars => Carsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cars", "f85b");
    private static Icon? CartArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-arrow-down?f=classic&amp;s=light">Cart Arrow Down</a>
    /// </summary>
    public static Icon CartArrowDown => CartArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-arrow-down", "f218");
    private static Icon? CartArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-arrow-up?f=classic&amp;s=light">Cart Arrow Up</a>
    /// </summary>
    public static Icon CartArrowUp => CartArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-arrow-up", "e3ee");
    private static Icon? CartCircleArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-circle-arrow-down?f=classic&amp;s=light">Cart Circle Arrow Down</a>
    /// </summary>
    public static Icon CartCircleArrowDown => CartCircleArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-circle-arrow-down", "e3ef");
    private static Icon? CartCircleArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-circle-arrow-up?f=classic&amp;s=light">Cart Circle Arrow Up</a>
    /// </summary>
    public static Icon CartCircleArrowUp => CartCircleArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-circle-arrow-up", "e3f0");
    private static Icon? CartCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-circle-check?f=classic&amp;s=light">Cart Circle Check</a>
    /// </summary>
    public static Icon CartCircleCheck => CartCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-circle-check", "e3f1");
    private static Icon? CartCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-circle-exclamation?f=classic&amp;s=light">Cart Circle Exclamation</a>
    /// </summary>
    public static Icon CartCircleExclamation => CartCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-circle-exclamation", "e3f2");
    private static Icon? CartCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-circle-plus?f=classic&amp;s=light">Cart Circle Plus</a>
    /// </summary>
    public static Icon CartCirclePlus => CartCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-circle-plus", "e3f3");
    private static Icon? CartCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-circle-xmark?f=classic&amp;s=light">Cart Circle Xmark</a>
    /// </summary>
    public static Icon CartCircleXmark => CartCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-circle-xmark", "e3f4");
    private static Icon? CartFlatbedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed?f=classic&amp;s=light">Cart Flatbed</a>
    /// </summary>
    public static Icon CartFlatbed => CartFlatbedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-flatbed", "f474");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed?f=classic&amp;s=light">Cart Flatbed</a>
    /// </summary>
    public static Icon DollyFlatbed => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CartFlatbed;
    private static Icon? CartFlatbedBoxesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed-boxes?f=classic&amp;s=light">Cart Flatbed Boxes</a>
    /// </summary>
    public static Icon CartFlatbedBoxes => CartFlatbedBoxesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-flatbed-boxes", "f475");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed-boxes?f=classic&amp;s=light">Cart Flatbed Boxes</a>
    /// </summary>
    public static Icon DollyFlatbedAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CartFlatbedBoxes;
    private static Icon? CartFlatbedEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed-empty?f=classic&amp;s=light">Cart Flatbed Empty</a>
    /// </summary>
    public static Icon CartFlatbedEmpty => CartFlatbedEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-flatbed-empty", "f476");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed-empty?f=classic&amp;s=light">Cart Flatbed Empty</a>
    /// </summary>
    public static Icon DollyFlatbedEmpty => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CartFlatbedEmpty;
    private static Icon? CartFlatbedSuitcasef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed-suitcase?f=classic&amp;s=light">Cart Flatbed Suitcase</a>
    /// </summary>
    public static Icon CartFlatbedSuitcase => CartFlatbedSuitcasef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-flatbed-suitcase", "f59d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-flatbed-suitcase?f=classic&amp;s=light">Cart Flatbed Suitcase</a>
    /// </summary>
    public static Icon LuggageCart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CartFlatbedSuitcase;
    private static Icon? CartMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-minus?f=classic&amp;s=light">Cart Minus</a>
    /// </summary>
    public static Icon CartMinus => CartMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-minus", "e0db");
    private static Icon? CartPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-plus?f=classic&amp;s=light">Cart Plus</a>
    /// </summary>
    public static Icon CartPlus => CartPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-plus", "f217");
    private static Icon? CartShoppingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-shopping?f=classic&amp;s=light">Cart Shopping</a>
    /// </summary>
    public static Icon CartShopping => CartShoppingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-shopping", "f07a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-shopping?f=classic&amp;s=light">Cart Shopping</a>
    /// </summary>
    public static Icon ShoppingCart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CartShopping;
    private static Icon? CartShoppingFastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-shopping-fast?f=classic&amp;s=light">Cart Shopping Fast</a>
    /// </summary>
    public static Icon CartShoppingFast => CartShoppingFastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-shopping-fast", "e0dc");
    private static Icon? CartXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cart-xmark?f=classic&amp;s=light">Cart Xmark</a>
    /// </summary>
    public static Icon CartXmark => CartXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cart-xmark", "e0dd");
    private static Icon? CashRegisterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cash-register?f=classic&amp;s=light">Cash Register</a>
    /// </summary>
    public static Icon CashRegister => CashRegisterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cash-register", "f788");
    private static Icon? CassetteBetamaxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cassette-betamax?f=classic&amp;s=light">Cassette Betamax</a>
    /// </summary>
    public static Icon CassetteBetamax => CassetteBetamaxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cassette-betamax", "f8a4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cassette-betamax?f=classic&amp;s=light">Cassette Betamax</a>
    /// </summary>
    public static Icon Betamax => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CassetteBetamax;
    private static Icon? CassetteTapef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cassette-tape?f=classic&amp;s=light">Cassette Tape</a>
    /// </summary>
    public static Icon CassetteTape => CassetteTapef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cassette-tape", "f8ab");
    private static Icon? CassetteVhsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cassette-vhs?f=classic&amp;s=light">Cassette Vhs</a>
    /// </summary>
    public static Icon CassetteVhs => CassetteVhsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cassette-vhs", "f8ec");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cassette-vhs?f=classic&amp;s=light">Cassette Vhs</a>
    /// </summary>
    public static Icon Vhs => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CassetteVhs;
    private static Icon? Castlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/castle?f=classic&amp;s=light">Castle</a>
    /// </summary>
    public static Icon Castle => Castlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "castle", "e0de");
    private static Icon? Catf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cat?f=classic&amp;s=light">Cat</a>
    /// </summary>
    public static Icon Cat => Catf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cat", "f6be");
    private static Icon? CatSpacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cat-space?f=classic&amp;s=light">Cat Space</a>
    /// </summary>
    public static Icon CatSpace => CatSpacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cat-space", "e001");
    private static Icon? Cauldronf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cauldron?f=classic&amp;s=light">Cauldron</a>
    /// </summary>
    public static Icon Cauldron => Cauldronf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cauldron", "f6bf");
    private static Icon? CediSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cedi-sign?f=classic&amp;s=light">Cedi Sign</a>
    /// </summary>
    public static Icon CediSign => CediSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cedi-sign", "e0df");
    private static Icon? CentSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cent-sign?f=classic&amp;s=light">Cent Sign</a>
    /// </summary>
    public static Icon CentSign => CentSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cent-sign", "e3f5");
    private static Icon? Certificatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/certificate?f=classic&amp;s=light">Certificate</a>
    /// </summary>
    public static Icon Certificate => Certificatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "certificate", "f0a3");
    private static Icon? Chairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chair?f=classic&amp;s=light">Chair</a>
    /// </summary>
    public static Icon Chair => Chairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chair", "f6c0");
    private static Icon? ChairOfficef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chair-office?f=classic&amp;s=light">Chair Office</a>
    /// </summary>
    public static Icon ChairOffice => ChairOfficef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chair-office", "f6c1");
    private static Icon? Chalkboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chalkboard?f=classic&amp;s=light">Chalkboard</a>
    /// </summary>
    public static Icon Chalkboard => Chalkboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chalkboard", "f51b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chalkboard?f=classic&amp;s=light">Chalkboard</a>
    /// </summary>
    public static Icon Blackboard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Chalkboard;
    private static Icon? ChalkboardUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chalkboard-user?f=classic&amp;s=light">Chalkboard User</a>
    /// </summary>
    public static Icon ChalkboardUser => ChalkboardUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chalkboard-user", "f51c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chalkboard-user?f=classic&amp;s=light">Chalkboard User</a>
    /// </summary>
    public static Icon ChalkboardTeacher => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChalkboardUser;
    private static Icon? ChampagneGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/champagne-glass?f=classic&amp;s=light">Champagne Glass</a>
    /// </summary>
    public static Icon ChampagneGlass => ChampagneGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "champagne-glass", "f79e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/champagne-glass?f=classic&amp;s=light">Champagne Glass</a>
    /// </summary>
    public static Icon GlassChampagne => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChampagneGlass;
    private static Icon? ChampagneGlassesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/champagne-glasses?f=classic&amp;s=light">Champagne Glasses</a>
    /// </summary>
    public static Icon ChampagneGlasses => ChampagneGlassesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "champagne-glasses", "f79f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/champagne-glasses?f=classic&amp;s=light">Champagne Glasses</a>
    /// </summary>
    public static Icon GlassCheers => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChampagneGlasses;
    private static Icon? ChargingStationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/charging-station?f=classic&amp;s=light">Charging Station</a>
    /// </summary>
    public static Icon ChargingStation => ChargingStationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "charging-station", "f5e7");
    private static Icon? ChartAreaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-area?f=classic&amp;s=light">Chart Area</a>
    /// </summary>
    public static Icon ChartArea => ChartAreaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-area", "f1fe");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-area?f=classic&amp;s=light">Chart Area</a>
    /// </summary>
    public static Icon AreaChart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartArea;
    private static Icon? ChartBarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-bar?f=classic&amp;s=light">Chart Bar</a>
    /// </summary>
    public static Icon ChartBar => ChartBarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-bar", "f080");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-bar?f=classic&amp;s=light">Chart Bar</a>
    /// </summary>
    public static Icon BarChart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartBar;
    private static Icon? ChartBulletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-bullet?f=classic&amp;s=light">Chart Bullet</a>
    /// </summary>
    public static Icon ChartBullet => ChartBulletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-bullet", "e0e1");
    private static Icon? ChartCandlestickf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-candlestick?f=classic&amp;s=light">Chart Candlestick</a>
    /// </summary>
    public static Icon ChartCandlestick => ChartCandlestickf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-candlestick", "e0e2");
    private static Icon? ChartColumnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-column?f=classic&amp;s=light">Chart Column</a>
    /// </summary>
    public static Icon ChartColumn => ChartColumnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-column", "e0e3");
    private static Icon? ChartGanttf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-gantt?f=classic&amp;s=light">Chart Gantt</a>
    /// </summary>
    public static Icon ChartGantt => ChartGanttf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-gantt", "e0e4");
    private static Icon? ChartKanbanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-kanban?f=classic&amp;s=light">Chart Kanban</a>
    /// </summary>
    public static Icon ChartKanban => ChartKanbanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-kanban", "e64f");
    private static Icon? ChartLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-line?f=classic&amp;s=light">Chart Line</a>
    /// </summary>
    public static Icon ChartLine => ChartLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-line", "f201");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-line?f=classic&amp;s=light">Chart Line</a>
    /// </summary>
    public static Icon LineChart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartLine;
    private static Icon? ChartLineDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-line-down?f=classic&amp;s=light">Chart Line Down</a>
    /// </summary>
    public static Icon ChartLineDown => ChartLineDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-line-down", "f64d");
    private static Icon? ChartLineUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-line-up?f=classic&amp;s=light">Chart Line Up</a>
    /// </summary>
    public static Icon ChartLineUp => ChartLineUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-line-up", "e0e5");
    private static Icon? ChartLineUpDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-line-up-down?f=classic&amp;s=light">Chart Line Up Down</a>
    /// </summary>
    public static Icon ChartLineUpDown => ChartLineUpDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-line-up-down", "e5d7");
    private static Icon? ChartMixedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-mixed?f=classic&amp;s=light">Chart Mixed</a>
    /// </summary>
    public static Icon ChartMixed => ChartMixedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-mixed", "f643");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-mixed?f=classic&amp;s=light">Chart Mixed</a>
    /// </summary>
    public static Icon Analytics => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartMixed;
    private static Icon? ChartMixedUpCircleCurrencyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-mixed-up-circle-currency?f=classic&amp;s=light">Chart Mixed Up Circle Currency</a>
    /// </summary>
    public static Icon ChartMixedUpCircleCurrency => ChartMixedUpCircleCurrencyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-mixed-up-circle-currency", "e5d8");
    private static Icon? ChartMixedUpCircleDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-mixed-up-circle-dollar?f=classic&amp;s=light">Chart Mixed Up Circle Dollar</a>
    /// </summary>
    public static Icon ChartMixedUpCircleDollar => ChartMixedUpCircleDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-mixed-up-circle-dollar", "e5d9");
    private static Icon? ChartNetworkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-network?f=classic&amp;s=light">Chart Network</a>
    /// </summary>
    public static Icon ChartNetwork => ChartNetworkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-network", "f78a");
    private static Icon? ChartPief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pie?f=classic&amp;s=light">Chart Pie</a>
    /// </summary>
    public static Icon ChartPie => ChartPief ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-pie", "f200");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pie?f=classic&amp;s=light">Chart Pie</a>
    /// </summary>
    public static Icon PieChart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartPie;
    private static Icon? ChartPieSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pie-simple?f=classic&amp;s=light">Chart Pie Simple</a>
    /// </summary>
    public static Icon ChartPieSimple => ChartPieSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-pie-simple", "f64e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pie-simple?f=classic&amp;s=light">Chart Pie Simple</a>
    /// </summary>
    public static Icon ChartPieAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartPieSimple;
    private static Icon? ChartPieSimpleCircleCurrencyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pie-simple-circle-currency?f=classic&amp;s=light">Chart Pie Simple Circle Currency</a>
    /// </summary>
    public static Icon ChartPieSimpleCircleCurrency => ChartPieSimpleCircleCurrencyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-pie-simple-circle-currency", "e604");
    private static Icon? ChartPieSimpleCircleDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pie-simple-circle-dollar?f=classic&amp;s=light">Chart Pie Simple Circle Dollar</a>
    /// </summary>
    public static Icon ChartPieSimpleCircleDollar => ChartPieSimpleCircleDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-pie-simple-circle-dollar", "e605");
    private static Icon? ChartPyramidf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-pyramid?f=classic&amp;s=light">Chart Pyramid</a>
    /// </summary>
    public static Icon ChartPyramid => ChartPyramidf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-pyramid", "e0e6");
    private static Icon? ChartRadarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-radar?f=classic&amp;s=light">Chart Radar</a>
    /// </summary>
    public static Icon ChartRadar => ChartRadarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-radar", "e0e7");
    private static Icon? ChartScatterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-scatter?f=classic&amp;s=light">Chart Scatter</a>
    /// </summary>
    public static Icon ChartScatter => ChartScatterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-scatter", "f7ee");
    private static Icon? ChartScatter3df;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-scatter-3d?f=classic&amp;s=light">Chart Scatter 3d</a>
    /// </summary>
    public static Icon ChartScatter3d => ChartScatter3df ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-scatter-3d", "e0e8");
    private static Icon? ChartScatterBubblef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-scatter-bubble?f=classic&amp;s=light">Chart Scatter Bubble</a>
    /// </summary>
    public static Icon ChartScatterBubble => ChartScatterBubblef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-scatter-bubble", "e0e9");
    private static Icon? ChartSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-simple?f=classic&amp;s=light">Chart Simple</a>
    /// </summary>
    public static Icon ChartSimple => ChartSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-simple", "e473");
    private static Icon? ChartSimpleHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-simple-horizontal?f=classic&amp;s=light">Chart Simple Horizontal</a>
    /// </summary>
    public static Icon ChartSimpleHorizontal => ChartSimpleHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-simple-horizontal", "e474");
    private static Icon? ChartTreeMapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-tree-map?f=classic&amp;s=light">Chart Tree Map</a>
    /// </summary>
    public static Icon ChartTreeMap => ChartTreeMapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-tree-map", "e0ea");
    private static Icon? ChartUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-user?f=classic&amp;s=light">Chart User</a>
    /// </summary>
    public static Icon ChartUser => ChartUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-user", "f6a3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-user?f=classic&amp;s=light">Chart User</a>
    /// </summary>
    public static Icon UserChart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChartUser;
    private static Icon? ChartWaterfallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chart-waterfall?f=classic&amp;s=light">Chart Waterfall</a>
    /// </summary>
    public static Icon ChartWaterfall => ChartWaterfallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chart-waterfall", "e0eb");
    private static Icon? Checkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/check?f=classic&amp;s=light">Check</a>
    /// </summary>
    public static Icon Check => Checkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "check", "f00c");
    private static Icon? CheckDoublef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/check-double?f=classic&amp;s=light">Check Double</a>
    /// </summary>
    public static Icon CheckDouble => CheckDoublef ??= new Icon(IconFamily.Classic, IconStyle.Light, "check-double", "f560");
    private static Icon? CheckToSlotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/check-to-slot?f=classic&amp;s=light">Check To Slot</a>
    /// </summary>
    public static Icon CheckToSlot => CheckToSlotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "check-to-slot", "f772");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/check-to-slot?f=classic&amp;s=light">Check To Slot</a>
    /// </summary>
    public static Icon VoteYea => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CheckToSlot;
    private static Icon? Cheesef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cheese?f=classic&amp;s=light">Cheese</a>
    /// </summary>
    public static Icon Cheese => Cheesef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cheese", "f7ef");
    private static Icon? CheeseSwissf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cheese-swiss?f=classic&amp;s=light">Cheese Swiss</a>
    /// </summary>
    public static Icon CheeseSwiss => CheeseSwissf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cheese-swiss", "f7f0");
    private static Icon? Cherriesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cherries?f=classic&amp;s=light">Cherries</a>
    /// </summary>
    public static Icon Cherries => Cherriesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cherries", "e0ec");
    private static Icon? Chessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess?f=classic&amp;s=light">Chess</a>
    /// </summary>
    public static Icon Chess => Chessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess", "f439");
    private static Icon? ChessBishopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-bishop?f=classic&amp;s=light">Chess Bishop</a>
    /// </summary>
    public static Icon ChessBishop => ChessBishopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-bishop", "f43a");
    private static Icon? ChessBishopPiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-bishop-piece?f=classic&amp;s=light">Chess Bishop Piece</a>
    /// </summary>
    public static Icon ChessBishopPiece => ChessBishopPiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-bishop-piece", "f43b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-bishop-piece?f=classic&amp;s=light">Chess Bishop Piece</a>
    /// </summary>
    public static Icon ChessBishopAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessBishopPiece;
    private static Icon? ChessBoardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-board?f=classic&amp;s=light">Chess Board</a>
    /// </summary>
    public static Icon ChessBoard => ChessBoardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-board", "f43c");
    private static Icon? ChessClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-clock?f=classic&amp;s=light">Chess Clock</a>
    /// </summary>
    public static Icon ChessClock => ChessClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-clock", "f43d");
    private static Icon? ChessClockFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-clock-flip?f=classic&amp;s=light">Chess Clock Flip</a>
    /// </summary>
    public static Icon ChessClockFlip => ChessClockFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-clock-flip", "f43e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-clock-flip?f=classic&amp;s=light">Chess Clock Flip</a>
    /// </summary>
    public static Icon ChessClockAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessClockFlip;
    private static Icon? ChessKingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-king?f=classic&amp;s=light">Chess King</a>
    /// </summary>
    public static Icon ChessKing => ChessKingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-king", "f43f");
    private static Icon? ChessKingPiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-king-piece?f=classic&amp;s=light">Chess King Piece</a>
    /// </summary>
    public static Icon ChessKingPiece => ChessKingPiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-king-piece", "f440");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-king-piece?f=classic&amp;s=light">Chess King Piece</a>
    /// </summary>
    public static Icon ChessKingAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessKingPiece;
    private static Icon? ChessKnightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-knight?f=classic&amp;s=light">Chess Knight</a>
    /// </summary>
    public static Icon ChessKnight => ChessKnightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-knight", "f441");
    private static Icon? ChessKnightPiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-knight-piece?f=classic&amp;s=light">Chess Knight Piece</a>
    /// </summary>
    public static Icon ChessKnightPiece => ChessKnightPiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-knight-piece", "f442");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-knight-piece?f=classic&amp;s=light">Chess Knight Piece</a>
    /// </summary>
    public static Icon ChessKnightAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessKnightPiece;
    private static Icon? ChessPawnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-pawn?f=classic&amp;s=light">Chess Pawn</a>
    /// </summary>
    public static Icon ChessPawn => ChessPawnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-pawn", "f443");
    private static Icon? ChessPawnPiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-pawn-piece?f=classic&amp;s=light">Chess Pawn Piece</a>
    /// </summary>
    public static Icon ChessPawnPiece => ChessPawnPiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-pawn-piece", "f444");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-pawn-piece?f=classic&amp;s=light">Chess Pawn Piece</a>
    /// </summary>
    public static Icon ChessPawnAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessPawnPiece;
    private static Icon? ChessQueenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-queen?f=classic&amp;s=light">Chess Queen</a>
    /// </summary>
    public static Icon ChessQueen => ChessQueenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-queen", "f445");
    private static Icon? ChessQueenPiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-queen-piece?f=classic&amp;s=light">Chess Queen Piece</a>
    /// </summary>
    public static Icon ChessQueenPiece => ChessQueenPiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-queen-piece", "f446");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-queen-piece?f=classic&amp;s=light">Chess Queen Piece</a>
    /// </summary>
    public static Icon ChessQueenAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessQueenPiece;
    private static Icon? ChessRookf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-rook?f=classic&amp;s=light">Chess Rook</a>
    /// </summary>
    public static Icon ChessRook => ChessRookf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-rook", "f447");
    private static Icon? ChessRookPiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-rook-piece?f=classic&amp;s=light">Chess Rook Piece</a>
    /// </summary>
    public static Icon ChessRookPiece => ChessRookPiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "chess-rook-piece", "f448");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chess-rook-piece?f=classic&amp;s=light">Chess Rook Piece</a>
    /// </summary>
    public static Icon ChessRookAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChessRookPiece;
    private static Icon? Chestnutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chestnut?f=classic&amp;s=light">Chestnut</a>
    /// </summary>
    public static Icon Chestnut => Chestnutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chestnut", "e3f6");
    private static Icon? ChevronDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevron-down?f=classic&amp;s=light">Chevron Down</a>
    /// </summary>
    public static Icon ChevronDown => ChevronDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevron-down", "f078");
    private static Icon? ChevronLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevron-left?f=classic&amp;s=light">Chevron Left</a>
    /// </summary>
    public static Icon ChevronLeft => ChevronLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevron-left", "f053");
    private static Icon? ChevronRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevron-right?f=classic&amp;s=light">Chevron Right</a>
    /// </summary>
    public static Icon ChevronRight => ChevronRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevron-right", "f054");
    private static Icon? ChevronUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevron-up?f=classic&amp;s=light">Chevron Up</a>
    /// </summary>
    public static Icon ChevronUp => ChevronUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevron-up", "f077");
    private static Icon? ChevronsDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-down?f=classic&amp;s=light">Chevrons Down</a>
    /// </summary>
    public static Icon ChevronsDown => ChevronsDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevrons-down", "f322");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-down?f=classic&amp;s=light">Chevrons Down</a>
    /// </summary>
    public static Icon ChevronDoubleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChevronsDown;
    private static Icon? ChevronsLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-left?f=classic&amp;s=light">Chevrons Left</a>
    /// </summary>
    public static Icon ChevronsLeft => ChevronsLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevrons-left", "f323");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-left?f=classic&amp;s=light">Chevrons Left</a>
    /// </summary>
    public static Icon ChevronDoubleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChevronsLeft;
    private static Icon? ChevronsRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-right?f=classic&amp;s=light">Chevrons Right</a>
    /// </summary>
    public static Icon ChevronsRight => ChevronsRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevrons-right", "f324");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-right?f=classic&amp;s=light">Chevrons Right</a>
    /// </summary>
    public static Icon ChevronDoubleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChevronsRight;
    private static Icon? ChevronsUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-up?f=classic&amp;s=light">Chevrons Up</a>
    /// </summary>
    public static Icon ChevronsUp => ChevronsUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chevrons-up", "f325");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chevrons-up?f=classic&amp;s=light">Chevrons Up</a>
    /// </summary>
    public static Icon ChevronDoubleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChevronsUp;
    private static Icon? ChfSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chf-sign?f=classic&amp;s=light">Chf Sign</a>
    /// </summary>
    public static Icon ChfSign => ChfSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chf-sign", "e602");
    private static Icon? Childf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/child?f=classic&amp;s=light">Child</a>
    /// </summary>
    public static Icon Child => Childf ??= new Icon(IconFamily.Classic, IconStyle.Light, "child", "f1ae");
    private static Icon? ChildCombatantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/child-combatant?f=classic&amp;s=light">Child Combatant</a>
    /// </summary>
    public static Icon ChildCombatant => ChildCombatantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "child-combatant", "e4e0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/child-combatant?f=classic&amp;s=light">Child Combatant</a>
    /// </summary>
    public static Icon ChildRifle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ChildCombatant;
    private static Icon? ChildDressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/child-dress?f=classic&amp;s=light">Child Dress</a>
    /// </summary>
    public static Icon ChildDress => ChildDressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "child-dress", "e59c");
    private static Icon? ChildReachingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/child-reaching?f=classic&amp;s=light">Child Reaching</a>
    /// </summary>
    public static Icon ChildReaching => ChildReachingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "child-reaching", "e59d");
    private static Icon? Childrenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/children?f=classic&amp;s=light">Children</a>
    /// </summary>
    public static Icon Children => Childrenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "children", "e4e1");
    private static Icon? Chimneyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chimney?f=classic&amp;s=light">Chimney</a>
    /// </summary>
    public static Icon Chimney => Chimneyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chimney", "f78b");
    private static Icon? Chopsticksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/chopsticks?f=classic&amp;s=light">Chopsticks</a>
    /// </summary>
    public static Icon Chopsticks => Chopsticksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "chopsticks", "e3f7");
    private static Icon? Churchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/church?f=classic&amp;s=light">Church</a>
    /// </summary>
    public static Icon Church => Churchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "church", "f51d");
    private static Icon? Circlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle?f=classic&amp;s=light">Circle</a>
    /// </summary>
    public static Icon Circle => Circlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle", "f111");
    private static Icon? Circle0f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-0?f=classic&amp;s=light">Circle 0</a>
    /// </summary>
    public static Icon Circle0 => Circle0f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-0", "e0ed");
    private static Icon? Circle1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-1?f=classic&amp;s=light">Circle 1</a>
    /// </summary>
    public static Icon Circle1 => Circle1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-1", "e0ee");
    private static Icon? Circle2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-2?f=classic&amp;s=light">Circle 2</a>
    /// </summary>
    public static Icon Circle2 => Circle2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-2", "e0ef");
    private static Icon? Circle3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-3?f=classic&amp;s=light">Circle 3</a>
    /// </summary>
    public static Icon Circle3 => Circle3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-3", "e0f0");
    private static Icon? Circle4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-4?f=classic&amp;s=light">Circle 4</a>
    /// </summary>
    public static Icon Circle4 => Circle4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-4", "e0f1");
    private static Icon? Circle5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-5?f=classic&amp;s=light">Circle 5</a>
    /// </summary>
    public static Icon Circle5 => Circle5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-5", "e0f2");
    private static Icon? Circle6f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-6?f=classic&amp;s=light">Circle 6</a>
    /// </summary>
    public static Icon Circle6 => Circle6f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-6", "e0f3");
    private static Icon? Circle7f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-7?f=classic&amp;s=light">Circle 7</a>
    /// </summary>
    public static Icon Circle7 => Circle7f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-7", "e0f4");
    private static Icon? Circle8f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-8?f=classic&amp;s=light">Circle 8</a>
    /// </summary>
    public static Icon Circle8 => Circle8f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-8", "e0f5");
    private static Icon? Circle9f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-9?f=classic&amp;s=light">Circle 9</a>
    /// </summary>
    public static Icon Circle9 => Circle9f ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-9", "e0f6");
    private static Icon? CircleAf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-a?f=classic&amp;s=light">Circle A</a>
    /// </summary>
    public static Icon CircleA => CircleAf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-a", "e0f7");
    private static Icon? CircleAmpersandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-ampersand?f=classic&amp;s=light">Circle Ampersand</a>
    /// </summary>
    public static Icon CircleAmpersand => CircleAmpersandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-ampersand", "e0f8");
    private static Icon? CircleArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-down?f=classic&amp;s=light">Circle Arrow Down</a>
    /// </summary>
    public static Icon CircleArrowDown => CircleArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-down", "f0ab");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-down?f=classic&amp;s=light">Circle Arrow Down</a>
    /// </summary>
    public static Icon ArrowCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleArrowDown;
    private static Icon? CircleArrowDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-down-left?f=classic&amp;s=light">Circle Arrow Down Left</a>
    /// </summary>
    public static Icon CircleArrowDownLeft => CircleArrowDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-down-left", "e0f9");
    private static Icon? CircleArrowDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-down-right?f=classic&amp;s=light">Circle Arrow Down Right</a>
    /// </summary>
    public static Icon CircleArrowDownRight => CircleArrowDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-down-right", "e0fa");
    private static Icon? CircleArrowLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-left?f=classic&amp;s=light">Circle Arrow Left</a>
    /// </summary>
    public static Icon CircleArrowLeft => CircleArrowLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-left", "f0a8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-left?f=classic&amp;s=light">Circle Arrow Left</a>
    /// </summary>
    public static Icon ArrowCircleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleArrowLeft;
    private static Icon? CircleArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-right?f=classic&amp;s=light">Circle Arrow Right</a>
    /// </summary>
    public static Icon CircleArrowRight => CircleArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-right", "f0a9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-right?f=classic&amp;s=light">Circle Arrow Right</a>
    /// </summary>
    public static Icon ArrowCircleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleArrowRight;
    private static Icon? CircleArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-up?f=classic&amp;s=light">Circle Arrow Up</a>
    /// </summary>
    public static Icon CircleArrowUp => CircleArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-up", "f0aa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-up?f=classic&amp;s=light">Circle Arrow Up</a>
    /// </summary>
    public static Icon ArrowCircleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleArrowUp;
    private static Icon? CircleArrowUpLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-up-left?f=classic&amp;s=light">Circle Arrow Up Left</a>
    /// </summary>
    public static Icon CircleArrowUpLeft => CircleArrowUpLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-up-left", "e0fb");
    private static Icon? CircleArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-arrow-up-right?f=classic&amp;s=light">Circle Arrow Up Right</a>
    /// </summary>
    public static Icon CircleArrowUpRight => CircleArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-arrow-up-right", "e0fc");
    private static Icon? CircleBf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-b?f=classic&amp;s=light">Circle B</a>
    /// </summary>
    public static Icon CircleB => CircleBf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-b", "e0fd");
    private static Icon? CircleBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-bolt?f=classic&amp;s=light">Circle Bolt</a>
    /// </summary>
    public static Icon CircleBolt => CircleBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-bolt", "e0fe");
    private static Icon? CircleBookOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-book-open?f=classic&amp;s=light">Circle Book Open</a>
    /// </summary>
    public static Icon CircleBookOpen => CircleBookOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-book-open", "e0ff");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-book-open?f=classic&amp;s=light">Circle Book Open</a>
    /// </summary>
    public static Icon BookCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleBookOpen;
    private static Icon? CircleBookmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-bookmark?f=classic&amp;s=light">Circle Bookmark</a>
    /// </summary>
    public static Icon CircleBookmark => CircleBookmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-bookmark", "e100");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-bookmark?f=classic&amp;s=light">Circle Bookmark</a>
    /// </summary>
    public static Icon BookmarkCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleBookmark;
    private static Icon? CircleCf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-c?f=classic&amp;s=light">Circle C</a>
    /// </summary>
    public static Icon CircleC => CircleCf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-c", "e101");
    private static Icon? CircleCalendarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-calendar?f=classic&amp;s=light">Circle Calendar</a>
    /// </summary>
    public static Icon CircleCalendar => CircleCalendarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-calendar", "e102");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-calendar?f=classic&amp;s=light">Circle Calendar</a>
    /// </summary>
    public static Icon CalendarCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCalendar;
    private static Icon? CircleCameraf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-camera?f=classic&amp;s=light">Circle Camera</a>
    /// </summary>
    public static Icon CircleCamera => CircleCameraf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-camera", "e103");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-camera?f=classic&amp;s=light">Circle Camera</a>
    /// </summary>
    public static Icon CameraCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCamera;
    private static Icon? CircleCaretDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-down?f=classic&amp;s=light">Circle Caret Down</a>
    /// </summary>
    public static Icon CircleCaretDown => CircleCaretDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-caret-down", "f32d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-down?f=classic&amp;s=light">Circle Caret Down</a>
    /// </summary>
    public static Icon CaretCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCaretDown;
    private static Icon? CircleCaretLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-left?f=classic&amp;s=light">Circle Caret Left</a>
    /// </summary>
    public static Icon CircleCaretLeft => CircleCaretLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-caret-left", "f32e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-left?f=classic&amp;s=light">Circle Caret Left</a>
    /// </summary>
    public static Icon CaretCircleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCaretLeft;
    private static Icon? CircleCaretRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-right?f=classic&amp;s=light">Circle Caret Right</a>
    /// </summary>
    public static Icon CircleCaretRight => CircleCaretRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-caret-right", "f330");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-right?f=classic&amp;s=light">Circle Caret Right</a>
    /// </summary>
    public static Icon CaretCircleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCaretRight;
    private static Icon? CircleCaretUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-up?f=classic&amp;s=light">Circle Caret Up</a>
    /// </summary>
    public static Icon CircleCaretUp => CircleCaretUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-caret-up", "f331");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-caret-up?f=classic&amp;s=light">Circle Caret Up</a>
    /// </summary>
    public static Icon CaretCircleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCaretUp;
    private static Icon? CircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-check?f=classic&amp;s=light">Circle Check</a>
    /// </summary>
    public static Icon CircleCheck => CircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-check", "f058");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-check?f=classic&amp;s=light">Circle Check</a>
    /// </summary>
    public static Icon CheckCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleCheck;
    private static Icon? CircleChevronDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-down?f=classic&amp;s=light">Circle Chevron Down</a>
    /// </summary>
    public static Icon CircleChevronDown => CircleChevronDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-chevron-down", "f13a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-down?f=classic&amp;s=light">Circle Chevron Down</a>
    /// </summary>
    public static Icon ChevronCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleChevronDown;
    private static Icon? CircleChevronLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-left?f=classic&amp;s=light">Circle Chevron Left</a>
    /// </summary>
    public static Icon CircleChevronLeft => CircleChevronLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-chevron-left", "f137");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-left?f=classic&amp;s=light">Circle Chevron Left</a>
    /// </summary>
    public static Icon ChevronCircleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleChevronLeft;
    private static Icon? CircleChevronRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-right?f=classic&amp;s=light">Circle Chevron Right</a>
    /// </summary>
    public static Icon CircleChevronRight => CircleChevronRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-chevron-right", "f138");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-right?f=classic&amp;s=light">Circle Chevron Right</a>
    /// </summary>
    public static Icon ChevronCircleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleChevronRight;
    private static Icon? CircleChevronUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-up?f=classic&amp;s=light">Circle Chevron Up</a>
    /// </summary>
    public static Icon CircleChevronUp => CircleChevronUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-chevron-up", "f139");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-chevron-up?f=classic&amp;s=light">Circle Chevron Up</a>
    /// </summary>
    public static Icon ChevronCircleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleChevronUp;
    private static Icon? CircleDf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-d?f=classic&amp;s=light">Circle D</a>
    /// </summary>
    public static Icon CircleD => CircleDf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-d", "e104");
    private static Icon? CircleDashedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dashed?f=classic&amp;s=light">Circle Dashed</a>
    /// </summary>
    public static Icon CircleDashed => CircleDashedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-dashed", "e105");
    private static Icon? CircleDividef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-divide?f=classic&amp;s=light">Circle Divide</a>
    /// </summary>
    public static Icon CircleDivide => CircleDividef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-divide", "e106");
    private static Icon? CircleDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dollar?f=classic&amp;s=light">Circle Dollar</a>
    /// </summary>
    public static Icon CircleDollar => CircleDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-dollar", "f2e8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dollar?f=classic&amp;s=light">Circle Dollar</a>
    /// </summary>
    public static Icon DollarCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleDollar;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dollar?f=classic&amp;s=light">Circle Dollar</a>
    /// </summary>
    public static Icon UsdCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleDollar;
    private static Icon? CircleDollarToSlotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dollar-to-slot?f=classic&amp;s=light">Circle Dollar To Slot</a>
    /// </summary>
    public static Icon CircleDollarToSlot => CircleDollarToSlotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-dollar-to-slot", "f4b9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dollar-to-slot?f=classic&amp;s=light">Circle Dollar To Slot</a>
    /// </summary>
    public static Icon Donate => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleDollarToSlot;
    private static Icon? CircleDotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dot?f=classic&amp;s=light">Circle Dot</a>
    /// </summary>
    public static Icon CircleDot => CircleDotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-dot", "f192");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-dot?f=classic&amp;s=light">Circle Dot</a>
    /// </summary>
    public static Icon DotCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleDot;
    private static Icon? CircleDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-down?f=classic&amp;s=light">Circle Down</a>
    /// </summary>
    public static Icon CircleDown => CircleDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-down", "f358");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-down?f=classic&amp;s=light">Circle Down</a>
    /// </summary>
    public static Icon ArrowAltCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleDown;
    private static Icon? CircleDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-down-left?f=classic&amp;s=light">Circle Down Left</a>
    /// </summary>
    public static Icon CircleDownLeft => CircleDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-down-left", "e107");
    private static Icon? CircleDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-down-right?f=classic&amp;s=light">Circle Down Right</a>
    /// </summary>
    public static Icon CircleDownRight => CircleDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-down-right", "e108");
    private static Icon? CircleEf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-e?f=classic&amp;s=light">Circle E</a>
    /// </summary>
    public static Icon CircleE => CircleEf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-e", "e109");
    private static Icon? CircleEllipsisf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-ellipsis?f=classic&amp;s=light">Circle Ellipsis</a>
    /// </summary>
    public static Icon CircleEllipsis => CircleEllipsisf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-ellipsis", "e10a");
    private static Icon? CircleEllipsisVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-ellipsis-vertical?f=classic&amp;s=light">Circle Ellipsis Vertical</a>
    /// </summary>
    public static Icon CircleEllipsisVertical => CircleEllipsisVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-ellipsis-vertical", "e10b");
    private static Icon? CircleEnvelopef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-envelope?f=classic&amp;s=light">Circle Envelope</a>
    /// </summary>
    public static Icon CircleEnvelope => CircleEnvelopef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-envelope", "e10c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-envelope?f=classic&amp;s=light">Circle Envelope</a>
    /// </summary>
    public static Icon EnvelopeCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleEnvelope;
    private static Icon? CircleEurof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-euro?f=classic&amp;s=light">Circle Euro</a>
    /// </summary>
    public static Icon CircleEuro => CircleEurof ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-euro", "e5ce");
    private static Icon? CircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-exclamation?f=classic&amp;s=light">Circle Exclamation</a>
    /// </summary>
    public static Icon CircleExclamation => CircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-exclamation", "f06a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-exclamation?f=classic&amp;s=light">Circle Exclamation</a>
    /// </summary>
    public static Icon ExclamationCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleExclamation;
    private static Icon? CircleExclamationCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-exclamation-check?f=classic&amp;s=light">Circle Exclamation Check</a>
    /// </summary>
    public static Icon CircleExclamationCheck => CircleExclamationCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-exclamation-check", "e10d");
    private static Icon? CircleFf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-f?f=classic&amp;s=light">Circle F</a>
    /// </summary>
    public static Icon CircleF => CircleFf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-f", "e10e");
    private static Icon? CircleGf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-g?f=classic&amp;s=light">Circle G</a>
    /// </summary>
    public static Icon CircleG => CircleGf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-g", "e10f");
    private static Icon? CircleHf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-h?f=classic&amp;s=light">Circle H</a>
    /// </summary>
    public static Icon CircleH => CircleHf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-h", "f47e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-h?f=classic&amp;s=light">Circle H</a>
    /// </summary>
    public static Icon HospitalSymbol => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleH;
    private static Icon? CircleHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-half?f=classic&amp;s=light">Circle Half</a>
    /// </summary>
    public static Icon CircleHalf => CircleHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-half", "e110");
    private static Icon? CircleHalfStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-half-stroke?f=classic&amp;s=light">Circle Half Stroke</a>
    /// </summary>
    public static Icon CircleHalfStroke => CircleHalfStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-half-stroke", "f042");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-half-stroke?f=classic&amp;s=light">Circle Half Stroke</a>
    /// </summary>
    public static Icon Adjust => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleHalfStroke;
    private static Icon? CircleHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-heart?f=classic&amp;s=light">Circle Heart</a>
    /// </summary>
    public static Icon CircleHeart => CircleHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-heart", "f4c7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-heart?f=classic&amp;s=light">Circle Heart</a>
    /// </summary>
    public static Icon HeartCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleHeart;
    private static Icon? CircleIf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-i?f=classic&amp;s=light">Circle I</a>
    /// </summary>
    public static Icon CircleI => CircleIf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-i", "e111");
    private static Icon? CircleInfof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-info?f=classic&amp;s=light">Circle Info</a>
    /// </summary>
    public static Icon CircleInfo => CircleInfof ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-info", "f05a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-info?f=classic&amp;s=light">Circle Info</a>
    /// </summary>
    public static Icon InfoCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleInfo;
    private static Icon? CircleJf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-j?f=classic&amp;s=light">Circle J</a>
    /// </summary>
    public static Icon CircleJ => CircleJf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-j", "e112");
    private static Icon? CircleKf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-k?f=classic&amp;s=light">Circle K</a>
    /// </summary>
    public static Icon CircleK => CircleKf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-k", "e113");
    private static Icon? CircleLf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-l?f=classic&amp;s=light">Circle L</a>
    /// </summary>
    public static Icon CircleL => CircleLf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-l", "e114");
    private static Icon? CircleLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-left?f=classic&amp;s=light">Circle Left</a>
    /// </summary>
    public static Icon CircleLeft => CircleLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-left", "f359");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-left?f=classic&amp;s=light">Circle Left</a>
    /// </summary>
    public static Icon ArrowAltCircleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleLeft;
    private static Icon? CircleLocationArrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-location-arrow?f=classic&amp;s=light">Circle Location Arrow</a>
    /// </summary>
    public static Icon CircleLocationArrow => CircleLocationArrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-location-arrow", "f602");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-location-arrow?f=classic&amp;s=light">Circle Location Arrow</a>
    /// </summary>
    public static Icon LocationCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleLocationArrow;
    private static Icon? CircleMf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-m?f=classic&amp;s=light">Circle M</a>
    /// </summary>
    public static Icon CircleM => CircleMf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-m", "e115");
    private static Icon? CircleMicrophonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-microphone?f=classic&amp;s=light">Circle Microphone</a>
    /// </summary>
    public static Icon CircleMicrophone => CircleMicrophonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-microphone", "e116");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-microphone?f=classic&amp;s=light">Circle Microphone</a>
    /// </summary>
    public static Icon MicrophoneCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleMicrophone;
    private static Icon? CircleMicrophoneLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-microphone-lines?f=classic&amp;s=light">Circle Microphone Lines</a>
    /// </summary>
    public static Icon CircleMicrophoneLines => CircleMicrophoneLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-microphone-lines", "e117");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-microphone-lines?f=classic&amp;s=light">Circle Microphone Lines</a>
    /// </summary>
    public static Icon MicrophoneCircleAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleMicrophoneLines;
    private static Icon? CircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-minus?f=classic&amp;s=light">Circle Minus</a>
    /// </summary>
    public static Icon CircleMinus => CircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-minus", "f056");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-minus?f=classic&amp;s=light">Circle Minus</a>
    /// </summary>
    public static Icon MinusCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleMinus;
    private static Icon? CircleNf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-n?f=classic&amp;s=light">Circle N</a>
    /// </summary>
    public static Icon CircleN => CircleNf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-n", "e118");
    private static Icon? CircleNodesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-nodes?f=classic&amp;s=light">Circle Nodes</a>
    /// </summary>
    public static Icon CircleNodes => CircleNodesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-nodes", "e4e2");
    private static Icon? CircleNotchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-notch?f=classic&amp;s=light">Circle Notch</a>
    /// </summary>
    public static Icon CircleNotch => CircleNotchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-notch", "f1ce");
    private static Icon? CircleOf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-o?f=classic&amp;s=light">Circle O</a>
    /// </summary>
    public static Icon CircleO => CircleOf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-o", "e119");
    private static Icon? CirclePf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-p?f=classic&amp;s=light">Circle P</a>
    /// </summary>
    public static Icon CircleP => CirclePf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-p", "e11a");
    private static Icon? CircleParkingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-parking?f=classic&amp;s=light">Circle Parking</a>
    /// </summary>
    public static Icon CircleParking => CircleParkingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-parking", "f615");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-parking?f=classic&amp;s=light">Circle Parking</a>
    /// </summary>
    public static Icon ParkingCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleParking;
    private static Icon? CirclePausef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-pause?f=classic&amp;s=light">Circle Pause</a>
    /// </summary>
    public static Icon CirclePause => CirclePausef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-pause", "f28b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-pause?f=classic&amp;s=light">Circle Pause</a>
    /// </summary>
    public static Icon PauseCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CirclePause;
    private static Icon? CirclePhonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-phone?f=classic&amp;s=light">Circle Phone</a>
    /// </summary>
    public static Icon CirclePhone => CirclePhonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-phone", "e11b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-phone?f=classic&amp;s=light">Circle Phone</a>
    /// </summary>
    public static Icon PhoneCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CirclePhone;
    private static Icon? CirclePhoneFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-phone-flip?f=classic&amp;s=light">Circle Phone Flip</a>
    /// </summary>
    public static Icon CirclePhoneFlip => CirclePhoneFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-phone-flip", "e11c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-phone-flip?f=classic&amp;s=light">Circle Phone Flip</a>
    /// </summary>
    public static Icon PhoneCircleAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CirclePhoneFlip;
    private static Icon? CirclePhoneHangupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-phone-hangup?f=classic&amp;s=light">Circle Phone Hangup</a>
    /// </summary>
    public static Icon CirclePhoneHangup => CirclePhoneHangupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-phone-hangup", "e11d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-phone-hangup?f=classic&amp;s=light">Circle Phone Hangup</a>
    /// </summary>
    public static Icon PhoneCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CirclePhoneHangup;
    private static Icon? CirclePlayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-play?f=classic&amp;s=light">Circle Play</a>
    /// </summary>
    public static Icon CirclePlay => CirclePlayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-play", "f144");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-play?f=classic&amp;s=light">Circle Play</a>
    /// </summary>
    public static Icon PlayCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CirclePlay;
    private static Icon? CirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-plus?f=classic&amp;s=light">Circle Plus</a>
    /// </summary>
    public static Icon CirclePlus => CirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-plus", "f055");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-plus?f=classic&amp;s=light">Circle Plus</a>
    /// </summary>
    public static Icon PlusCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CirclePlus;
    private static Icon? CircleQf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-q?f=classic&amp;s=light">Circle Q</a>
    /// </summary>
    public static Icon CircleQ => CircleQf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-q", "e11e");
    private static Icon? CircleQuarterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-quarter?f=classic&amp;s=light">Circle Quarter</a>
    /// </summary>
    public static Icon CircleQuarter => CircleQuarterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-quarter", "e11f");
    private static Icon? CircleQuarterStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-quarter-stroke?f=classic&amp;s=light">Circle Quarter Stroke</a>
    /// </summary>
    public static Icon CircleQuarterStroke => CircleQuarterStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-quarter-stroke", "e5d3");
    private static Icon? CircleQuartersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-quarters?f=classic&amp;s=light">Circle Quarters</a>
    /// </summary>
    public static Icon CircleQuarters => CircleQuartersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-quarters", "e3f8");
    private static Icon? CircleQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-question?f=classic&amp;s=light">Circle Question</a>
    /// </summary>
    public static Icon CircleQuestion => CircleQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-question", "f059");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-question?f=classic&amp;s=light">Circle Question</a>
    /// </summary>
    public static Icon QuestionCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleQuestion;
    private static Icon? CircleRf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-r?f=classic&amp;s=light">Circle R</a>
    /// </summary>
    public static Icon CircleR => CircleRf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-r", "e120");
    private static Icon? CircleRadiationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-radiation?f=classic&amp;s=light">Circle Radiation</a>
    /// </summary>
    public static Icon CircleRadiation => CircleRadiationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-radiation", "f7ba");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-radiation?f=classic&amp;s=light">Circle Radiation</a>
    /// </summary>
    public static Icon RadiationAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleRadiation;
    private static Icon? CircleRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-right?f=classic&amp;s=light">Circle Right</a>
    /// </summary>
    public static Icon CircleRight => CircleRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-right", "f35a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-right?f=classic&amp;s=light">Circle Right</a>
    /// </summary>
    public static Icon ArrowAltCircleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleRight;
    private static Icon? CircleSf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-s?f=classic&amp;s=light">Circle S</a>
    /// </summary>
    public static Icon CircleS => CircleSf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-s", "e121");
    private static Icon? CircleSmallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-small?f=classic&amp;s=light">Circle Small</a>
    /// </summary>
    public static Icon CircleSmall => CircleSmallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-small", "e122");
    private static Icon? CircleSortf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sort?f=classic&amp;s=light">Circle Sort</a>
    /// </summary>
    public static Icon CircleSort => CircleSortf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-sort", "e030");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sort?f=classic&amp;s=light">Circle Sort</a>
    /// </summary>
    public static Icon SortCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleSort;
    private static Icon? CircleSortDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sort-down?f=classic&amp;s=light">Circle Sort Down</a>
    /// </summary>
    public static Icon CircleSortDown => CircleSortDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-sort-down", "e031");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sort-down?f=classic&amp;s=light">Circle Sort Down</a>
    /// </summary>
    public static Icon SortCircleDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleSortDown;
    private static Icon? CircleSortUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sort-up?f=classic&amp;s=light">Circle Sort Up</a>
    /// </summary>
    public static Icon CircleSortUp => CircleSortUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-sort-up", "e032");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sort-up?f=classic&amp;s=light">Circle Sort Up</a>
    /// </summary>
    public static Icon SortCircleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleSortUp;
    private static Icon? CircleStarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-star?f=classic&amp;s=light">Circle Star</a>
    /// </summary>
    public static Icon CircleStar => CircleStarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-star", "e123");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-star?f=classic&amp;s=light">Circle Star</a>
    /// </summary>
    public static Icon StarCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleStar;
    private static Icon? CircleSterlingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-sterling?f=classic&amp;s=light">Circle Sterling</a>
    /// </summary>
    public static Icon CircleSterling => CircleSterlingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-sterling", "e5cf");
    private static Icon? CircleStopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-stop?f=classic&amp;s=light">Circle Stop</a>
    /// </summary>
    public static Icon CircleStop => CircleStopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-stop", "f28d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-stop?f=classic&amp;s=light">Circle Stop</a>
    /// </summary>
    public static Icon StopCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleStop;
    private static Icon? CircleTf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-t?f=classic&amp;s=light">Circle T</a>
    /// </summary>
    public static Icon CircleT => CircleTf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-t", "e124");
    private static Icon? CircleThreeQuartersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-three-quarters?f=classic&amp;s=light">Circle Three Quarters</a>
    /// </summary>
    public static Icon CircleThreeQuarters => CircleThreeQuartersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-three-quarters", "e125");
    private static Icon? CircleThreeQuartersStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-three-quarters-stroke?f=classic&amp;s=light">Circle Three Quarters Stroke</a>
    /// </summary>
    public static Icon CircleThreeQuartersStroke => CircleThreeQuartersStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-three-quarters-stroke", "e5d4");
    private static Icon? CircleTrashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-trash?f=classic&amp;s=light">Circle Trash</a>
    /// </summary>
    public static Icon CircleTrash => CircleTrashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-trash", "e126");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-trash?f=classic&amp;s=light">Circle Trash</a>
    /// </summary>
    public static Icon TrashCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleTrash;
    private static Icon? CircleUf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-u?f=classic&amp;s=light">Circle U</a>
    /// </summary>
    public static Icon CircleU => CircleUf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-u", "e127");
    private static Icon? CircleUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-up?f=classic&amp;s=light">Circle Up</a>
    /// </summary>
    public static Icon CircleUp => CircleUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-up", "f35b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-up?f=classic&amp;s=light">Circle Up</a>
    /// </summary>
    public static Icon ArrowAltCircleUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleUp;
    private static Icon? CircleUpLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-up-left?f=classic&amp;s=light">Circle Up Left</a>
    /// </summary>
    public static Icon CircleUpLeft => CircleUpLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-up-left", "e128");
    private static Icon? CircleUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-up-right?f=classic&amp;s=light">Circle Up Right</a>
    /// </summary>
    public static Icon CircleUpRight => CircleUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-up-right", "e129");
    private static Icon? CircleUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-user?f=classic&amp;s=light">Circle User</a>
    /// </summary>
    public static Icon CircleUser => CircleUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-user", "f2bd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-user?f=classic&amp;s=light">Circle User</a>
    /// </summary>
    public static Icon UserCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleUser;
    private static Icon? CircleVf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-v?f=classic&amp;s=light">Circle V</a>
    /// </summary>
    public static Icon CircleV => CircleVf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-v", "e12a");
    private static Icon? CircleVideof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-video?f=classic&amp;s=light">Circle Video</a>
    /// </summary>
    public static Icon CircleVideo => CircleVideof ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-video", "e12b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-video?f=classic&amp;s=light">Circle Video</a>
    /// </summary>
    public static Icon VideoCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleVideo;
    private static Icon? CircleWf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-w?f=classic&amp;s=light">Circle W</a>
    /// </summary>
    public static Icon CircleW => CircleWf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-w", "e12c");
    private static Icon? CircleWaveformLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-waveform-lines?f=classic&amp;s=light">Circle Waveform Lines</a>
    /// </summary>
    public static Icon CircleWaveformLines => CircleWaveformLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-waveform-lines", "e12d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-waveform-lines?f=classic&amp;s=light">Circle Waveform Lines</a>
    /// </summary>
    public static Icon WaveformCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleWaveformLines;
    private static Icon? CircleXf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-x?f=classic&amp;s=light">Circle X</a>
    /// </summary>
    public static Icon CircleX => CircleXf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-x", "e12e");
    private static Icon? CircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-xmark?f=classic&amp;s=light">Circle Xmark</a>
    /// </summary>
    public static Icon CircleXmark => CircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-xmark", "f057");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-xmark?f=classic&amp;s=light">Circle Xmark</a>
    /// </summary>
    public static Icon TimesCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-xmark?f=classic&amp;s=light">Circle Xmark</a>
    /// </summary>
    public static Icon XmarkCircle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CircleXmark;
    private static Icon? CircleYf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-y?f=classic&amp;s=light">Circle Y</a>
    /// </summary>
    public static Icon CircleY => CircleYf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-y", "e12f");
    private static Icon? CircleYenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-yen?f=classic&amp;s=light">Circle Yen</a>
    /// </summary>
    public static Icon CircleYen => CircleYenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-yen", "e5d0");
    private static Icon? CircleZf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circle-z?f=classic&amp;s=light">Circle Z</a>
    /// </summary>
    public static Icon CircleZ => CircleZf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circle-z", "e130");
    private static Icon? CirclesOverlapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/circles-overlap?f=classic&amp;s=light">Circles Overlap</a>
    /// </summary>
    public static Icon CirclesOverlap => CirclesOverlapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "circles-overlap", "e600");
    private static Icon? Citrusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/citrus?f=classic&amp;s=light">Citrus</a>
    /// </summary>
    public static Icon Citrus => Citrusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "citrus", "e2f4");
    private static Icon? CitrusSlicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/citrus-slice?f=classic&amp;s=light">Citrus Slice</a>
    /// </summary>
    public static Icon CitrusSlice => CitrusSlicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "citrus-slice", "e2f5");
    private static Icon? Cityf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/city?f=classic&amp;s=light">City</a>
    /// </summary>
    public static Icon City => Cityf ??= new Icon(IconFamily.Classic, IconStyle.Light, "city", "f64f");
    private static Icon? Clapperboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clapperboard?f=classic&amp;s=light">Clapperboard</a>
    /// </summary>
    public static Icon Clapperboard => Clapperboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clapperboard", "e131");
    private static Icon? ClapperboardPlayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clapperboard-play?f=classic&amp;s=light">Clapperboard Play</a>
    /// </summary>
    public static Icon ClapperboardPlay => ClapperboardPlayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clapperboard-play", "e132");
    private static Icon? Clarinetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clarinet?f=classic&amp;s=light">Clarinet</a>
    /// </summary>
    public static Icon Clarinet => Clarinetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clarinet", "f8ad");
    private static Icon? ClawMarksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/claw-marks?f=classic&amp;s=light">Claw Marks</a>
    /// </summary>
    public static Icon ClawMarks => ClawMarksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "claw-marks", "f6c2");
    private static Icon? Clipboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard?f=classic&amp;s=light">Clipboard</a>
    /// </summary>
    public static Icon Clipboard => Clipboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard", "f328");
    private static Icon? ClipboardCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-check?f=classic&amp;s=light">Clipboard Check</a>
    /// </summary>
    public static Icon ClipboardCheck => ClipboardCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-check", "f46c");
    private static Icon? ClipboardListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-list?f=classic&amp;s=light">Clipboard List</a>
    /// </summary>
    public static Icon ClipboardList => ClipboardListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-list", "f46d");
    private static Icon? ClipboardListCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-list-check?f=classic&amp;s=light">Clipboard List Check</a>
    /// </summary>
    public static Icon ClipboardListCheck => ClipboardListCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-list-check", "f737");
    private static Icon? ClipboardMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-medical?f=classic&amp;s=light">Clipboard Medical</a>
    /// </summary>
    public static Icon ClipboardMedical => ClipboardMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-medical", "e133");
    private static Icon? ClipboardPrescriptionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-prescription?f=classic&amp;s=light">Clipboard Prescription</a>
    /// </summary>
    public static Icon ClipboardPrescription => ClipboardPrescriptionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-prescription", "f5e8");
    private static Icon? ClipboardQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-question?f=classic&amp;s=light">Clipboard Question</a>
    /// </summary>
    public static Icon ClipboardQuestion => ClipboardQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-question", "e4e3");
    private static Icon? ClipboardUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clipboard-user?f=classic&amp;s=light">Clipboard User</a>
    /// </summary>
    public static Icon ClipboardUser => ClipboardUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clipboard-user", "f7f3");
    private static Icon? Clockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock?f=classic&amp;s=light">Clock</a>
    /// </summary>
    public static Icon Clock => Clockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock", "f017");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock?f=classic&amp;s=light">Clock</a>
    /// </summary>
    public static Icon ClockFour => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Clock;
    private static Icon? ClockDeskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-desk?f=classic&amp;s=light">Clock Desk</a>
    /// </summary>
    public static Icon ClockDesk => ClockDeskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-desk", "e134");
    private static Icon? ClockEightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-eight?f=classic&amp;s=light">Clock Eight</a>
    /// </summary>
    public static Icon ClockEight => ClockEightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-eight", "e345");
    private static Icon? ClockEightThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-eight-thirty?f=classic&amp;s=light">Clock Eight Thirty</a>
    /// </summary>
    public static Icon ClockEightThirty => ClockEightThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-eight-thirty", "e346");
    private static Icon? ClockElevenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-eleven?f=classic&amp;s=light">Clock Eleven</a>
    /// </summary>
    public static Icon ClockEleven => ClockElevenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-eleven", "e347");
    private static Icon? ClockElevenThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-eleven-thirty?f=classic&amp;s=light">Clock Eleven Thirty</a>
    /// </summary>
    public static Icon ClockElevenThirty => ClockElevenThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-eleven-thirty", "e348");
    private static Icon? ClockFivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-five?f=classic&amp;s=light">Clock Five</a>
    /// </summary>
    public static Icon ClockFive => ClockFivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-five", "e349");
    private static Icon? ClockFiveThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-five-thirty?f=classic&amp;s=light">Clock Five Thirty</a>
    /// </summary>
    public static Icon ClockFiveThirty => ClockFiveThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-five-thirty", "e34a");
    private static Icon? ClockFourThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-four-thirty?f=classic&amp;s=light">Clock Four Thirty</a>
    /// </summary>
    public static Icon ClockFourThirty => ClockFourThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-four-thirty", "e34b");
    private static Icon? ClockNinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-nine?f=classic&amp;s=light">Clock Nine</a>
    /// </summary>
    public static Icon ClockNine => ClockNinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-nine", "e34c");
    private static Icon? ClockNineThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-nine-thirty?f=classic&amp;s=light">Clock Nine Thirty</a>
    /// </summary>
    public static Icon ClockNineThirty => ClockNineThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-nine-thirty", "e34d");
    private static Icon? ClockOnef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-one?f=classic&amp;s=light">Clock One</a>
    /// </summary>
    public static Icon ClockOne => ClockOnef ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-one", "e34e");
    private static Icon? ClockOneThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-one-thirty?f=classic&amp;s=light">Clock One Thirty</a>
    /// </summary>
    public static Icon ClockOneThirty => ClockOneThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-one-thirty", "e34f");
    private static Icon? ClockRotateLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-rotate-left?f=classic&amp;s=light">Clock Rotate Left</a>
    /// </summary>
    public static Icon ClockRotateLeft => ClockRotateLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-rotate-left", "f1da");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-rotate-left?f=classic&amp;s=light">Clock Rotate Left</a>
    /// </summary>
    public static Icon History => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ClockRotateLeft;
    private static Icon? ClockSevenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-seven?f=classic&amp;s=light">Clock Seven</a>
    /// </summary>
    public static Icon ClockSeven => ClockSevenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-seven", "e350");
    private static Icon? ClockSevenThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-seven-thirty?f=classic&amp;s=light">Clock Seven Thirty</a>
    /// </summary>
    public static Icon ClockSevenThirty => ClockSevenThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-seven-thirty", "e351");
    private static Icon? ClockSixf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-six?f=classic&amp;s=light">Clock Six</a>
    /// </summary>
    public static Icon ClockSix => ClockSixf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-six", "e352");
    private static Icon? ClockSixThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-six-thirty?f=classic&amp;s=light">Clock Six Thirty</a>
    /// </summary>
    public static Icon ClockSixThirty => ClockSixThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-six-thirty", "e353");
    private static Icon? ClockTenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-ten?f=classic&amp;s=light">Clock Ten</a>
    /// </summary>
    public static Icon ClockTen => ClockTenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-ten", "e354");
    private static Icon? ClockTenThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-ten-thirty?f=classic&amp;s=light">Clock Ten Thirty</a>
    /// </summary>
    public static Icon ClockTenThirty => ClockTenThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-ten-thirty", "e355");
    private static Icon? ClockThreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-three?f=classic&amp;s=light">Clock Three</a>
    /// </summary>
    public static Icon ClockThree => ClockThreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-three", "e356");
    private static Icon? ClockThreeThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-three-thirty?f=classic&amp;s=light">Clock Three Thirty</a>
    /// </summary>
    public static Icon ClockThreeThirty => ClockThreeThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-three-thirty", "e357");
    private static Icon? ClockTwelvef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-twelve?f=classic&amp;s=light">Clock Twelve</a>
    /// </summary>
    public static Icon ClockTwelve => ClockTwelvef ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-twelve", "e358");
    private static Icon? ClockTwelveThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-twelve-thirty?f=classic&amp;s=light">Clock Twelve Thirty</a>
    /// </summary>
    public static Icon ClockTwelveThirty => ClockTwelveThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-twelve-thirty", "e359");
    private static Icon? ClockTwof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-two?f=classic&amp;s=light">Clock Two</a>
    /// </summary>
    public static Icon ClockTwo => ClockTwof ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-two", "e35a");
    private static Icon? ClockTwoThirtyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clock-two-thirty?f=classic&amp;s=light">Clock Two Thirty</a>
    /// </summary>
    public static Icon ClockTwoThirty => ClockTwoThirtyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clock-two-thirty", "e35b");
    private static Icon? Clonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clone?f=classic&amp;s=light">Clone</a>
    /// </summary>
    public static Icon Clone => Clonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "clone", "f24d");
    private static Icon? ClosedCaptioningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/closed-captioning?f=classic&amp;s=light">Closed Captioning</a>
    /// </summary>
    public static Icon ClosedCaptioning => ClosedCaptioningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "closed-captioning", "f20a");
    private static Icon? ClosedCaptioningSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/closed-captioning-slash?f=classic&amp;s=light">Closed Captioning Slash</a>
    /// </summary>
    public static Icon ClosedCaptioningSlash => ClosedCaptioningSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "closed-captioning-slash", "e135");
    private static Icon? ClothesHangerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clothes-hanger?f=classic&amp;s=light">Clothes Hanger</a>
    /// </summary>
    public static Icon ClothesHanger => ClothesHangerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clothes-hanger", "e136");
    private static Icon? Cloudf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud?f=classic&amp;s=light">Cloud</a>
    /// </summary>
    public static Icon Cloud => Cloudf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud", "f0c2");
    private static Icon? CloudArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-arrow-down?f=classic&amp;s=light">Cloud Arrow Down</a>
    /// </summary>
    public static Icon CloudArrowDown => CloudArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-arrow-down", "f0ed");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-arrow-down?f=classic&amp;s=light">Cloud Arrow Down</a>
    /// </summary>
    public static Icon CloudDownload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudArrowDown;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-arrow-down?f=classic&amp;s=light">Cloud Arrow Down</a>
    /// </summary>
    public static Icon CloudDownloadAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudArrowDown;
    private static Icon? CloudArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-arrow-up?f=classic&amp;s=light">Cloud Arrow Up</a>
    /// </summary>
    public static Icon CloudArrowUp => CloudArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-arrow-up", "f0ee");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-arrow-up?f=classic&amp;s=light">Cloud Arrow Up</a>
    /// </summary>
    public static Icon CloudUpload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudArrowUp;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-arrow-up?f=classic&amp;s=light">Cloud Arrow Up</a>
    /// </summary>
    public static Icon CloudUploadAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudArrowUp;
    private static Icon? CloudBinaryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-binary?f=classic&amp;s=light">Cloud Binary</a>
    /// </summary>
    public static Icon CloudBinary => CloudBinaryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-binary", "e601");
    private static Icon? CloudBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-bolt?f=classic&amp;s=light">Cloud Bolt</a>
    /// </summary>
    public static Icon CloudBolt => CloudBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-bolt", "f76c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-bolt?f=classic&amp;s=light">Cloud Bolt</a>
    /// </summary>
    public static Icon Thunderstorm => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudBolt;
    private static Icon? CloudBoltMoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-bolt-moon?f=classic&amp;s=light">Cloud Bolt Moon</a>
    /// </summary>
    public static Icon CloudBoltMoon => CloudBoltMoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-bolt-moon", "f76d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-bolt-moon?f=classic&amp;s=light">Cloud Bolt Moon</a>
    /// </summary>
    public static Icon ThunderstormMoon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudBoltMoon;
    private static Icon? CloudBoltSunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-bolt-sun?f=classic&amp;s=light">Cloud Bolt Sun</a>
    /// </summary>
    public static Icon CloudBoltSun => CloudBoltSunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-bolt-sun", "f76e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-bolt-sun?f=classic&amp;s=light">Cloud Bolt Sun</a>
    /// </summary>
    public static Icon ThunderstormSun => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudBoltSun;
    private static Icon? CloudCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-check?f=classic&amp;s=light">Cloud Check</a>
    /// </summary>
    public static Icon CloudCheck => CloudCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-check", "e35c");
    private static Icon? CloudDrizzlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-drizzle?f=classic&amp;s=light">Cloud Drizzle</a>
    /// </summary>
    public static Icon CloudDrizzle => CloudDrizzlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-drizzle", "f738");
    private static Icon? CloudExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-exclamation?f=classic&amp;s=light">Cloud Exclamation</a>
    /// </summary>
    public static Icon CloudExclamation => CloudExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-exclamation", "e491");
    private static Icon? CloudFogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-fog?f=classic&amp;s=light">Cloud Fog</a>
    /// </summary>
    public static Icon CloudFog => CloudFogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-fog", "f74e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-fog?f=classic&amp;s=light">Cloud Fog</a>
    /// </summary>
    public static Icon Fog => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CloudFog;
    private static Icon? CloudHailf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-hail?f=classic&amp;s=light">Cloud Hail</a>
    /// </summary>
    public static Icon CloudHail => CloudHailf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-hail", "f739");
    private static Icon? CloudHailMixedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-hail-mixed?f=classic&amp;s=light">Cloud Hail Mixed</a>
    /// </summary>
    public static Icon CloudHailMixed => CloudHailMixedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-hail-mixed", "f73a");
    private static Icon? CloudMeatballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-meatball?f=classic&amp;s=light">Cloud Meatball</a>
    /// </summary>
    public static Icon CloudMeatball => CloudMeatballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-meatball", "f73b");
    private static Icon? CloudMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-minus?f=classic&amp;s=light">Cloud Minus</a>
    /// </summary>
    public static Icon CloudMinus => CloudMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-minus", "e35d");
    private static Icon? CloudMoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-moon?f=classic&amp;s=light">Cloud Moon</a>
    /// </summary>
    public static Icon CloudMoon => CloudMoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-moon", "f6c3");
    private static Icon? CloudMoonRainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-moon-rain?f=classic&amp;s=light">Cloud Moon Rain</a>
    /// </summary>
    public static Icon CloudMoonRain => CloudMoonRainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-moon-rain", "f73c");
    private static Icon? CloudMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-music?f=classic&amp;s=light">Cloud Music</a>
    /// </summary>
    public static Icon CloudMusic => CloudMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-music", "f8ae");
    private static Icon? CloudPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-plus?f=classic&amp;s=light">Cloud Plus</a>
    /// </summary>
    public static Icon CloudPlus => CloudPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-plus", "e35e");
    private static Icon? CloudQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-question?f=classic&amp;s=light">Cloud Question</a>
    /// </summary>
    public static Icon CloudQuestion => CloudQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-question", "e492");
    private static Icon? CloudRainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-rain?f=classic&amp;s=light">Cloud Rain</a>
    /// </summary>
    public static Icon CloudRain => CloudRainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-rain", "f73d");
    private static Icon? CloudRainbowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-rainbow?f=classic&amp;s=light">Cloud Rainbow</a>
    /// </summary>
    public static Icon CloudRainbow => CloudRainbowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-rainbow", "f73e");
    private static Icon? CloudShowersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-showers?f=classic&amp;s=light">Cloud Showers</a>
    /// </summary>
    public static Icon CloudShowers => CloudShowersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-showers", "f73f");
    private static Icon? CloudShowersHeavyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-showers-heavy?f=classic&amp;s=light">Cloud Showers Heavy</a>
    /// </summary>
    public static Icon CloudShowersHeavy => CloudShowersHeavyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-showers-heavy", "f740");
    private static Icon? CloudShowersWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-showers-water?f=classic&amp;s=light">Cloud Showers Water</a>
    /// </summary>
    public static Icon CloudShowersWater => CloudShowersWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-showers-water", "e4e4");
    private static Icon? CloudSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-slash?f=classic&amp;s=light">Cloud Slash</a>
    /// </summary>
    public static Icon CloudSlash => CloudSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-slash", "e137");
    private static Icon? CloudSleetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-sleet?f=classic&amp;s=light">Cloud Sleet</a>
    /// </summary>
    public static Icon CloudSleet => CloudSleetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-sleet", "f741");
    private static Icon? CloudSnowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-snow?f=classic&amp;s=light">Cloud Snow</a>
    /// </summary>
    public static Icon CloudSnow => CloudSnowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-snow", "f742");
    private static Icon? CloudSunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-sun?f=classic&amp;s=light">Cloud Sun</a>
    /// </summary>
    public static Icon CloudSun => CloudSunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-sun", "f6c4");
    private static Icon? CloudSunRainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-sun-rain?f=classic&amp;s=light">Cloud Sun Rain</a>
    /// </summary>
    public static Icon CloudSunRain => CloudSunRainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-sun-rain", "f743");
    private static Icon? CloudWordf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-word?f=classic&amp;s=light">Cloud Word</a>
    /// </summary>
    public static Icon CloudWord => CloudWordf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-word", "e138");
    private static Icon? CloudXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cloud-xmark?f=classic&amp;s=light">Cloud Xmark</a>
    /// </summary>
    public static Icon CloudXmark => CloudXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cloud-xmark", "e35f");
    private static Icon? Cloudsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clouds?f=classic&amp;s=light">Clouds</a>
    /// </summary>
    public static Icon Clouds => Cloudsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clouds", "f744");
    private static Icon? CloudsMoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clouds-moon?f=classic&amp;s=light">Clouds Moon</a>
    /// </summary>
    public static Icon CloudsMoon => CloudsMoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clouds-moon", "f745");
    private static Icon? CloudsSunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clouds-sun?f=classic&amp;s=light">Clouds Sun</a>
    /// </summary>
    public static Icon CloudsSun => CloudsSunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clouds-sun", "f746");
    private static Icon? Cloverf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/clover?f=classic&amp;s=light">Clover</a>
    /// </summary>
    public static Icon Clover => Cloverf ??= new Icon(IconFamily.Classic, IconStyle.Light, "clover", "e139");
    private static Icon? Clubf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/club?f=classic&amp;s=light">Club</a>
    /// </summary>
    public static Icon Club => Clubf ??= new Icon(IconFamily.Classic, IconStyle.Light, "club", "f327");
    private static Icon? Coconutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coconut?f=classic&amp;s=light">Coconut</a>
    /// </summary>
    public static Icon Coconut => Coconutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coconut", "e2f6");
    private static Icon? Codef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code?f=classic&amp;s=light">Code</a>
    /// </summary>
    public static Icon Code => Codef ??= new Icon(IconFamily.Classic, IconStyle.Light, "code", "f121");
    private static Icon? CodeBranchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-branch?f=classic&amp;s=light">Code Branch</a>
    /// </summary>
    public static Icon CodeBranch => CodeBranchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-branch", "f126");
    private static Icon? CodeCommitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-commit?f=classic&amp;s=light">Code Commit</a>
    /// </summary>
    public static Icon CodeCommit => CodeCommitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-commit", "f386");
    private static Icon? CodeComparef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-compare?f=classic&amp;s=light">Code Compare</a>
    /// </summary>
    public static Icon CodeCompare => CodeComparef ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-compare", "e13a");
    private static Icon? CodeForkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-fork?f=classic&amp;s=light">Code Fork</a>
    /// </summary>
    public static Icon CodeFork => CodeForkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-fork", "e13b");
    private static Icon? CodeMergef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-merge?f=classic&amp;s=light">Code Merge</a>
    /// </summary>
    public static Icon CodeMerge => CodeMergef ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-merge", "f387");
    private static Icon? CodePullRequestf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-pull-request?f=classic&amp;s=light">Code Pull Request</a>
    /// </summary>
    public static Icon CodePullRequest => CodePullRequestf ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-pull-request", "e13c");
    private static Icon? CodePullRequestClosedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-pull-request-closed?f=classic&amp;s=light">Code Pull Request Closed</a>
    /// </summary>
    public static Icon CodePullRequestClosed => CodePullRequestClosedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-pull-request-closed", "e3f9");
    private static Icon? CodePullRequestDraftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-pull-request-draft?f=classic&amp;s=light">Code Pull Request Draft</a>
    /// </summary>
    public static Icon CodePullRequestDraft => CodePullRequestDraftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-pull-request-draft", "e3fa");
    private static Icon? CodeSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/code-simple?f=classic&amp;s=light">Code Simple</a>
    /// </summary>
    public static Icon CodeSimple => CodeSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "code-simple", "e13d");
    private static Icon? CoffeeBeanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coffee-bean?f=classic&amp;s=light">Coffee Bean</a>
    /// </summary>
    public static Icon CoffeeBean => CoffeeBeanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coffee-bean", "e13e");
    private static Icon? CoffeeBeansf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coffee-beans?f=classic&amp;s=light">Coffee Beans</a>
    /// </summary>
    public static Icon CoffeeBeans => CoffeeBeansf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coffee-beans", "e13f");
    private static Icon? CoffeePotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coffee-pot?f=classic&amp;s=light">Coffee Pot</a>
    /// </summary>
    public static Icon CoffeePot => CoffeePotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coffee-pot", "e002");
    private static Icon? Coffinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coffin?f=classic&amp;s=light">Coffin</a>
    /// </summary>
    public static Icon Coffin => Coffinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coffin", "f6c6");
    private static Icon? CoffinCrossf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coffin-cross?f=classic&amp;s=light">Coffin Cross</a>
    /// </summary>
    public static Icon CoffinCross => CoffinCrossf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coffin-cross", "e051");
    private static Icon? Coinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coin?f=classic&amp;s=light">Coin</a>
    /// </summary>
    public static Icon Coin => Coinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coin", "f85c");
    private static Icon? CoinBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coin-blank?f=classic&amp;s=light">Coin Blank</a>
    /// </summary>
    public static Icon CoinBlank => CoinBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coin-blank", "e3fb");
    private static Icon? CoinFrontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coin-front?f=classic&amp;s=light">Coin Front</a>
    /// </summary>
    public static Icon CoinFront => CoinFrontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coin-front", "e3fc");
    private static Icon? CoinVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coin-vertical?f=classic&amp;s=light">Coin Vertical</a>
    /// </summary>
    public static Icon CoinVertical => CoinVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coin-vertical", "e3fd");
    private static Icon? Coinsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/coins?f=classic&amp;s=light">Coins</a>
    /// </summary>
    public static Icon Coins => Coinsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "coins", "f51e");
    private static Icon? Colonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/colon?f=classic&amp;s=light">Colon</a>
    /// </summary>
    public static Icon Colon => Colonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "colon", "3a");
    private static Icon? ColonSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/colon-sign?f=classic&amp;s=light">Colon Sign</a>
    /// </summary>
    public static Icon ColonSign => ColonSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "colon-sign", "e140");
    private static Icon? Columns3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/columns-3?f=classic&amp;s=light">Columns 3</a>
    /// </summary>
    public static Icon Columns3 => Columns3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "columns-3", "e361");
    private static Icon? Cometf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comet?f=classic&amp;s=light">Comet</a>
    /// </summary>
    public static Icon Comet => Cometf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comet", "e003");
    private static Icon? Commaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comma?f=classic&amp;s=light">Comma</a>
    /// </summary>
    public static Icon Comma => Commaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comma", "2c");
    private static Icon? Commandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/command?f=classic&amp;s=light">Command</a>
    /// </summary>
    public static Icon Command => Commandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "command", "e142");
    private static Icon? Commentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment?f=classic&amp;s=light">Comment</a>
    /// </summary>
    public static Icon Comment => Commentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment", "f075");
    private static Icon? CommentArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-arrow-down?f=classic&amp;s=light">Comment Arrow Down</a>
    /// </summary>
    public static Icon CommentArrowDown => CommentArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-arrow-down", "e143");
    private static Icon? CommentArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-arrow-up?f=classic&amp;s=light">Comment Arrow Up</a>
    /// </summary>
    public static Icon CommentArrowUp => CommentArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-arrow-up", "e144");
    private static Icon? CommentArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-arrow-up-right?f=classic&amp;s=light">Comment Arrow Up Right</a>
    /// </summary>
    public static Icon CommentArrowUpRight => CommentArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-arrow-up-right", "e145");
    private static Icon? CommentCaptionsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-captions?f=classic&amp;s=light">Comment Captions</a>
    /// </summary>
    public static Icon CommentCaptions => CommentCaptionsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-captions", "e146");
    private static Icon? CommentCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-check?f=classic&amp;s=light">Comment Check</a>
    /// </summary>
    public static Icon CommentCheck => CommentCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-check", "f4ac");
    private static Icon? CommentCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-code?f=classic&amp;s=light">Comment Code</a>
    /// </summary>
    public static Icon CommentCode => CommentCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-code", "e147");
    private static Icon? CommentDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-dollar?f=classic&amp;s=light">Comment Dollar</a>
    /// </summary>
    public static Icon CommentDollar => CommentDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-dollar", "f651");
    private static Icon? CommentDotsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-dots?f=classic&amp;s=light">Comment Dots</a>
    /// </summary>
    public static Icon CommentDots => CommentDotsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-dots", "f4ad");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-dots?f=classic&amp;s=light">Comment Dots</a>
    /// </summary>
    public static Icon Commenting => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CommentDots;
    private static Icon? CommentExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-exclamation?f=classic&amp;s=light">Comment Exclamation</a>
    /// </summary>
    public static Icon CommentExclamation => CommentExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-exclamation", "f4af");
    private static Icon? CommentHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-heart?f=classic&amp;s=light">Comment Heart</a>
    /// </summary>
    public static Icon CommentHeart => CommentHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-heart", "e5c8");
    private static Icon? CommentImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-image?f=classic&amp;s=light">Comment Image</a>
    /// </summary>
    public static Icon CommentImage => CommentImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-image", "e148");
    private static Icon? CommentLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-lines?f=classic&amp;s=light">Comment Lines</a>
    /// </summary>
    public static Icon CommentLines => CommentLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-lines", "f4b0");
    private static Icon? CommentMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-medical?f=classic&amp;s=light">Comment Medical</a>
    /// </summary>
    public static Icon CommentMedical => CommentMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-medical", "f7f5");
    private static Icon? CommentMiddlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-middle?f=classic&amp;s=light">Comment Middle</a>
    /// </summary>
    public static Icon CommentMiddle => CommentMiddlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-middle", "e149");
    private static Icon? CommentMiddleTopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-middle-top?f=classic&amp;s=light">Comment Middle Top</a>
    /// </summary>
    public static Icon CommentMiddleTop => CommentMiddleTopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-middle-top", "e14a");
    private static Icon? CommentMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-minus?f=classic&amp;s=light">Comment Minus</a>
    /// </summary>
    public static Icon CommentMinus => CommentMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-minus", "f4b1");
    private static Icon? CommentMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-music?f=classic&amp;s=light">Comment Music</a>
    /// </summary>
    public static Icon CommentMusic => CommentMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-music", "f8b0");
    private static Icon? CommentPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-pen?f=classic&amp;s=light">Comment Pen</a>
    /// </summary>
    public static Icon CommentPen => CommentPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-pen", "f4ae");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-pen?f=classic&amp;s=light">Comment Pen</a>
    /// </summary>
    public static Icon CommentEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CommentPen;
    private static Icon? CommentPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-plus?f=classic&amp;s=light">Comment Plus</a>
    /// </summary>
    public static Icon CommentPlus => CommentPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-plus", "f4b2");
    private static Icon? CommentQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-question?f=classic&amp;s=light">Comment Question</a>
    /// </summary>
    public static Icon CommentQuestion => CommentQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-question", "e14b");
    private static Icon? CommentQuotef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-quote?f=classic&amp;s=light">Comment Quote</a>
    /// </summary>
    public static Icon CommentQuote => CommentQuotef ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-quote", "e14c");
    private static Icon? CommentSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-slash?f=classic&amp;s=light">Comment Slash</a>
    /// </summary>
    public static Icon CommentSlash => CommentSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-slash", "f4b3");
    private static Icon? CommentSmilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-smile?f=classic&amp;s=light">Comment Smile</a>
    /// </summary>
    public static Icon CommentSmile => CommentSmilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-smile", "f4b4");
    private static Icon? CommentSmsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-sms?f=classic&amp;s=light">Comment Sms</a>
    /// </summary>
    public static Icon CommentSms => CommentSmsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-sms", "f7cd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-sms?f=classic&amp;s=light">Comment Sms</a>
    /// </summary>
    public static Icon Sms => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CommentSms;
    private static Icon? CommentTextf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-text?f=classic&amp;s=light">Comment Text</a>
    /// </summary>
    public static Icon CommentText => CommentTextf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-text", "e14d");
    private static Icon? CommentXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-xmark?f=classic&amp;s=light">Comment Xmark</a>
    /// </summary>
    public static Icon CommentXmark => CommentXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comment-xmark", "f4b5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comment-xmark?f=classic&amp;s=light">Comment Xmark</a>
    /// </summary>
    public static Icon CommentTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CommentXmark;
    private static Icon? Commentsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comments?f=classic&amp;s=light">Comments</a>
    /// </summary>
    public static Icon Comments => Commentsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comments", "f086");
    private static Icon? CommentsDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comments-dollar?f=classic&amp;s=light">Comments Dollar</a>
    /// </summary>
    public static Icon CommentsDollar => CommentsDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comments-dollar", "f653");
    private static Icon? CommentsQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comments-question?f=classic&amp;s=light">Comments Question</a>
    /// </summary>
    public static Icon CommentsQuestion => CommentsQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comments-question", "e14e");
    private static Icon? CommentsQuestionCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/comments-question-check?f=classic&amp;s=light">Comments Question Check</a>
    /// </summary>
    public static Icon CommentsQuestionCheck => CommentsQuestionCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "comments-question-check", "e14f");
    private static Icon? CompactDiscf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compact-disc?f=classic&amp;s=light">Compact Disc</a>
    /// </summary>
    public static Icon CompactDisc => CompactDiscf ??= new Icon(IconFamily.Classic, IconStyle.Light, "compact-disc", "f51f");
    private static Icon? Compassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compass?f=classic&amp;s=light">Compass</a>
    /// </summary>
    public static Icon Compass => Compassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "compass", "f14e");
    private static Icon? CompassDraftingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compass-drafting?f=classic&amp;s=light">Compass Drafting</a>
    /// </summary>
    public static Icon CompassDrafting => CompassDraftingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "compass-drafting", "f568");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compass-drafting?f=classic&amp;s=light">Compass Drafting</a>
    /// </summary>
    public static Icon DraftingCompass => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CompassDrafting;
    private static Icon? CompassSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compass-slash?f=classic&amp;s=light">Compass Slash</a>
    /// </summary>
    public static Icon CompassSlash => CompassSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "compass-slash", "f5e9");
    private static Icon? Compressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compress?f=classic&amp;s=light">Compress</a>
    /// </summary>
    public static Icon Compress => Compressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "compress", "f066");
    private static Icon? CompressWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/compress-wide?f=classic&amp;s=light">Compress Wide</a>
    /// </summary>
    public static Icon CompressWide => CompressWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "compress-wide", "f326");
    private static Icon? Computerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer?f=classic&amp;s=light">Computer</a>
    /// </summary>
    public static Icon Computer => Computerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "computer", "e4e5");
    private static Icon? ComputerClassicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer-classic?f=classic&amp;s=light">Computer Classic</a>
    /// </summary>
    public static Icon ComputerClassic => ComputerClassicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "computer-classic", "f8b1");
    private static Icon? ComputerMousef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer-mouse?f=classic&amp;s=light">Computer Mouse</a>
    /// </summary>
    public static Icon ComputerMouse => ComputerMousef ??= new Icon(IconFamily.Classic, IconStyle.Light, "computer-mouse", "f8cc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer-mouse?f=classic&amp;s=light">Computer Mouse</a>
    /// </summary>
    public static Icon Mouse => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ComputerMouse;
    private static Icon? ComputerMouseScrollwheelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer-mouse-scrollwheel?f=classic&amp;s=light">Computer Mouse Scrollwheel</a>
    /// </summary>
    public static Icon ComputerMouseScrollwheel => ComputerMouseScrollwheelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "computer-mouse-scrollwheel", "f8cd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer-mouse-scrollwheel?f=classic&amp;s=light">Computer Mouse Scrollwheel</a>
    /// </summary>
    public static Icon MouseAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ComputerMouseScrollwheel;
    private static Icon? ComputerSpeakerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/computer-speaker?f=classic&amp;s=light">Computer Speaker</a>
    /// </summary>
    public static Icon ComputerSpeaker => ComputerSpeakerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "computer-speaker", "f8b2");
    private static Icon? ContainerStoragef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/container-storage?f=classic&amp;s=light">Container Storage</a>
    /// </summary>
    public static Icon ContainerStorage => ContainerStoragef ??= new Icon(IconFamily.Classic, IconStyle.Light, "container-storage", "f4b7");
    private static Icon? ConveyorBeltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/conveyor-belt?f=classic&amp;s=light">Conveyor Belt</a>
    /// </summary>
    public static Icon ConveyorBelt => ConveyorBeltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "conveyor-belt", "f46e");
    private static Icon? ConveyorBeltArmf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/conveyor-belt-arm?f=classic&amp;s=light">Conveyor Belt Arm</a>
    /// </summary>
    public static Icon ConveyorBeltArm => ConveyorBeltArmf ??= new Icon(IconFamily.Classic, IconStyle.Light, "conveyor-belt-arm", "e5f8");
    private static Icon? ConveyorBeltBoxesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/conveyor-belt-boxes?f=classic&amp;s=light">Conveyor Belt Boxes</a>
    /// </summary>
    public static Icon ConveyorBeltBoxes => ConveyorBeltBoxesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "conveyor-belt-boxes", "f46f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/conveyor-belt-boxes?f=classic&amp;s=light">Conveyor Belt Boxes</a>
    /// </summary>
    public static Icon ConveyorBeltAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ConveyorBeltBoxes;
    private static Icon? ConveyorBeltEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/conveyor-belt-empty?f=classic&amp;s=light">Conveyor Belt Empty</a>
    /// </summary>
    public static Icon ConveyorBeltEmpty => ConveyorBeltEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "conveyor-belt-empty", "e150");
    private static Icon? Cookief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cookie?f=classic&amp;s=light">Cookie</a>
    /// </summary>
    public static Icon Cookie => Cookief ??= new Icon(IconFamily.Classic, IconStyle.Light, "cookie", "f563");
    private static Icon? CookieBitef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cookie-bite?f=classic&amp;s=light">Cookie Bite</a>
    /// </summary>
    public static Icon CookieBite => CookieBitef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cookie-bite", "f564");
    private static Icon? Copyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/copy?f=classic&amp;s=light">Copy</a>
    /// </summary>
    public static Icon Copy => Copyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "copy", "f0c5");
    private static Icon? Copyrightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/copyright?f=classic&amp;s=light">Copyright</a>
    /// </summary>
    public static Icon Copyright => Copyrightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "copyright", "f1f9");
    private static Icon? Cornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/corn?f=classic&amp;s=light">Corn</a>
    /// </summary>
    public static Icon Corn => Cornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "corn", "f6c7");
    private static Icon? Cornerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/corner?f=classic&amp;s=light">Corner</a>
    /// </summary>
    public static Icon Corner => Cornerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "corner", "e3fe");
    private static Icon? Couchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/couch?f=classic&amp;s=light">Couch</a>
    /// </summary>
    public static Icon Couch => Couchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "couch", "f4b8");
    private static Icon? CourtSportf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/court-sport?f=classic&amp;s=light">Court Sport</a>
    /// </summary>
    public static Icon CourtSport => CourtSportf ??= new Icon(IconFamily.Classic, IconStyle.Light, "court-sport", "e643");
    private static Icon? Cowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cow?f=classic&amp;s=light">Cow</a>
    /// </summary>
    public static Icon Cow => Cowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cow", "f6c8");
    private static Icon? Cowbellf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cowbell?f=classic&amp;s=light">Cowbell</a>
    /// </summary>
    public static Icon Cowbell => Cowbellf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cowbell", "f8b3");
    private static Icon? CowbellCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cowbell-circle-plus?f=classic&amp;s=light">Cowbell Circle Plus</a>
    /// </summary>
    public static Icon CowbellCirclePlus => CowbellCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cowbell-circle-plus", "f8b4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cowbell-circle-plus?f=classic&amp;s=light">Cowbell Circle Plus</a>
    /// </summary>
    public static Icon CowbellMore => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CowbellCirclePlus;
    private static Icon? Crabf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crab?f=classic&amp;s=light">Crab</a>
    /// </summary>
    public static Icon Crab => Crabf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crab", "e3ff");
    private static Icon? CrateApplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crate-apple?f=classic&amp;s=light">Crate Apple</a>
    /// </summary>
    public static Icon CrateApple => CrateApplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "crate-apple", "f6b1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crate-apple?f=classic&amp;s=light">Crate Apple</a>
    /// </summary>
    public static Icon AppleCrate => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CrateApple;
    private static Icon? CrateEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crate-empty?f=classic&amp;s=light">Crate Empty</a>
    /// </summary>
    public static Icon CrateEmpty => CrateEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crate-empty", "e151");
    private static Icon? CreditCardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/credit-card?f=classic&amp;s=light">Credit Card</a>
    /// </summary>
    public static Icon CreditCard => CreditCardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "credit-card", "f09d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/credit-card?f=classic&amp;s=light">Credit Card</a>
    /// </summary>
    public static Icon CreditCardAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CreditCard;
    private static Icon? CreditCardBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/credit-card-blank?f=classic&amp;s=light">Credit Card Blank</a>
    /// </summary>
    public static Icon CreditCardBlank => CreditCardBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "credit-card-blank", "f389");
    private static Icon? CreditCardFrontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/credit-card-front?f=classic&amp;s=light">Credit Card Front</a>
    /// </summary>
    public static Icon CreditCardFront => CreditCardFrontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "credit-card-front", "f38a");
    private static Icon? CricketBatBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cricket-bat-ball?f=classic&amp;s=light">Cricket Bat Ball</a>
    /// </summary>
    public static Icon CricketBatBall => CricketBatBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cricket-bat-ball", "f449");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cricket-bat-ball?f=classic&amp;s=light">Cricket Bat Ball</a>
    /// </summary>
    public static Icon Cricket => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CricketBatBall;
    private static Icon? Croissantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/croissant?f=classic&amp;s=light">Croissant</a>
    /// </summary>
    public static Icon Croissant => Croissantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "croissant", "f7f6");
    private static Icon? Cropf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crop?f=classic&amp;s=light">Crop</a>
    /// </summary>
    public static Icon Crop => Cropf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crop", "f125");
    private static Icon? CropSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crop-simple?f=classic&amp;s=light">Crop Simple</a>
    /// </summary>
    public static Icon CropSimple => CropSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "crop-simple", "f565");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crop-simple?f=classic&amp;s=light">Crop Simple</a>
    /// </summary>
    public static Icon CropAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CropSimple;
    private static Icon? Crossf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cross?f=classic&amp;s=light">Cross</a>
    /// </summary>
    public static Icon Cross => Crossf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cross", "f654");
    private static Icon? Crosshairsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crosshairs?f=classic&amp;s=light">Crosshairs</a>
    /// </summary>
    public static Icon Crosshairs => Crosshairsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crosshairs", "f05b");
    private static Icon? CrosshairsSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crosshairs-simple?f=classic&amp;s=light">Crosshairs Simple</a>
    /// </summary>
    public static Icon CrosshairsSimple => CrosshairsSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "crosshairs-simple", "e59f");
    private static Icon? Crowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crow?f=classic&amp;s=light">Crow</a>
    /// </summary>
    public static Icon Crow => Crowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crow", "f520");
    private static Icon? Crownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crown?f=classic&amp;s=light">Crown</a>
    /// </summary>
    public static Icon Crown => Crownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crown", "f521");
    private static Icon? Crutchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crutch?f=classic&amp;s=light">Crutch</a>
    /// </summary>
    public static Icon Crutch => Crutchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crutch", "f7f7");
    private static Icon? Crutchesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crutches?f=classic&amp;s=light">Crutches</a>
    /// </summary>
    public static Icon Crutches => Crutchesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crutches", "f7f8");
    private static Icon? CruzeiroSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cruzeiro-sign?f=classic&amp;s=light">Cruzeiro Sign</a>
    /// </summary>
    public static Icon CruzeiroSign => CruzeiroSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cruzeiro-sign", "e152");
    private static Icon? CrystalBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/crystal-ball?f=classic&amp;s=light">Crystal Ball</a>
    /// </summary>
    public static Icon CrystalBall => CrystalBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "crystal-ball", "e362");
    private static Icon? Cubef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cube?f=classic&amp;s=light">Cube</a>
    /// </summary>
    public static Icon Cube => Cubef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cube", "f1b2");
    private static Icon? Cubesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cubes?f=classic&amp;s=light">Cubes</a>
    /// </summary>
    public static Icon Cubes => Cubesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cubes", "f1b3");
    private static Icon? CubesStackedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cubes-stacked?f=classic&amp;s=light">Cubes Stacked</a>
    /// </summary>
    public static Icon CubesStacked => CubesStackedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cubes-stacked", "e4e6");
    private static Icon? Cucumberf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cucumber?f=classic&amp;s=light">Cucumber</a>
    /// </summary>
    public static Icon Cucumber => Cucumberf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cucumber", "e401");
    private static Icon? CupStrawf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cup-straw?f=classic&amp;s=light">Cup Straw</a>
    /// </summary>
    public static Icon CupStraw => CupStrawf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cup-straw", "e363");
    private static Icon? CupStrawSwooshf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cup-straw-swoosh?f=classic&amp;s=light">Cup Straw Swoosh</a>
    /// </summary>
    public static Icon CupStrawSwoosh => CupStrawSwooshf ??= new Icon(IconFamily.Classic, IconStyle.Light, "cup-straw-swoosh", "e364");
    private static Icon? CupTogof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cup-togo?f=classic&amp;s=light">Cup Togo</a>
    /// </summary>
    public static Icon CupTogo => CupTogof ??= new Icon(IconFamily.Classic, IconStyle.Light, "cup-togo", "f6c5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cup-togo?f=classic&amp;s=light">Cup Togo</a>
    /// </summary>
    public static Icon CoffeeTogo => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CupTogo;
    private static Icon? Cupcakef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/cupcake?f=classic&amp;s=light">Cupcake</a>
    /// </summary>
    public static Icon Cupcake => Cupcakef ??= new Icon(IconFamily.Classic, IconStyle.Light, "cupcake", "e402");
    private static Icon? CurlingStonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/curling-stone?f=classic&amp;s=light">Curling Stone</a>
    /// </summary>
    public static Icon CurlingStone => CurlingStonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "curling-stone", "f44a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/curling-stone?f=classic&amp;s=light">Curling Stone</a>
    /// </summary>
    public static Icon Curling => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.CurlingStone;
    private static Icon? Custardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/custard?f=classic&amp;s=light">Custard</a>
    /// </summary>
    public static Icon Custard => Custardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "custard", "e403");
    private static Icon? Df;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/d?f=classic&amp;s=light">D</a>
    /// </summary>
    public static Icon D => Df ??= new Icon(IconFamily.Classic, IconStyle.Light, "d", "44");
    private static Icon? Daggerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dagger?f=classic&amp;s=light">Dagger</a>
    /// </summary>
    public static Icon Dagger => Daggerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dagger", "f6cb");
    private static Icon? Dashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dash?f=classic&amp;s=light">Dash</a>
    /// </summary>
    public static Icon Dash => Dashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dash", "e404");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dash?f=classic&amp;s=light">Dash</a>
    /// </summary>
    public static Icon MinusLarge => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Dash;
    private static Icon? Databasef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/database?f=classic&amp;s=light">Database</a>
    /// </summary>
    public static Icon Database => Databasef ??= new Icon(IconFamily.Classic, IconStyle.Light, "database", "f1c0");
    private static Icon? Deerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/deer?f=classic&amp;s=light">Deer</a>
    /// </summary>
    public static Icon Deer => Deerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "deer", "f78e");
    private static Icon? DeerRudolphf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/deer-rudolph?f=classic&amp;s=light">Deer Rudolph</a>
    /// </summary>
    public static Icon DeerRudolph => DeerRudolphf ??= new Icon(IconFamily.Classic, IconStyle.Light, "deer-rudolph", "f78f");
    private static Icon? DeleteLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/delete-left?f=classic&amp;s=light">Delete Left</a>
    /// </summary>
    public static Icon DeleteLeft => DeleteLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "delete-left", "f55a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/delete-left?f=classic&amp;s=light">Delete Left</a>
    /// </summary>
    public static Icon Backspace => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DeleteLeft;
    private static Icon? DeleteRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/delete-right?f=classic&amp;s=light">Delete Right</a>
    /// </summary>
    public static Icon DeleteRight => DeleteRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "delete-right", "e154");
    private static Icon? Democratf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/democrat?f=classic&amp;s=light">Democrat</a>
    /// </summary>
    public static Icon Democrat => Democratf ??= new Icon(IconFamily.Classic, IconStyle.Light, "democrat", "f747");
    private static Icon? Desktopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/desktop?f=classic&amp;s=light">Desktop</a>
    /// </summary>
    public static Icon Desktop => Desktopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "desktop", "f390");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/desktop?f=classic&amp;s=light">Desktop</a>
    /// </summary>
    public static Icon DesktopAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Desktop;
    private static Icon? DesktopArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/desktop-arrow-down?f=classic&amp;s=light">Desktop Arrow Down</a>
    /// </summary>
    public static Icon DesktopArrowDown => DesktopArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "desktop-arrow-down", "e155");
    private static Icon? Dharmachakraf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dharmachakra?f=classic&amp;s=light">Dharmachakra</a>
    /// </summary>
    public static Icon Dharmachakra => Dharmachakraf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dharmachakra", "f655");
    private static Icon? DiagramCellsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-cells?f=classic&amp;s=light">Diagram Cells</a>
    /// </summary>
    public static Icon DiagramCells => DiagramCellsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-cells", "e475");
    private static Icon? DiagramLeanCanvasf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-lean-canvas?f=classic&amp;s=light">Diagram Lean Canvas</a>
    /// </summary>
    public static Icon DiagramLeanCanvas => DiagramLeanCanvasf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-lean-canvas", "e156");
    private static Icon? DiagramNestedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-nested?f=classic&amp;s=light">Diagram Nested</a>
    /// </summary>
    public static Icon DiagramNested => DiagramNestedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-nested", "e157");
    private static Icon? DiagramNextf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-next?f=classic&amp;s=light">Diagram Next</a>
    /// </summary>
    public static Icon DiagramNext => DiagramNextf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-next", "e476");
    private static Icon? DiagramPredecessorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-predecessor?f=classic&amp;s=light">Diagram Predecessor</a>
    /// </summary>
    public static Icon DiagramPredecessor => DiagramPredecessorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-predecessor", "e477");
    private static Icon? DiagramPreviousf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-previous?f=classic&amp;s=light">Diagram Previous</a>
    /// </summary>
    public static Icon DiagramPrevious => DiagramPreviousf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-previous", "e478");
    private static Icon? DiagramProjectf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-project?f=classic&amp;s=light">Diagram Project</a>
    /// </summary>
    public static Icon DiagramProject => DiagramProjectf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-project", "f542");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-project?f=classic&amp;s=light">Diagram Project</a>
    /// </summary>
    public static Icon ProjectDiagram => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DiagramProject;
    private static Icon? DiagramSankeyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-sankey?f=classic&amp;s=light">Diagram Sankey</a>
    /// </summary>
    public static Icon DiagramSankey => DiagramSankeyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-sankey", "e158");
    private static Icon? DiagramSubtaskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-subtask?f=classic&amp;s=light">Diagram Subtask</a>
    /// </summary>
    public static Icon DiagramSubtask => DiagramSubtaskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-subtask", "e479");
    private static Icon? DiagramSuccessorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-successor?f=classic&amp;s=light">Diagram Successor</a>
    /// </summary>
    public static Icon DiagramSuccessor => DiagramSuccessorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-successor", "e47a");
    private static Icon? DiagramVennf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diagram-venn?f=classic&amp;s=light">Diagram Venn</a>
    /// </summary>
    public static Icon DiagramVenn => DiagramVennf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diagram-venn", "e15a");
    private static Icon? Dialf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial?f=classic&amp;s=light">Dial</a>
    /// </summary>
    public static Icon Dial => Dialf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial", "e15b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial?f=classic&amp;s=light">Dial</a>
    /// </summary>
    public static Icon DialMedHigh => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Dial;
    private static Icon? DialHighf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-high?f=classic&amp;s=light">Dial High</a>
    /// </summary>
    public static Icon DialHigh => DialHighf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-high", "e15c");
    private static Icon? DialLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-low?f=classic&amp;s=light">Dial Low</a>
    /// </summary>
    public static Icon DialLow => DialLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-low", "e15d");
    private static Icon? DialMaxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-max?f=classic&amp;s=light">Dial Max</a>
    /// </summary>
    public static Icon DialMax => DialMaxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-max", "e15e");
    private static Icon? DialMedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-med?f=classic&amp;s=light">Dial Med</a>
    /// </summary>
    public static Icon DialMed => DialMedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-med", "e15f");
    private static Icon? DialMedLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-med-low?f=classic&amp;s=light">Dial Med Low</a>
    /// </summary>
    public static Icon DialMedLow => DialMedLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-med-low", "e160");
    private static Icon? DialMinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-min?f=classic&amp;s=light">Dial Min</a>
    /// </summary>
    public static Icon DialMin => DialMinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-min", "e161");
    private static Icon? DialOfff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dial-off?f=classic&amp;s=light">Dial Off</a>
    /// </summary>
    public static Icon DialOff => DialOfff ??= new Icon(IconFamily.Classic, IconStyle.Light, "dial-off", "e162");
    private static Icon? Diamondf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diamond?f=classic&amp;s=light">Diamond</a>
    /// </summary>
    public static Icon Diamond => Diamondf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diamond", "f219");
    private static Icon? DiamondExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diamond-exclamation?f=classic&amp;s=light">Diamond Exclamation</a>
    /// </summary>
    public static Icon DiamondExclamation => DiamondExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diamond-exclamation", "e405");
    private static Icon? DiamondHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diamond-half?f=classic&amp;s=light">Diamond Half</a>
    /// </summary>
    public static Icon DiamondHalf => DiamondHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "diamond-half", "e5b7");
    private static Icon? DiamondHalfStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diamond-half-stroke?f=classic&amp;s=light">Diamond Half Stroke</a>
    /// </summary>
    public static Icon DiamondHalfStroke => DiamondHalfStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "diamond-half-stroke", "e5b8");
    private static Icon? DiamondTurnRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diamond-turn-right?f=classic&amp;s=light">Diamond Turn Right</a>
    /// </summary>
    public static Icon DiamondTurnRight => DiamondTurnRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diamond-turn-right", "f5eb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diamond-turn-right?f=classic&amp;s=light">Diamond Turn Right</a>
    /// </summary>
    public static Icon Directions => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DiamondTurnRight;
    private static Icon? Dicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice?f=classic&amp;s=light">Dice</a>
    /// </summary>
    public static Icon Dice => Dicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice", "f522");
    private static Icon? DiceD10f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-d10?f=classic&amp;s=light">Dice D10</a>
    /// </summary>
    public static Icon DiceD10 => DiceD10f ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-d10", "f6cd");
    private static Icon? DiceD12f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-d12?f=classic&amp;s=light">Dice D12</a>
    /// </summary>
    public static Icon DiceD12 => DiceD12f ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-d12", "f6ce");
    private static Icon? DiceD20f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-d20?f=classic&amp;s=light">Dice D20</a>
    /// </summary>
    public static Icon DiceD20 => DiceD20f ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-d20", "f6cf");
    private static Icon? DiceD4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-d4?f=classic&amp;s=light">Dice D4</a>
    /// </summary>
    public static Icon DiceD4 => DiceD4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-d4", "f6d0");
    private static Icon? DiceD6f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-d6?f=classic&amp;s=light">Dice D6</a>
    /// </summary>
    public static Icon DiceD6 => DiceD6f ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-d6", "f6d1");
    private static Icon? DiceD8f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-d8?f=classic&amp;s=light">Dice D8</a>
    /// </summary>
    public static Icon DiceD8 => DiceD8f ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-d8", "f6d2");
    private static Icon? DiceFivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-five?f=classic&amp;s=light">Dice Five</a>
    /// </summary>
    public static Icon DiceFive => DiceFivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-five", "f523");
    private static Icon? DiceFourf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-four?f=classic&amp;s=light">Dice Four</a>
    /// </summary>
    public static Icon DiceFour => DiceFourf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-four", "f524");
    private static Icon? DiceOnef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-one?f=classic&amp;s=light">Dice One</a>
    /// </summary>
    public static Icon DiceOne => DiceOnef ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-one", "f525");
    private static Icon? DiceSixf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-six?f=classic&amp;s=light">Dice Six</a>
    /// </summary>
    public static Icon DiceSix => DiceSixf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-six", "f526");
    private static Icon? DiceThreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-three?f=classic&amp;s=light">Dice Three</a>
    /// </summary>
    public static Icon DiceThree => DiceThreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-three", "f527");
    private static Icon? DiceTwof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dice-two?f=classic&amp;s=light">Dice Two</a>
    /// </summary>
    public static Icon DiceTwo => DiceTwof ??= new Icon(IconFamily.Classic, IconStyle.Light, "dice-two", "f528");
    private static Icon? Dinosaurf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dinosaur?f=classic&amp;s=light">Dinosaur</a>
    /// </summary>
    public static Icon Dinosaur => Dinosaurf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dinosaur", "e5fe");
    private static Icon? Diplomaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diploma?f=classic&amp;s=light">Diploma</a>
    /// </summary>
    public static Icon Diploma => Diplomaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "diploma", "f5ea");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/diploma?f=classic&amp;s=light">Diploma</a>
    /// </summary>
    public static Icon ScrollRibbon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Diploma;
    private static Icon? DiscDrivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/disc-drive?f=classic&amp;s=light">Disc Drive</a>
    /// </summary>
    public static Icon DiscDrive => DiscDrivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "disc-drive", "f8b5");
    private static Icon? Diseasef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/disease?f=classic&amp;s=light">Disease</a>
    /// </summary>
    public static Icon Disease => Diseasef ??= new Icon(IconFamily.Classic, IconStyle.Light, "disease", "f7fa");
    private static Icon? Displayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display?f=classic&amp;s=light">Display</a>
    /// </summary>
    public static Icon Display => Displayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display", "e163");
    private static Icon? DisplayArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-arrow-down?f=classic&amp;s=light">Display Arrow Down</a>
    /// </summary>
    public static Icon DisplayArrowDown => DisplayArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-arrow-down", "e164");
    private static Icon? DisplayChartUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-chart-up?f=classic&amp;s=light">Display Chart Up</a>
    /// </summary>
    public static Icon DisplayChartUp => DisplayChartUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-chart-up", "e5e3");
    private static Icon? DisplayChartUpCircleCurrencyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-chart-up-circle-currency?f=classic&amp;s=light">Display Chart Up Circle Currency</a>
    /// </summary>
    public static Icon DisplayChartUpCircleCurrency => DisplayChartUpCircleCurrencyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-chart-up-circle-currency", "e5e5");
    private static Icon? DisplayChartUpCircleDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-chart-up-circle-dollar?f=classic&amp;s=light">Display Chart Up Circle Dollar</a>
    /// </summary>
    public static Icon DisplayChartUpCircleDollar => DisplayChartUpCircleDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-chart-up-circle-dollar", "e5e6");
    private static Icon? DisplayCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-code?f=classic&amp;s=light">Display Code</a>
    /// </summary>
    public static Icon DisplayCode => DisplayCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-code", "e165");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-code?f=classic&amp;s=light">Display Code</a>
    /// </summary>
    public static Icon DesktopCode => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DisplayCode;
    private static Icon? DisplayMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-medical?f=classic&amp;s=light">Display Medical</a>
    /// </summary>
    public static Icon DisplayMedical => DisplayMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-medical", "e166");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-medical?f=classic&amp;s=light">Display Medical</a>
    /// </summary>
    public static Icon DesktopMedical => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DisplayMedical;
    private static Icon? DisplaySlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-slash?f=classic&amp;s=light">Display Slash</a>
    /// </summary>
    public static Icon DisplaySlash => DisplaySlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "display-slash", "e2fa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/display-slash?f=classic&amp;s=light">Display Slash</a>
    /// </summary>
    public static Icon DesktopSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DisplaySlash;
    private static Icon? DistributeSpacingHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/distribute-spacing-horizontal?f=classic&amp;s=light">Distribute Spacing Horizontal</a>
    /// </summary>
    public static Icon DistributeSpacingHorizontal => DistributeSpacingHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "distribute-spacing-horizontal", "e365");
    private static Icon? DistributeSpacingVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/distribute-spacing-vertical?f=classic&amp;s=light">Distribute Spacing Vertical</a>
    /// </summary>
    public static Icon DistributeSpacingVertical => DistributeSpacingVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "distribute-spacing-vertical", "e366");
    private static Icon? Dittof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ditto?f=classic&amp;s=light">Ditto</a>
    /// </summary>
    public static Icon Ditto => Dittof ??= new Icon(IconFamily.Classic, IconStyle.Light, "ditto", "22");
    private static Icon? Dividef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/divide?f=classic&amp;s=light">Divide</a>
    /// </summary>
    public static Icon Divide => Dividef ??= new Icon(IconFamily.Classic, IconStyle.Light, "divide", "f529");
    private static Icon? Dnaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dna?f=classic&amp;s=light">Dna</a>
    /// </summary>
    public static Icon Dna => Dnaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dna", "f471");
    private static Icon? DoNotEnterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/do-not-enter?f=classic&amp;s=light">Do Not Enter</a>
    /// </summary>
    public static Icon DoNotEnter => DoNotEnterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "do-not-enter", "f5ec");
    private static Icon? Dogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dog?f=classic&amp;s=light">Dog</a>
    /// </summary>
    public static Icon Dog => Dogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dog", "f6d3");
    private static Icon? DogLeashedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dog-leashed?f=classic&amp;s=light">Dog Leashed</a>
    /// </summary>
    public static Icon DogLeashed => DogLeashedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dog-leashed", "f6d4");
    private static Icon? DollarSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dollar-sign?f=classic&amp;s=light">Dollar Sign</a>
    /// </summary>
    public static Icon DollarSign => DollarSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dollar-sign", "24");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dollar-sign?f=classic&amp;s=light">Dollar Sign</a>
    /// </summary>
    public static Icon Dollar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DollarSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dollar-sign?f=classic&amp;s=light">Dollar Sign</a>
    /// </summary>
    public static Icon Usd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DollarSign;
    private static Icon? Dollyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dolly?f=classic&amp;s=light">Dolly</a>
    /// </summary>
    public static Icon Dolly => Dollyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dolly", "f472");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dolly?f=classic&amp;s=light">Dolly</a>
    /// </summary>
    public static Icon DollyBox => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Dolly;
    private static Icon? DollyEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dolly-empty?f=classic&amp;s=light">Dolly Empty</a>
    /// </summary>
    public static Icon DollyEmpty => DollyEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dolly-empty", "f473");
    private static Icon? Dolphinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dolphin?f=classic&amp;s=light">Dolphin</a>
    /// </summary>
    public static Icon Dolphin => Dolphinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dolphin", "e168");
    private static Icon? DongSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dong-sign?f=classic&amp;s=light">Dong Sign</a>
    /// </summary>
    public static Icon DongSign => DongSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dong-sign", "e169");
    private static Icon? Donutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/donut?f=classic&amp;s=light">Donut</a>
    /// </summary>
    public static Icon Donut => Donutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "donut", "e406");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/donut?f=classic&amp;s=light">Donut</a>
    /// </summary>
    public static Icon Doughnut => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Donut;
    private static Icon? DoorClosedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/door-closed?f=classic&amp;s=light">Door Closed</a>
    /// </summary>
    public static Icon DoorClosed => DoorClosedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "door-closed", "f52a");
    private static Icon? DoorOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/door-open?f=classic&amp;s=light">Door Open</a>
    /// </summary>
    public static Icon DoorOpen => DoorOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "door-open", "f52b");
    private static Icon? Dovef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dove?f=classic&amp;s=light">Dove</a>
    /// </summary>
    public static Icon Dove => Dovef ??= new Icon(IconFamily.Classic, IconStyle.Light, "dove", "f4ba");
    private static Icon? Downf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down?f=classic&amp;s=light">Down</a>
    /// </summary>
    public static Icon Down => Downf ??= new Icon(IconFamily.Classic, IconStyle.Light, "down", "f354");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down?f=classic&amp;s=light">Down</a>
    /// </summary>
    public static Icon ArrowAltDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Down;
    private static Icon? DownFromDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-from-dotted-line?f=classic&amp;s=light">Down From Dotted Line</a>
    /// </summary>
    public static Icon DownFromDottedLine => DownFromDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-from-dotted-line", "e407");
    private static Icon? DownFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-from-line?f=classic&amp;s=light">Down From Line</a>
    /// </summary>
    public static Icon DownFromLine => DownFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-from-line", "f349");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-from-line?f=classic&amp;s=light">Down From Line</a>
    /// </summary>
    public static Icon ArrowAltFromTop => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DownFromLine;
    private static Icon? DownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-left?f=classic&amp;s=light">Down Left</a>
    /// </summary>
    public static Icon DownLeft => DownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-left", "e16a");
    private static Icon? DownLeftAndUpRightToCenterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-left-and-up-right-to-center?f=classic&amp;s=light">Down Left And Up Right To Center</a>
    /// </summary>
    public static Icon DownLeftAndUpRightToCenter => DownLeftAndUpRightToCenterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-left-and-up-right-to-center", "f422");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-left-and-up-right-to-center?f=classic&amp;s=light">Down Left And Up Right To Center</a>
    /// </summary>
    public static Icon CompressAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DownLeftAndUpRightToCenter;
    private static Icon? DownLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-long?f=classic&amp;s=light">Down Long</a>
    /// </summary>
    public static Icon DownLong => DownLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-long", "f309");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-long?f=classic&amp;s=light">Down Long</a>
    /// </summary>
    public static Icon LongArrowAltDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DownLong;
    private static Icon? DownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-right?f=classic&amp;s=light">Down Right</a>
    /// </summary>
    public static Icon DownRight => DownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-right", "e16b");
    private static Icon? DownToBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-to-bracket?f=classic&amp;s=light">Down To Bracket</a>
    /// </summary>
    public static Icon DownToBracket => DownToBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-to-bracket", "e4e7");
    private static Icon? DownToDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-to-dotted-line?f=classic&amp;s=light">Down To Dotted Line</a>
    /// </summary>
    public static Icon DownToDottedLine => DownToDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-to-dotted-line", "e408");
    private static Icon? DownToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-to-line?f=classic&amp;s=light">Down To Line</a>
    /// </summary>
    public static Icon DownToLine => DownToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "down-to-line", "f34a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/down-to-line?f=classic&amp;s=light">Down To Line</a>
    /// </summary>
    public static Icon ArrowAltToBottom => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DownToLine;
    private static Icon? Downloadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/download?f=classic&amp;s=light">Download</a>
    /// </summary>
    public static Icon Download => Downloadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "download", "f019");
    private static Icon? Dragonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dragon?f=classic&amp;s=light">Dragon</a>
    /// </summary>
    public static Icon Dragon => Dragonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dragon", "f6d5");
    private static Icon? DrawCirclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/draw-circle?f=classic&amp;s=light">Draw Circle</a>
    /// </summary>
    public static Icon DrawCircle => DrawCirclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "draw-circle", "f5ed");
    private static Icon? DrawPolygonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/draw-polygon?f=classic&amp;s=light">Draw Polygon</a>
    /// </summary>
    public static Icon DrawPolygon => DrawPolygonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "draw-polygon", "f5ee");
    private static Icon? DrawSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/draw-square?f=classic&amp;s=light">Draw Square</a>
    /// </summary>
    public static Icon DrawSquare => DrawSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "draw-square", "f5ef");
    private static Icon? Dreidelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dreidel?f=classic&amp;s=light">Dreidel</a>
    /// </summary>
    public static Icon Dreidel => Dreidelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dreidel", "f792");
    private static Icon? Dronef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drone?f=classic&amp;s=light">Drone</a>
    /// </summary>
    public static Icon Drone => Dronef ??= new Icon(IconFamily.Classic, IconStyle.Light, "drone", "f85f");
    private static Icon? DroneFrontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drone-front?f=classic&amp;s=light">Drone Front</a>
    /// </summary>
    public static Icon DroneFront => DroneFrontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "drone-front", "f860");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drone-front?f=classic&amp;s=light">Drone Front</a>
    /// </summary>
    public static Icon DroneAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DroneFront;
    private static Icon? Dropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet?f=classic&amp;s=light">Droplet</a>
    /// </summary>
    public static Icon Droplet => Dropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "droplet", "f043");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet?f=classic&amp;s=light">Droplet</a>
    /// </summary>
    public static Icon Tint => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Droplet;
    private static Icon? DropletDegreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet-degree?f=classic&amp;s=light">Droplet Degree</a>
    /// </summary>
    public static Icon DropletDegree => DropletDegreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "droplet-degree", "f748");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet-degree?f=classic&amp;s=light">Droplet Degree</a>
    /// </summary>
    public static Icon Dewpoint => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DropletDegree;
    private static Icon? DropletPercentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet-percent?f=classic&amp;s=light">Droplet Percent</a>
    /// </summary>
    public static Icon DropletPercent => DropletPercentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "droplet-percent", "f750");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet-percent?f=classic&amp;s=light">Droplet Percent</a>
    /// </summary>
    public static Icon Humidity => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DropletPercent;
    private static Icon? DropletSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet-slash?f=classic&amp;s=light">Droplet Slash</a>
    /// </summary>
    public static Icon DropletSlash => DropletSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "droplet-slash", "f5c7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/droplet-slash?f=classic&amp;s=light">Droplet Slash</a>
    /// </summary>
    public static Icon TintSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DropletSlash;
    private static Icon? Drumf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drum?f=classic&amp;s=light">Drum</a>
    /// </summary>
    public static Icon Drum => Drumf ??= new Icon(IconFamily.Classic, IconStyle.Light, "drum", "f569");
    private static Icon? DrumSteelpanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drum-steelpan?f=classic&amp;s=light">Drum Steelpan</a>
    /// </summary>
    public static Icon DrumSteelpan => DrumSteelpanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "drum-steelpan", "f56a");
    private static Icon? Drumstickf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drumstick?f=classic&amp;s=light">Drumstick</a>
    /// </summary>
    public static Icon Drumstick => Drumstickf ??= new Icon(IconFamily.Classic, IconStyle.Light, "drumstick", "f6d6");
    private static Icon? DrumstickBitef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/drumstick-bite?f=classic&amp;s=light">Drumstick Bite</a>
    /// </summary>
    public static Icon DrumstickBite => DrumstickBitef ??= new Icon(IconFamily.Classic, IconStyle.Light, "drumstick-bite", "f6d7");
    private static Icon? Dryerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dryer?f=classic&amp;s=light">Dryer</a>
    /// </summary>
    public static Icon Dryer => Dryerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dryer", "f861");
    private static Icon? DryerHeatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dryer-heat?f=classic&amp;s=light">Dryer Heat</a>
    /// </summary>
    public static Icon DryerHeat => DryerHeatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dryer-heat", "f862");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dryer-heat?f=classic&amp;s=light">Dryer Heat</a>
    /// </summary>
    public static Icon DryerAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.DryerHeat;
    private static Icon? Duckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/duck?f=classic&amp;s=light">Duck</a>
    /// </summary>
    public static Icon Duck => Duckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "duck", "f6d8");
    private static Icon? Dumbbellf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dumbbell?f=classic&amp;s=light">Dumbbell</a>
    /// </summary>
    public static Icon Dumbbell => Dumbbellf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dumbbell", "f44b");
    private static Icon? Dumpsterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dumpster?f=classic&amp;s=light">Dumpster</a>
    /// </summary>
    public static Icon Dumpster => Dumpsterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dumpster", "f793");
    private static Icon? DumpsterFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dumpster-fire?f=classic&amp;s=light">Dumpster Fire</a>
    /// </summary>
    public static Icon DumpsterFire => DumpsterFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "dumpster-fire", "f794");
    private static Icon? Dungeonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/dungeon?f=classic&amp;s=light">Dungeon</a>
    /// </summary>
    public static Icon Dungeon => Dungeonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "dungeon", "f6d9");
    private static Icon? Ef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/e?f=classic&amp;s=light">E</a>
    /// </summary>
    public static Icon E => Ef ??= new Icon(IconFamily.Classic, IconStyle.Light, "e", "45");
    private static Icon? Earf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear?f=classic&amp;s=light">Ear</a>
    /// </summary>
    public static Icon Ear => Earf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ear", "f5f0");
    private static Icon? EarDeaff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-deaf?f=classic&amp;s=light">Ear Deaf</a>
    /// </summary>
    public static Icon EarDeaf => EarDeaff ??= new Icon(IconFamily.Classic, IconStyle.Light, "ear-deaf", "f2a4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-deaf?f=classic&amp;s=light">Ear Deaf</a>
    /// </summary>
    public static Icon Deaf => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarDeaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-deaf?f=classic&amp;s=light">Ear Deaf</a>
    /// </summary>
    public static Icon Deafness => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarDeaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-deaf?f=classic&amp;s=light">Ear Deaf</a>
    /// </summary>
    public static Icon HardOfHearing => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarDeaf;
    private static Icon? EarListenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-listen?f=classic&amp;s=light">Ear Listen</a>
    /// </summary>
    public static Icon EarListen => EarListenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ear-listen", "f2a2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-listen?f=classic&amp;s=light">Ear Listen</a>
    /// </summary>
    public static Icon AssistiveListeningSystems => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarListen;
    private static Icon? EarMuffsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ear-muffs?f=classic&amp;s=light">Ear Muffs</a>
    /// </summary>
    public static Icon EarMuffs => EarMuffsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ear-muffs", "f795");
    private static Icon? EarthAfricaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-africa?f=classic&amp;s=light">Earth Africa</a>
    /// </summary>
    public static Icon EarthAfrica => EarthAfricaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "earth-africa", "f57c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-africa?f=classic&amp;s=light">Earth Africa</a>
    /// </summary>
    public static Icon GlobeAfrica => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthAfrica;
    private static Icon? EarthAmericasf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-americas?f=classic&amp;s=light">Earth Americas</a>
    /// </summary>
    public static Icon EarthAmericas => EarthAmericasf ??= new Icon(IconFamily.Classic, IconStyle.Light, "earth-americas", "f57d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-americas?f=classic&amp;s=light">Earth Americas</a>
    /// </summary>
    public static Icon Earth => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthAmericas;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-americas?f=classic&amp;s=light">Earth Americas</a>
    /// </summary>
    public static Icon EarthAmerica => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthAmericas;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-americas?f=classic&amp;s=light">Earth Americas</a>
    /// </summary>
    public static Icon GlobeAmericas => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthAmericas;
    private static Icon? EarthAsiaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-asia?f=classic&amp;s=light">Earth Asia</a>
    /// </summary>
    public static Icon EarthAsia => EarthAsiaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "earth-asia", "f57e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-asia?f=classic&amp;s=light">Earth Asia</a>
    /// </summary>
    public static Icon GlobeAsia => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthAsia;
    private static Icon? EarthEuropef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-europe?f=classic&amp;s=light">Earth Europe</a>
    /// </summary>
    public static Icon EarthEurope => EarthEuropef ??= new Icon(IconFamily.Classic, IconStyle.Light, "earth-europe", "f7a2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-europe?f=classic&amp;s=light">Earth Europe</a>
    /// </summary>
    public static Icon GlobeEurope => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthEurope;
    private static Icon? EarthOceaniaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-oceania?f=classic&amp;s=light">Earth Oceania</a>
    /// </summary>
    public static Icon EarthOceania => EarthOceaniaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "earth-oceania", "e47b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/earth-oceania?f=classic&amp;s=light">Earth Oceania</a>
    /// </summary>
    public static Icon GlobeOceania => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EarthOceania;
    private static Icon? Eclipsef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eclipse?f=classic&amp;s=light">Eclipse</a>
    /// </summary>
    public static Icon Eclipse => Eclipsef ??= new Icon(IconFamily.Classic, IconStyle.Light, "eclipse", "f749");
    private static Icon? Eggf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/egg?f=classic&amp;s=light">Egg</a>
    /// </summary>
    public static Icon Egg => Eggf ??= new Icon(IconFamily.Classic, IconStyle.Light, "egg", "f7fb");
    private static Icon? EggFriedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/egg-fried?f=classic&amp;s=light">Egg Fried</a>
    /// </summary>
    public static Icon EggFried => EggFriedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "egg-fried", "f7fc");
    private static Icon? Eggplantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eggplant?f=classic&amp;s=light">Eggplant</a>
    /// </summary>
    public static Icon Eggplant => Eggplantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eggplant", "e16c");
    private static Icon? Ejectf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eject?f=classic&amp;s=light">Eject</a>
    /// </summary>
    public static Icon Eject => Ejectf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eject", "f052");
    private static Icon? Elephantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/elephant?f=classic&amp;s=light">Elephant</a>
    /// </summary>
    public static Icon Elephant => Elephantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "elephant", "f6da");
    private static Icon? Elevatorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/elevator?f=classic&amp;s=light">Elevator</a>
    /// </summary>
    public static Icon Elevator => Elevatorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "elevator", "e16d");
    private static Icon? Ellipsisf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis?f=classic&amp;s=light">Ellipsis</a>
    /// </summary>
    public static Icon Ellipsis => Ellipsisf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ellipsis", "f141");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis?f=classic&amp;s=light">Ellipsis</a>
    /// </summary>
    public static Icon EllipsisH => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Ellipsis;
    private static Icon? EllipsisStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis-stroke?f=classic&amp;s=light">Ellipsis Stroke</a>
    /// </summary>
    public static Icon EllipsisStroke => EllipsisStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "ellipsis-stroke", "f39b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis-stroke?f=classic&amp;s=light">Ellipsis Stroke</a>
    /// </summary>
    public static Icon EllipsisHAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EllipsisStroke;
    private static Icon? EllipsisStrokeVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis-stroke-vertical?f=classic&amp;s=light">Ellipsis Stroke Vertical</a>
    /// </summary>
    public static Icon EllipsisStrokeVertical => EllipsisStrokeVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ellipsis-stroke-vertical", "f39c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis-stroke-vertical?f=classic&amp;s=light">Ellipsis Stroke Vertical</a>
    /// </summary>
    public static Icon EllipsisVAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EllipsisStrokeVertical;
    private static Icon? EllipsisVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis-vertical?f=classic&amp;s=light">Ellipsis Vertical</a>
    /// </summary>
    public static Icon EllipsisVertical => EllipsisVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ellipsis-vertical", "f142");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ellipsis-vertical?f=classic&amp;s=light">Ellipsis Vertical</a>
    /// </summary>
    public static Icon EllipsisV => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EllipsisVertical;
    private static Icon? EmptySetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/empty-set?f=classic&amp;s=light">Empty Set</a>
    /// </summary>
    public static Icon EmptySet => EmptySetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "empty-set", "f656");
    private static Icon? Enginef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/engine?f=classic&amp;s=light">Engine</a>
    /// </summary>
    public static Icon Engine => Enginef ??= new Icon(IconFamily.Classic, IconStyle.Light, "engine", "e16e");
    private static Icon? EngineWarningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/engine-warning?f=classic&amp;s=light">Engine Warning</a>
    /// </summary>
    public static Icon EngineWarning => EngineWarningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "engine-warning", "f5f2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/engine-warning?f=classic&amp;s=light">Engine Warning</a>
    /// </summary>
    public static Icon EngineExclamation => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EngineWarning;
    private static Icon? Envelopef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope?f=classic&amp;s=light">Envelope</a>
    /// </summary>
    public static Icon Envelope => Envelopef ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelope", "f0e0");
    private static Icon? EnvelopeCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope-circle-check?f=classic&amp;s=light">Envelope Circle Check</a>
    /// </summary>
    public static Icon EnvelopeCircleCheck => EnvelopeCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelope-circle-check", "e4e8");
    private static Icon? EnvelopeDotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope-dot?f=classic&amp;s=light">Envelope Dot</a>
    /// </summary>
    public static Icon EnvelopeDot => EnvelopeDotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelope-dot", "e16f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope-dot?f=classic&amp;s=light">Envelope Dot</a>
    /// </summary>
    public static Icon EnvelopeBadge => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EnvelopeDot;
    private static Icon? EnvelopeOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope-open?f=classic&amp;s=light">Envelope Open</a>
    /// </summary>
    public static Icon EnvelopeOpen => EnvelopeOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelope-open", "f2b6");
    private static Icon? EnvelopeOpenDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope-open-dollar?f=classic&amp;s=light">Envelope Open Dollar</a>
    /// </summary>
    public static Icon EnvelopeOpenDollar => EnvelopeOpenDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelope-open-dollar", "f657");
    private static Icon? EnvelopeOpenTextf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelope-open-text?f=classic&amp;s=light">Envelope Open Text</a>
    /// </summary>
    public static Icon EnvelopeOpenText => EnvelopeOpenTextf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelope-open-text", "f658");
    private static Icon? Envelopesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelopes?f=classic&amp;s=light">Envelopes</a>
    /// </summary>
    public static Icon Envelopes => Envelopesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelopes", "e170");
    private static Icon? EnvelopesBulkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelopes-bulk?f=classic&amp;s=light">Envelopes Bulk</a>
    /// </summary>
    public static Icon EnvelopesBulk => EnvelopesBulkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "envelopes-bulk", "f674");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/envelopes-bulk?f=classic&amp;s=light">Envelopes Bulk</a>
    /// </summary>
    public static Icon MailBulk => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EnvelopesBulk;
    private static Icon? Equalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/equals?f=classic&amp;s=light">Equals</a>
    /// </summary>
    public static Icon Equal => Equalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "equals", "3d");
    private static Icon? Eraserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eraser?f=classic&amp;s=light">Eraser</a>
    /// </summary>
    public static Icon Eraser => Eraserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eraser", "f12d");
    private static Icon? Escalatorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/escalator?f=classic&amp;s=light">Escalator</a>
    /// </summary>
    public static Icon Escalator => Escalatorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "escalator", "e171");
    private static Icon? Ethernetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ethernet?f=classic&amp;s=light">Ethernet</a>
    /// </summary>
    public static Icon Ethernet => Ethernetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ethernet", "f796");
    private static Icon? EuroSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/euro-sign?f=classic&amp;s=light">Euro Sign</a>
    /// </summary>
    public static Icon EuroSign => EuroSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "euro-sign", "f153");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/euro-sign?f=classic&amp;s=light">Euro Sign</a>
    /// </summary>
    public static Icon Eur => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EuroSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/euro-sign?f=classic&amp;s=light">Euro Sign</a>
    /// </summary>
    public static Icon Euro => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EuroSign;
    private static Icon? Excavatorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/excavator?f=classic&amp;s=light">Excavator</a>
    /// </summary>
    public static Icon Excavator => Excavatorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "excavator", "e656");
    private static Icon? Exclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/exclamation?f=classic&amp;s=light">Exclamation</a>
    /// </summary>
    public static Icon Exclamation => Exclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "exclamation", "21");
    private static Icon? Expandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/expand?f=classic&amp;s=light">Expand</a>
    /// </summary>
    public static Icon Expand => Expandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "expand", "f065");
    private static Icon? ExpandWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/expand-wide?f=classic&amp;s=light">Expand Wide</a>
    /// </summary>
    public static Icon ExpandWide => ExpandWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "expand-wide", "f320");
    private static Icon? Explosionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/explosion?f=classic&amp;s=light">Explosion</a>
    /// </summary>
    public static Icon Explosion => Explosionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "explosion", "e4e9");
    private static Icon? Eyef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye?f=classic&amp;s=light">Eye</a>
    /// </summary>
    public static Icon Eye => Eyef ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye", "f06e");
    private static Icon? EyeDropperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-dropper?f=classic&amp;s=light">Eye Dropper</a>
    /// </summary>
    public static Icon EyeDropper => EyeDropperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye-dropper", "f1fb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-dropper?f=classic&amp;s=light">Eye Dropper</a>
    /// </summary>
    public static Icon EyeDropperEmpty => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EyeDropper;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-dropper?f=classic&amp;s=light">Eye Dropper</a>
    /// </summary>
    public static Icon Eyedropper => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EyeDropper;
    private static Icon? EyeDropperFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-dropper-full?f=classic&amp;s=light">Eye Dropper Full</a>
    /// </summary>
    public static Icon EyeDropperFull => EyeDropperFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye-dropper-full", "e172");
    private static Icon? EyeDropperHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-dropper-half?f=classic&amp;s=light">Eye Dropper Half</a>
    /// </summary>
    public static Icon EyeDropperHalf => EyeDropperHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye-dropper-half", "e173");
    private static Icon? EyeEvilf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-evil?f=classic&amp;s=light">Eye Evil</a>
    /// </summary>
    public static Icon EyeEvil => EyeEvilf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye-evil", "f6db");
    private static Icon? EyeLowVisionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-low-vision?f=classic&amp;s=light">Eye Low Vision</a>
    /// </summary>
    public static Icon EyeLowVision => EyeLowVisionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye-low-vision", "f2a8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-low-vision?f=classic&amp;s=light">Eye Low Vision</a>
    /// </summary>
    public static Icon LowVision => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.EyeLowVision;
    private static Icon? EyeSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eye-slash?f=classic&amp;s=light">Eye Slash</a>
    /// </summary>
    public static Icon EyeSlash => EyeSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eye-slash", "f070");
    private static Icon? Eyesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/eyes?f=classic&amp;s=light">Eyes</a>
    /// </summary>
    public static Icon Eyes => Eyesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "eyes", "e367");
    private static Icon? Ff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/f?f=classic&amp;s=light">F</a>
    /// </summary>
    public static Icon F => Ff ??= new Icon(IconFamily.Classic, IconStyle.Light, "f", "46");
    private static Icon? FaceAngryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-angry?f=classic&amp;s=light">Face Angry</a>
    /// </summary>
    public static Icon FaceAngry => FaceAngryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-angry", "f556");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-angry?f=classic&amp;s=light">Face Angry</a>
    /// </summary>
    public static Icon Angry => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceAngry;
    private static Icon? FaceAngryHornsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-angry-horns?f=classic&amp;s=light">Face Angry Horns</a>
    /// </summary>
    public static Icon FaceAngryHorns => FaceAngryHornsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-angry-horns", "e368");
    private static Icon? FaceAnguishedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-anguished?f=classic&amp;s=light">Face Anguished</a>
    /// </summary>
    public static Icon FaceAnguished => FaceAnguishedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-anguished", "e369");
    private static Icon? FaceAnxiousSweatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-anxious-sweat?f=classic&amp;s=light">Face Anxious Sweat</a>
    /// </summary>
    public static Icon FaceAnxiousSweat => FaceAnxiousSweatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-anxious-sweat", "e36a");
    private static Icon? FaceAstonishedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-astonished?f=classic&amp;s=light">Face Astonished</a>
    /// </summary>
    public static Icon FaceAstonished => FaceAstonishedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-astonished", "e36b");
    private static Icon? FaceAwesomef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-awesome?f=classic&amp;s=light">Face Awesome</a>
    /// </summary>
    public static Icon FaceAwesome => FaceAwesomef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-awesome", "e409");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-awesome?f=classic&amp;s=light">Face Awesome</a>
    /// </summary>
    public static Icon GaveDandy => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceAwesome;
    private static Icon? FaceBeamHandOverMouthf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-beam-hand-over-mouth?f=classic&amp;s=light">Face Beam Hand Over Mouth</a>
    /// </summary>
    public static Icon FaceBeamHandOverMouth => FaceBeamHandOverMouthf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-beam-hand-over-mouth", "e47c");
    private static Icon? FaceCloudsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-clouds?f=classic&amp;s=light">Face Clouds</a>
    /// </summary>
    public static Icon FaceClouds => FaceCloudsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-clouds", "e47d");
    private static Icon? FaceConfoundedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-confounded?f=classic&amp;s=light">Face Confounded</a>
    /// </summary>
    public static Icon FaceConfounded => FaceConfoundedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-confounded", "e36c");
    private static Icon? FaceConfusedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-confused?f=classic&amp;s=light">Face Confused</a>
    /// </summary>
    public static Icon FaceConfused => FaceConfusedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-confused", "e36d");
    private static Icon? FaceCowboyHatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-cowboy-hat?f=classic&amp;s=light">Face Cowboy Hat</a>
    /// </summary>
    public static Icon FaceCowboyHat => FaceCowboyHatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-cowboy-hat", "e36e");
    private static Icon? FaceDiagonalMouthf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-diagonal-mouth?f=classic&amp;s=light">Face Diagonal Mouth</a>
    /// </summary>
    public static Icon FaceDiagonalMouth => FaceDiagonalMouthf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-diagonal-mouth", "e47e");
    private static Icon? FaceDisappointedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-disappointed?f=classic&amp;s=light">Face Disappointed</a>
    /// </summary>
    public static Icon FaceDisappointed => FaceDisappointedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-disappointed", "e36f");
    private static Icon? FaceDisguisef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-disguise?f=classic&amp;s=light">Face Disguise</a>
    /// </summary>
    public static Icon FaceDisguise => FaceDisguisef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-disguise", "e370");
    private static Icon? FaceDizzyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-dizzy?f=classic&amp;s=light">Face Dizzy</a>
    /// </summary>
    public static Icon FaceDizzy => FaceDizzyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-dizzy", "f567");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-dizzy?f=classic&amp;s=light">Face Dizzy</a>
    /// </summary>
    public static Icon Dizzy => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceDizzy;
    private static Icon? FaceDottedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-dotted?f=classic&amp;s=light">Face Dotted</a>
    /// </summary>
    public static Icon FaceDotted => FaceDottedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-dotted", "e47f");
    private static Icon? FaceDowncastSweatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-downcast-sweat?f=classic&amp;s=light">Face Downcast Sweat</a>
    /// </summary>
    public static Icon FaceDowncastSweat => FaceDowncastSweatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-downcast-sweat", "e371");
    private static Icon? FaceDroolingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-drooling?f=classic&amp;s=light">Face Drooling</a>
    /// </summary>
    public static Icon FaceDrooling => FaceDroolingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-drooling", "e372");
    private static Icon? FaceExhalingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-exhaling?f=classic&amp;s=light">Face Exhaling</a>
    /// </summary>
    public static Icon FaceExhaling => FaceExhalingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-exhaling", "e480");
    private static Icon? FaceExplodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-explode?f=classic&amp;s=light">Face Explode</a>
    /// </summary>
    public static Icon FaceExplode => FaceExplodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-explode", "e2fe");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-explode?f=classic&amp;s=light">Face Explode</a>
    /// </summary>
    public static Icon ExplodingHead => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceExplode;
    private static Icon? FaceExpressionlessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-expressionless?f=classic&amp;s=light">Face Expressionless</a>
    /// </summary>
    public static Icon FaceExpressionless => FaceExpressionlessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-expressionless", "e373");
    private static Icon? FaceEyesXmarksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-eyes-xmarks?f=classic&amp;s=light">Face Eyes Xmarks</a>
    /// </summary>
    public static Icon FaceEyesXmarks => FaceEyesXmarksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-eyes-xmarks", "e374");
    private static Icon? FaceFearfulf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-fearful?f=classic&amp;s=light">Face Fearful</a>
    /// </summary>
    public static Icon FaceFearful => FaceFearfulf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-fearful", "e375");
    private static Icon? FaceFlushedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-flushed?f=classic&amp;s=light">Face Flushed</a>
    /// </summary>
    public static Icon FaceFlushed => FaceFlushedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-flushed", "f579");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-flushed?f=classic&amp;s=light">Face Flushed</a>
    /// </summary>
    public static Icon Flushed => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceFlushed;
    private static Icon? FaceFrownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-frown?f=classic&amp;s=light">Face Frown</a>
    /// </summary>
    public static Icon FaceFrown => FaceFrownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-frown", "f119");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-frown?f=classic&amp;s=light">Face Frown</a>
    /// </summary>
    public static Icon Frown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceFrown;
    private static Icon? FaceFrownOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-frown-open?f=classic&amp;s=light">Face Frown Open</a>
    /// </summary>
    public static Icon FaceFrownOpen => FaceFrownOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-frown-open", "f57a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-frown-open?f=classic&amp;s=light">Face Frown Open</a>
    /// </summary>
    public static Icon FrownOpen => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceFrownOpen;
    private static Icon? FaceFrownSlightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-frown-slight?f=classic&amp;s=light">Face Frown Slight</a>
    /// </summary>
    public static Icon FaceFrownSlight => FaceFrownSlightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-frown-slight", "e376");
    private static Icon? FaceGlassesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-glasses?f=classic&amp;s=light">Face Glasses</a>
    /// </summary>
    public static Icon FaceGlasses => FaceGlassesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-glasses", "e377");
    private static Icon? FaceGrimacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grimace?f=classic&amp;s=light">Face Grimace</a>
    /// </summary>
    public static Icon FaceGrimace => FaceGrimacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grimace", "f57f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grimace?f=classic&amp;s=light">Face Grimace</a>
    /// </summary>
    public static Icon Grimace => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrimace;
    private static Icon? FaceGrinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin?f=classic&amp;s=light">Face Grin</a>
    /// </summary>
    public static Icon FaceGrin => FaceGrinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin", "f580");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin?f=classic&amp;s=light">Face Grin</a>
    /// </summary>
    public static Icon Grin => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrin;
    private static Icon? FaceGrinBeamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-beam?f=classic&amp;s=light">Face Grin Beam</a>
    /// </summary>
    public static Icon FaceGrinBeam => FaceGrinBeamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-beam", "f582");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-beam?f=classic&amp;s=light">Face Grin Beam</a>
    /// </summary>
    public static Icon GrinBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinBeam;
    private static Icon? FaceGrinBeamSweatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-beam-sweat?f=classic&amp;s=light">Face Grin Beam Sweat</a>
    /// </summary>
    public static Icon FaceGrinBeamSweat => FaceGrinBeamSweatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-beam-sweat", "f583");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-beam-sweat?f=classic&amp;s=light">Face Grin Beam Sweat</a>
    /// </summary>
    public static Icon GrinBeamSweat => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinBeamSweat;
    private static Icon? FaceGrinHeartsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-hearts?f=classic&amp;s=light">Face Grin Hearts</a>
    /// </summary>
    public static Icon FaceGrinHearts => FaceGrinHeartsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-hearts", "f584");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-hearts?f=classic&amp;s=light">Face Grin Hearts</a>
    /// </summary>
    public static Icon GrinHearts => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinHearts;
    private static Icon? FaceGrinSquintf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-squint?f=classic&amp;s=light">Face Grin Squint</a>
    /// </summary>
    public static Icon FaceGrinSquint => FaceGrinSquintf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-squint", "f585");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-squint?f=classic&amp;s=light">Face Grin Squint</a>
    /// </summary>
    public static Icon GrinSquint => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinSquint;
    private static Icon? FaceGrinSquintTearsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-squint-tears?f=classic&amp;s=light">Face Grin Squint Tears</a>
    /// </summary>
    public static Icon FaceGrinSquintTears => FaceGrinSquintTearsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-squint-tears", "f586");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-squint-tears?f=classic&amp;s=light">Face Grin Squint Tears</a>
    /// </summary>
    public static Icon GrinSquintTears => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinSquintTears;
    private static Icon? FaceGrinStarsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-stars?f=classic&amp;s=light">Face Grin Stars</a>
    /// </summary>
    public static Icon FaceGrinStars => FaceGrinStarsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-stars", "f587");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-stars?f=classic&amp;s=light">Face Grin Stars</a>
    /// </summary>
    public static Icon GrinStars => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinStars;
    private static Icon? FaceGrinTearsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tears?f=classic&amp;s=light">Face Grin Tears</a>
    /// </summary>
    public static Icon FaceGrinTears => FaceGrinTearsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-tears", "f588");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tears?f=classic&amp;s=light">Face Grin Tears</a>
    /// </summary>
    public static Icon GrinTears => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinTears;
    private static Icon? FaceGrinTonguef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tongue?f=classic&amp;s=light">Face Grin Tongue</a>
    /// </summary>
    public static Icon FaceGrinTongue => FaceGrinTonguef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-tongue", "f589");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tongue?f=classic&amp;s=light">Face Grin Tongue</a>
    /// </summary>
    public static Icon GrinTongue => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinTongue;
    private static Icon? FaceGrinTongueSquintf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tongue-squint?f=classic&amp;s=light">Face Grin Tongue Squint</a>
    /// </summary>
    public static Icon FaceGrinTongueSquint => FaceGrinTongueSquintf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-tongue-squint", "f58a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tongue-squint?f=classic&amp;s=light">Face Grin Tongue Squint</a>
    /// </summary>
    public static Icon GrinTongueSquint => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinTongueSquint;
    private static Icon? FaceGrinTongueWinkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tongue-wink?f=classic&amp;s=light">Face Grin Tongue Wink</a>
    /// </summary>
    public static Icon FaceGrinTongueWink => FaceGrinTongueWinkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-tongue-wink", "f58b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-tongue-wink?f=classic&amp;s=light">Face Grin Tongue Wink</a>
    /// </summary>
    public static Icon GrinTongueWink => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinTongueWink;
    private static Icon? FaceGrinWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-wide?f=classic&amp;s=light">Face Grin Wide</a>
    /// </summary>
    public static Icon FaceGrinWide => FaceGrinWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-wide", "f581");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-wide?f=classic&amp;s=light">Face Grin Wide</a>
    /// </summary>
    public static Icon GrinAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinWide;
    private static Icon? FaceGrinWinkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-wink?f=classic&amp;s=light">Face Grin Wink</a>
    /// </summary>
    public static Icon FaceGrinWink => FaceGrinWinkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-grin-wink", "f58c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-grin-wink?f=classic&amp;s=light">Face Grin Wink</a>
    /// </summary>
    public static Icon GrinWink => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceGrinWink;
    private static Icon? FaceHandOverMouthf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-hand-over-mouth?f=classic&amp;s=light">Face Hand Over Mouth</a>
    /// </summary>
    public static Icon FaceHandOverMouth => FaceHandOverMouthf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-hand-over-mouth", "e378");
    private static Icon? FaceHandPeekingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-hand-peeking?f=classic&amp;s=light">Face Hand Peeking</a>
    /// </summary>
    public static Icon FaceHandPeeking => FaceHandPeekingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-hand-peeking", "e481");
    private static Icon? FaceHandYawnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-hand-yawn?f=classic&amp;s=light">Face Hand Yawn</a>
    /// </summary>
    public static Icon FaceHandYawn => FaceHandYawnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-hand-yawn", "e379");
    private static Icon? FaceHeadBandagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-head-bandage?f=classic&amp;s=light">Face Head Bandage</a>
    /// </summary>
    public static Icon FaceHeadBandage => FaceHeadBandagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-head-bandage", "e37a");
    private static Icon? FaceHoldingBackTearsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-holding-back-tears?f=classic&amp;s=light">Face Holding Back Tears</a>
    /// </summary>
    public static Icon FaceHoldingBackTears => FaceHoldingBackTearsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-holding-back-tears", "e482");
    private static Icon? FaceHushedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-hushed?f=classic&amp;s=light">Face Hushed</a>
    /// </summary>
    public static Icon FaceHushed => FaceHushedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-hushed", "e37b");
    private static Icon? FaceIciclesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-icicles?f=classic&amp;s=light">Face Icicles</a>
    /// </summary>
    public static Icon FaceIcicles => FaceIciclesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-icicles", "e37c");
    private static Icon? FaceKissf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss?f=classic&amp;s=light">Face Kiss</a>
    /// </summary>
    public static Icon FaceKiss => FaceKissf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-kiss", "f596");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss?f=classic&amp;s=light">Face Kiss</a>
    /// </summary>
    public static Icon Kiss => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceKiss;
    private static Icon? FaceKissBeamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss-beam?f=classic&amp;s=light">Face Kiss Beam</a>
    /// </summary>
    public static Icon FaceKissBeam => FaceKissBeamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-kiss-beam", "f597");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss-beam?f=classic&amp;s=light">Face Kiss Beam</a>
    /// </summary>
    public static Icon KissBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceKissBeam;
    private static Icon? FaceKissClosedEyesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss-closed-eyes?f=classic&amp;s=light">Face Kiss Closed Eyes</a>
    /// </summary>
    public static Icon FaceKissClosedEyes => FaceKissClosedEyesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-kiss-closed-eyes", "e37d");
    private static Icon? FaceKissWinkHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss-wink-heart?f=classic&amp;s=light">Face Kiss Wink Heart</a>
    /// </summary>
    public static Icon FaceKissWinkHeart => FaceKissWinkHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-kiss-wink-heart", "f598");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-kiss-wink-heart?f=classic&amp;s=light">Face Kiss Wink Heart</a>
    /// </summary>
    public static Icon KissWinkHeart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceKissWinkHeart;
    private static Icon? FaceLaughf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh?f=classic&amp;s=light">Face Laugh</a>
    /// </summary>
    public static Icon FaceLaugh => FaceLaughf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-laugh", "f599");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh?f=classic&amp;s=light">Face Laugh</a>
    /// </summary>
    public static Icon Laugh => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceLaugh;
    private static Icon? FaceLaughBeamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh-beam?f=classic&amp;s=light">Face Laugh Beam</a>
    /// </summary>
    public static Icon FaceLaughBeam => FaceLaughBeamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-laugh-beam", "f59a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh-beam?f=classic&amp;s=light">Face Laugh Beam</a>
    /// </summary>
    public static Icon LaughBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceLaughBeam;
    private static Icon? FaceLaughSquintf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh-squint?f=classic&amp;s=light">Face Laugh Squint</a>
    /// </summary>
    public static Icon FaceLaughSquint => FaceLaughSquintf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-laugh-squint", "f59b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh-squint?f=classic&amp;s=light">Face Laugh Squint</a>
    /// </summary>
    public static Icon LaughSquint => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceLaughSquint;
    private static Icon? FaceLaughWinkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh-wink?f=classic&amp;s=light">Face Laugh Wink</a>
    /// </summary>
    public static Icon FaceLaughWink => FaceLaughWinkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-laugh-wink", "f59c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-laugh-wink?f=classic&amp;s=light">Face Laugh Wink</a>
    /// </summary>
    public static Icon LaughWink => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceLaughWink;
    private static Icon? FaceLyingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-lying?f=classic&amp;s=light">Face Lying</a>
    /// </summary>
    public static Icon FaceLying => FaceLyingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-lying", "e37e");
    private static Icon? FaceMaskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-mask?f=classic&amp;s=light">Face Mask</a>
    /// </summary>
    public static Icon FaceMask => FaceMaskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-mask", "e37f");
    private static Icon? FaceMehf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-meh?f=classic&amp;s=light">Face Meh</a>
    /// </summary>
    public static Icon FaceMeh => FaceMehf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-meh", "f11a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-meh?f=classic&amp;s=light">Face Meh</a>
    /// </summary>
    public static Icon Meh => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceMeh;
    private static Icon? FaceMehBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-meh-blank?f=classic&amp;s=light">Face Meh Blank</a>
    /// </summary>
    public static Icon FaceMehBlank => FaceMehBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-meh-blank", "f5a4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-meh-blank?f=classic&amp;s=light">Face Meh Blank</a>
    /// </summary>
    public static Icon MehBlank => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceMehBlank;
    private static Icon? FaceMeltingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-melting?f=classic&amp;s=light">Face Melting</a>
    /// </summary>
    public static Icon FaceMelting => FaceMeltingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-melting", "e483");
    private static Icon? FaceMonoclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-monocle?f=classic&amp;s=light">Face Monocle</a>
    /// </summary>
    public static Icon FaceMonocle => FaceMonoclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-monocle", "e380");
    private static Icon? FaceNauseatedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-nauseated?f=classic&amp;s=light">Face Nauseated</a>
    /// </summary>
    public static Icon FaceNauseated => FaceNauseatedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-nauseated", "e381");
    private static Icon? FaceNoseSteamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-nose-steam?f=classic&amp;s=light">Face Nose Steam</a>
    /// </summary>
    public static Icon FaceNoseSteam => FaceNoseSteamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-nose-steam", "e382");
    private static Icon? FacePartyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-party?f=classic&amp;s=light">Face Party</a>
    /// </summary>
    public static Icon FaceParty => FacePartyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-party", "e383");
    private static Icon? FacePensivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-pensive?f=classic&amp;s=light">Face Pensive</a>
    /// </summary>
    public static Icon FacePensive => FacePensivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-pensive", "e384");
    private static Icon? FacePerseveringf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-persevering?f=classic&amp;s=light">Face Persevering</a>
    /// </summary>
    public static Icon FacePersevering => FacePerseveringf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-persevering", "e385");
    private static Icon? FacePleadingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-pleading?f=classic&amp;s=light">Face Pleading</a>
    /// </summary>
    public static Icon FacePleading => FacePleadingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-pleading", "e386");
    private static Icon? FacePoutingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-pouting?f=classic&amp;s=light">Face Pouting</a>
    /// </summary>
    public static Icon FacePouting => FacePoutingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-pouting", "e387");
    private static Icon? FaceRaisedEyebrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-raised-eyebrow?f=classic&amp;s=light">Face Raised Eyebrow</a>
    /// </summary>
    public static Icon FaceRaisedEyebrow => FaceRaisedEyebrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-raised-eyebrow", "e388");
    private static Icon? FaceRelievedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-relieved?f=classic&amp;s=light">Face Relieved</a>
    /// </summary>
    public static Icon FaceRelieved => FaceRelievedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-relieved", "e389");
    private static Icon? FaceRollingEyesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-rolling-eyes?f=classic&amp;s=light">Face Rolling Eyes</a>
    /// </summary>
    public static Icon FaceRollingEyes => FaceRollingEyesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-rolling-eyes", "f5a5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-rolling-eyes?f=classic&amp;s=light">Face Rolling Eyes</a>
    /// </summary>
    public static Icon MehRollingEyes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceRollingEyes;
    private static Icon? FaceSadCryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sad-cry?f=classic&amp;s=light">Face Sad Cry</a>
    /// </summary>
    public static Icon FaceSadCry => FaceSadCryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-sad-cry", "f5b3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sad-cry?f=classic&amp;s=light">Face Sad Cry</a>
    /// </summary>
    public static Icon SadCry => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSadCry;
    private static Icon? FaceSadSweatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sad-sweat?f=classic&amp;s=light">Face Sad Sweat</a>
    /// </summary>
    public static Icon FaceSadSweat => FaceSadSweatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-sad-sweat", "e38a");
    private static Icon? FaceSadTearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sad-tear?f=classic&amp;s=light">Face Sad Tear</a>
    /// </summary>
    public static Icon FaceSadTear => FaceSadTearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-sad-tear", "f5b4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sad-tear?f=classic&amp;s=light">Face Sad Tear</a>
    /// </summary>
    public static Icon SadTear => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSadTear;
    private static Icon? FaceSalutingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-saluting?f=classic&amp;s=light">Face Saluting</a>
    /// </summary>
    public static Icon FaceSaluting => FaceSalutingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-saluting", "e484");
    private static Icon? FaceScreamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-scream?f=classic&amp;s=light">Face Scream</a>
    /// </summary>
    public static Icon FaceScream => FaceScreamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-scream", "e38b");
    private static Icon? FaceShushf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-shush?f=classic&amp;s=light">Face Shush</a>
    /// </summary>
    public static Icon FaceShush => FaceShushf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-shush", "e38c");
    private static Icon? FaceSleepingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sleeping?f=classic&amp;s=light">Face Sleeping</a>
    /// </summary>
    public static Icon FaceSleeping => FaceSleepingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-sleeping", "e38d");
    private static Icon? FaceSleepyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sleepy?f=classic&amp;s=light">Face Sleepy</a>
    /// </summary>
    public static Icon FaceSleepy => FaceSleepyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-sleepy", "e38e");
    private static Icon? FaceSmilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile?f=classic&amp;s=light">Face Smile</a>
    /// </summary>
    public static Icon FaceSmile => FaceSmilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile", "f118");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile?f=classic&amp;s=light">Face Smile</a>
    /// </summary>
    public static Icon Smile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSmile;
    private static Icon? FaceSmileBeamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-beam?f=classic&amp;s=light">Face Smile Beam</a>
    /// </summary>
    public static Icon FaceSmileBeam => FaceSmileBeamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-beam", "f5b8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-beam?f=classic&amp;s=light">Face Smile Beam</a>
    /// </summary>
    public static Icon SmileBeam => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSmileBeam;
    private static Icon? FaceSmileHalof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-halo?f=classic&amp;s=light">Face Smile Halo</a>
    /// </summary>
    public static Icon FaceSmileHalo => FaceSmileHalof ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-halo", "e38f");
    private static Icon? FaceSmileHeartsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-hearts?f=classic&amp;s=light">Face Smile Hearts</a>
    /// </summary>
    public static Icon FaceSmileHearts => FaceSmileHeartsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-hearts", "e390");
    private static Icon? FaceSmileHornsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-horns?f=classic&amp;s=light">Face Smile Horns</a>
    /// </summary>
    public static Icon FaceSmileHorns => FaceSmileHornsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-horns", "e391");
    private static Icon? FaceSmilePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-plus?f=classic&amp;s=light">Face Smile Plus</a>
    /// </summary>
    public static Icon FaceSmilePlus => FaceSmilePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-plus", "f5b9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-plus?f=classic&amp;s=light">Face Smile Plus</a>
    /// </summary>
    public static Icon SmilePlus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSmilePlus;
    private static Icon? FaceSmileRelaxedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-relaxed?f=classic&amp;s=light">Face Smile Relaxed</a>
    /// </summary>
    public static Icon FaceSmileRelaxed => FaceSmileRelaxedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-relaxed", "e392");
    private static Icon? FaceSmileTearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-tear?f=classic&amp;s=light">Face Smile Tear</a>
    /// </summary>
    public static Icon FaceSmileTear => FaceSmileTearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-tear", "e393");
    private static Icon? FaceSmileTonguef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-tongue?f=classic&amp;s=light">Face Smile Tongue</a>
    /// </summary>
    public static Icon FaceSmileTongue => FaceSmileTonguef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-tongue", "e394");
    private static Icon? FaceSmileUpsideDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-upside-down?f=classic&amp;s=light">Face Smile Upside Down</a>
    /// </summary>
    public static Icon FaceSmileUpsideDown => FaceSmileUpsideDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-upside-down", "e395");
    private static Icon? FaceSmileWinkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-wink?f=classic&amp;s=light">Face Smile Wink</a>
    /// </summary>
    public static Icon FaceSmileWink => FaceSmileWinkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smile-wink", "f4da");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smile-wink?f=classic&amp;s=light">Face Smile Wink</a>
    /// </summary>
    public static Icon SmileWink => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSmileWink;
    private static Icon? FaceSmilingHandsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smiling-hands?f=classic&amp;s=light">Face Smiling Hands</a>
    /// </summary>
    public static Icon FaceSmilingHands => FaceSmilingHandsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smiling-hands", "e396");
    private static Icon? FaceSmirkingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-smirking?f=classic&amp;s=light">Face Smirking</a>
    /// </summary>
    public static Icon FaceSmirking => FaceSmirkingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-smirking", "e397");
    private static Icon? FaceSpiralEyesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-spiral-eyes?f=classic&amp;s=light">Face Spiral Eyes</a>
    /// </summary>
    public static Icon FaceSpiralEyes => FaceSpiralEyesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-spiral-eyes", "e485");
    private static Icon? FaceSunglassesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-sunglasses?f=classic&amp;s=light">Face Sunglasses</a>
    /// </summary>
    public static Icon FaceSunglasses => FaceSunglassesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-sunglasses", "e398");
    private static Icon? FaceSurprisef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-surprise?f=classic&amp;s=light">Face Surprise</a>
    /// </summary>
    public static Icon FaceSurprise => FaceSurprisef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-surprise", "f5c2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-surprise?f=classic&amp;s=light">Face Surprise</a>
    /// </summary>
    public static Icon Surprise => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceSurprise;
    private static Icon? FaceSwearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-swear?f=classic&amp;s=light">Face Swear</a>
    /// </summary>
    public static Icon FaceSwear => FaceSwearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-swear", "e399");
    private static Icon? FaceThermometerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-thermometer?f=classic&amp;s=light">Face Thermometer</a>
    /// </summary>
    public static Icon FaceThermometer => FaceThermometerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-thermometer", "e39a");
    private static Icon? FaceThinkingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-thinking?f=classic&amp;s=light">Face Thinking</a>
    /// </summary>
    public static Icon FaceThinking => FaceThinkingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-thinking", "e39b");
    private static Icon? FaceTiredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-tired?f=classic&amp;s=light">Face Tired</a>
    /// </summary>
    public static Icon FaceTired => FaceTiredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-tired", "f5c8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-tired?f=classic&amp;s=light">Face Tired</a>
    /// </summary>
    public static Icon Tired => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FaceTired;
    private static Icon? FaceTissuef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-tissue?f=classic&amp;s=light">Face Tissue</a>
    /// </summary>
    public static Icon FaceTissue => FaceTissuef ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-tissue", "e39c");
    private static Icon? FaceTongueMoneyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-tongue-money?f=classic&amp;s=light">Face Tongue Money</a>
    /// </summary>
    public static Icon FaceTongueMoney => FaceTongueMoneyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-tongue-money", "e39d");
    private static Icon? FaceTongueSweatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-tongue-sweat?f=classic&amp;s=light">Face Tongue Sweat</a>
    /// </summary>
    public static Icon FaceTongueSweat => FaceTongueSweatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-tongue-sweat", "e39e");
    private static Icon? FaceUnamusedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-unamused?f=classic&amp;s=light">Face Unamused</a>
    /// </summary>
    public static Icon FaceUnamused => FaceUnamusedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-unamused", "e39f");
    private static Icon? FaceViewfinderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-viewfinder?f=classic&amp;s=light">Face Viewfinder</a>
    /// </summary>
    public static Icon FaceViewfinder => FaceViewfinderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-viewfinder", "e2ff");
    private static Icon? FaceVomitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-vomit?f=classic&amp;s=light">Face Vomit</a>
    /// </summary>
    public static Icon FaceVomit => FaceVomitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-vomit", "e3a0");
    private static Icon? FaceWearyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-weary?f=classic&amp;s=light">Face Weary</a>
    /// </summary>
    public static Icon FaceWeary => FaceWearyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-weary", "e3a1");
    private static Icon? FaceWoozyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-woozy?f=classic&amp;s=light">Face Woozy</a>
    /// </summary>
    public static Icon FaceWoozy => FaceWoozyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-woozy", "e3a2");
    private static Icon? FaceWorriedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-worried?f=classic&amp;s=light">Face Worried</a>
    /// </summary>
    public static Icon FaceWorried => FaceWorriedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-worried", "e3a3");
    private static Icon? FaceZanyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-zany?f=classic&amp;s=light">Face Zany</a>
    /// </summary>
    public static Icon FaceZany => FaceZanyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-zany", "e3a4");
    private static Icon? FaceZipperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/face-zipper?f=classic&amp;s=light">Face Zipper</a>
    /// </summary>
    public static Icon FaceZipper => FaceZipperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "face-zipper", "e3a5");
    private static Icon? Falafelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/falafel?f=classic&amp;s=light">Falafel</a>
    /// </summary>
    public static Icon Falafel => Falafelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "falafel", "e40a");
    private static Icon? Familyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/family?f=classic&amp;s=light">Family</a>
    /// </summary>
    public static Icon Family => Familyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "family", "e300");
    private static Icon? FamilyDressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/family-dress?f=classic&amp;s=light">Family Dress</a>
    /// </summary>
    public static Icon FamilyDress => FamilyDressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "family-dress", "e301");
    private static Icon? FamilyPantsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/family-pants?f=classic&amp;s=light">Family Pants</a>
    /// </summary>
    public static Icon FamilyPants => FamilyPantsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "family-pants", "e302");
    private static Icon? Fanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fan?f=classic&amp;s=light">Fan</a>
    /// </summary>
    public static Icon Fan => Fanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fan", "f863");
    private static Icon? FanTablef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fan-table?f=classic&amp;s=light">Fan Table</a>
    /// </summary>
    public static Icon FanTable => FanTablef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fan-table", "e004");
    private static Icon? Farmf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/farm?f=classic&amp;s=light">Farm</a>
    /// </summary>
    public static Icon Farm => Farmf ??= new Icon(IconFamily.Classic, IconStyle.Light, "farm", "f864");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/farm?f=classic&amp;s=light">Farm</a>
    /// </summary>
    public static Icon BarnSilo => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Farm;
    private static Icon? Faucetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/faucet?f=classic&amp;s=light">Faucet</a>
    /// </summary>
    public static Icon Faucet => Faucetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "faucet", "e005");
    private static Icon? FaucetDripf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/faucet-drip?f=classic&amp;s=light">Faucet Drip</a>
    /// </summary>
    public static Icon FaucetDrip => FaucetDripf ??= new Icon(IconFamily.Classic, IconStyle.Light, "faucet-drip", "e006");
    private static Icon? Faxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fax?f=classic&amp;s=light">Fax</a>
    /// </summary>
    public static Icon Fax => Faxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fax", "f1ac");
    private static Icon? Featherf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/feather?f=classic&amp;s=light">Feather</a>
    /// </summary>
    public static Icon Feather => Featherf ??= new Icon(IconFamily.Classic, IconStyle.Light, "feather", "f52d");
    private static Icon? FeatherPointedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/feather-pointed?f=classic&amp;s=light">Feather Pointed</a>
    /// </summary>
    public static Icon FeatherPointed => FeatherPointedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "feather-pointed", "f56b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/feather-pointed?f=classic&amp;s=light">Feather Pointed</a>
    /// </summary>
    public static Icon FeatherAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FeatherPointed;
    private static Icon? Fencef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fence?f=classic&amp;s=light">Fence</a>
    /// </summary>
    public static Icon Fence => Fencef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fence", "e303");
    private static Icon? FerrisWheelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ferris-wheel?f=classic&amp;s=light">Ferris Wheel</a>
    /// </summary>
    public static Icon FerrisWheel => FerrisWheelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ferris-wheel", "e174");
    private static Icon? Ferryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ferry?f=classic&amp;s=light">Ferry</a>
    /// </summary>
    public static Icon Ferry => Ferryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ferry", "e4ea");
    private static Icon? FieldHockeyStickBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/field-hockey-stick-ball?f=classic&amp;s=light">Field Hockey Stick Ball</a>
    /// </summary>
    public static Icon FieldHockeyStickBall => FieldHockeyStickBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "field-hockey-stick-ball", "f44c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/field-hockey-stick-ball?f=classic&amp;s=light">Field Hockey Stick Ball</a>
    /// </summary>
    public static Icon FieldHockey => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FieldHockeyStickBall;
    private static Icon? Filef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file?f=classic&amp;s=light">File</a>
    /// </summary>
    public static Icon File => Filef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file", "f15b");
    private static Icon? FileArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-arrow-down?f=classic&amp;s=light">File Arrow Down</a>
    /// </summary>
    public static Icon FileArrowDown => FileArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-arrow-down", "f56d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-arrow-down?f=classic&amp;s=light">File Arrow Down</a>
    /// </summary>
    public static Icon FileDownload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileArrowDown;
    private static Icon? FileArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-arrow-up?f=classic&amp;s=light">File Arrow Up</a>
    /// </summary>
    public static Icon FileArrowUp => FileArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-arrow-up", "f574");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-arrow-up?f=classic&amp;s=light">File Arrow Up</a>
    /// </summary>
    public static Icon FileUpload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileArrowUp;
    private static Icon? FileAudiof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-audio?f=classic&amp;s=light">File Audio</a>
    /// </summary>
    public static Icon FileAudio => FileAudiof ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-audio", "f1c7");
    private static Icon? FileBinaryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-binary?f=classic&amp;s=light">File Binary</a>
    /// </summary>
    public static Icon FileBinary => FileBinaryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-binary", "e175");
    private static Icon? FileCertificatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-certificate?f=classic&amp;s=light">File Certificate</a>
    /// </summary>
    public static Icon FileCertificate => FileCertificatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-certificate", "f5f3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-certificate?f=classic&amp;s=light">File Certificate</a>
    /// </summary>
    public static Icon FileAward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileCertificate;
    private static Icon? FileChartColumnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-chart-column?f=classic&amp;s=light">File Chart Column</a>
    /// </summary>
    public static Icon FileChartColumn => FileChartColumnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-chart-column", "f659");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-chart-column?f=classic&amp;s=light">File Chart Column</a>
    /// </summary>
    public static Icon FileChartLine => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileChartColumn;
    private static Icon? FileChartPief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-chart-pie?f=classic&amp;s=light">File Chart Pie</a>
    /// </summary>
    public static Icon FileChartPie => FileChartPief ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-chart-pie", "f65a");
    private static Icon? FileCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-check?f=classic&amp;s=light">File Check</a>
    /// </summary>
    public static Icon FileCheck => FileCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-check", "f316");
    private static Icon? FileCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-check?f=classic&amp;s=light">File Circle Check</a>
    /// </summary>
    public static Icon FileCircleCheck => FileCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-check", "e5a0");
    private static Icon? FileCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-exclamation?f=classic&amp;s=light">File Circle Exclamation</a>
    /// </summary>
    public static Icon FileCircleExclamation => FileCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-exclamation", "e4eb");
    private static Icon? FileCircleInfof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-info?f=classic&amp;s=light">File Circle Info</a>
    /// </summary>
    public static Icon FileCircleInfo => FileCircleInfof ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-info", "e493");
    private static Icon? FileCircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-minus?f=classic&amp;s=light">File Circle Minus</a>
    /// </summary>
    public static Icon FileCircleMinus => FileCircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-minus", "e4ed");
    private static Icon? FileCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-plus?f=classic&amp;s=light">File Circle Plus</a>
    /// </summary>
    public static Icon FileCirclePlus => FileCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-plus", "e494");
    private static Icon? FileCircleQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-question?f=classic&amp;s=light">File Circle Question</a>
    /// </summary>
    public static Icon FileCircleQuestion => FileCircleQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-question", "e4ef");
    private static Icon? FileCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-circle-xmark?f=classic&amp;s=light">File Circle Xmark</a>
    /// </summary>
    public static Icon FileCircleXmark => FileCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-circle-xmark", "e5a1");
    private static Icon? FileCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-code?f=classic&amp;s=light">File Code</a>
    /// </summary>
    public static Icon FileCode => FileCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-code", "f1c9");
    private static Icon? FileContractf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-contract?f=classic&amp;s=light">File Contract</a>
    /// </summary>
    public static Icon FileContract => FileContractf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-contract", "f56c");
    private static Icon? FileCsvf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-csv?f=classic&amp;s=light">File Csv</a>
    /// </summary>
    public static Icon FileCsv => FileCsvf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-csv", "f6dd");
    private static Icon? FileDashedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-dashed-line?f=classic&amp;s=light">File Dashed Line</a>
    /// </summary>
    public static Icon FileDashedLine => FileDashedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-dashed-line", "f877");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-dashed-line?f=classic&amp;s=light">File Dashed Line</a>
    /// </summary>
    public static Icon PageBreak => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileDashedLine;
    private static Icon? FileDocf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-doc?f=classic&amp;s=light">File Doc</a>
    /// </summary>
    public static Icon FileDoc => FileDocf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-doc", "e5ed");
    private static Icon? FileEpsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-eps?f=classic&amp;s=light">File Eps</a>
    /// </summary>
    public static Icon FileEps => FileEpsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-eps", "e644");
    private static Icon? FileExcelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-excel?f=classic&amp;s=light">File Excel</a>
    /// </summary>
    public static Icon FileExcel => FileExcelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-excel", "f1c3");
    private static Icon? FileExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-exclamation?f=classic&amp;s=light">File Exclamation</a>
    /// </summary>
    public static Icon FileExclamation => FileExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-exclamation", "f31a");
    private static Icon? FileExportf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-export?f=classic&amp;s=light">File Export</a>
    /// </summary>
    public static Icon FileExport => FileExportf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-export", "f56e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-export?f=classic&amp;s=light">File Export</a>
    /// </summary>
    public static Icon ArrowRightFromFile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileExport;
    private static Icon? FileGiff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-gif?f=classic&amp;s=light">File Gif</a>
    /// </summary>
    public static Icon FileGif => FileGiff ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-gif", "e645");
    private static Icon? FileHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-heart?f=classic&amp;s=light">File Heart</a>
    /// </summary>
    public static Icon FileHeart => FileHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-heart", "e176");
    private static Icon? FileImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-image?f=classic&amp;s=light">File Image</a>
    /// </summary>
    public static Icon FileImage => FileImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-image", "f1c5");
    private static Icon? FileImportf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-import?f=classic&amp;s=light">File Import</a>
    /// </summary>
    public static Icon FileImport => FileImportf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-import", "f56f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-import?f=classic&amp;s=light">File Import</a>
    /// </summary>
    public static Icon ArrowRightToFile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileImport;
    private static Icon? FileInvoicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-invoice?f=classic&amp;s=light">File Invoice</a>
    /// </summary>
    public static Icon FileInvoice => FileInvoicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-invoice", "f570");
    private static Icon? FileInvoiceDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-invoice-dollar?f=classic&amp;s=light">File Invoice Dollar</a>
    /// </summary>
    public static Icon FileInvoiceDollar => FileInvoiceDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-invoice-dollar", "f571");
    private static Icon? FileJpgf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-jpg?f=classic&amp;s=light">File Jpg</a>
    /// </summary>
    public static Icon FileJpg => FileJpgf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-jpg", "e646");
    private static Icon? FileLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-lines?f=classic&amp;s=light">File Lines</a>
    /// </summary>
    public static Icon FileLines => FileLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-lines", "f15c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-lines?f=classic&amp;s=light">File Lines</a>
    /// </summary>
    public static Icon FileAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileLines;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-lines?f=classic&amp;s=light">File Lines</a>
    /// </summary>
    public static Icon FileText => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileLines;
    private static Icon? FileLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-lock?f=classic&amp;s=light">File Lock</a>
    /// </summary>
    public static Icon FileLock => FileLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-lock", "e3a6");
    private static Icon? FileMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-magnifying-glass?f=classic&amp;s=light">File Magnifying Glass</a>
    /// </summary>
    public static Icon FileMagnifyingGlass => FileMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-magnifying-glass", "f865");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-magnifying-glass?f=classic&amp;s=light">File Magnifying Glass</a>
    /// </summary>
    public static Icon FileSearch => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileMagnifyingGlass;
    private static Icon? FileMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-medical?f=classic&amp;s=light">File Medical</a>
    /// </summary>
    public static Icon FileMedical => FileMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-medical", "f477");
    private static Icon? FileMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-minus?f=classic&amp;s=light">File Minus</a>
    /// </summary>
    public static Icon FileMinus => FileMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-minus", "f318");
    private static Icon? FileMovf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-mov?f=classic&amp;s=light">File Mov</a>
    /// </summary>
    public static Icon FileMov => FileMovf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-mov", "e647");
    private static Icon? FileMp3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-mp3?f=classic&amp;s=light">File Mp3</a>
    /// </summary>
    public static Icon FileMp3 => FileMp3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-mp3", "e648");
    private static Icon? FileMp4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-mp4?f=classic&amp;s=light">File Mp4</a>
    /// </summary>
    public static Icon FileMp4 => FileMp4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-mp4", "e649");
    private static Icon? FileMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-music?f=classic&amp;s=light">File Music</a>
    /// </summary>
    public static Icon FileMusic => FileMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-music", "f8b6");
    private static Icon? FilePdff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-pdf?f=classic&amp;s=light">File Pdf</a>
    /// </summary>
    public static Icon FilePdf => FilePdff ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-pdf", "f1c1");
    private static Icon? FilePenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-pen?f=classic&amp;s=light">File Pen</a>
    /// </summary>
    public static Icon FilePen => FilePenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-pen", "f31c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-pen?f=classic&amp;s=light">File Pen</a>
    /// </summary>
    public static Icon FileEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FilePen;
    private static Icon? FilePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-plus?f=classic&amp;s=light">File Plus</a>
    /// </summary>
    public static Icon FilePlus => FilePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-plus", "f319");
    private static Icon? FilePlusMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-plus-minus?f=classic&amp;s=light">File Plus Minus</a>
    /// </summary>
    public static Icon FilePlusMinus => FilePlusMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-plus-minus", "e177");
    private static Icon? FilePngf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-png?f=classic&amp;s=light">File Png</a>
    /// </summary>
    public static Icon FilePng => FilePngf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-png", "e666");
    private static Icon? FilePowerpointf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-powerpoint?f=classic&amp;s=light">File Powerpoint</a>
    /// </summary>
    public static Icon FilePowerpoint => FilePowerpointf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-powerpoint", "f1c4");
    private static Icon? FilePptf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-ppt?f=classic&amp;s=light">File Ppt</a>
    /// </summary>
    public static Icon FilePpt => FilePptf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-ppt", "e64a");
    private static Icon? FilePrescriptionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-prescription?f=classic&amp;s=light">File Prescription</a>
    /// </summary>
    public static Icon FilePrescription => FilePrescriptionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-prescription", "f572");
    private static Icon? FileShieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-shield?f=classic&amp;s=light">File Shield</a>
    /// </summary>
    public static Icon FileShield => FileShieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-shield", "e4f0");
    private static Icon? FileSignaturef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-signature?f=classic&amp;s=light">File Signature</a>
    /// </summary>
    public static Icon FileSignature => FileSignaturef ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-signature", "f573");
    private static Icon? FileSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-slash?f=classic&amp;s=light">File Slash</a>
    /// </summary>
    public static Icon FileSlash => FileSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-slash", "e3a7");
    private static Icon? FileSpreadsheetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-spreadsheet?f=classic&amp;s=light">File Spreadsheet</a>
    /// </summary>
    public static Icon FileSpreadsheet => FileSpreadsheetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-spreadsheet", "f65b");
    private static Icon? FileSvgf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-svg?f=classic&amp;s=light">File Svg</a>
    /// </summary>
    public static Icon FileSvg => FileSvgf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-svg", "e64b");
    private static Icon? FileUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-user?f=classic&amp;s=light">File User</a>
    /// </summary>
    public static Icon FileUser => FileUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-user", "f65c");
    private static Icon? FileVectorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-vector?f=classic&amp;s=light">File Vector</a>
    /// </summary>
    public static Icon FileVector => FileVectorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-vector", "e64c");
    private static Icon? FileVideof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-video?f=classic&amp;s=light">File Video</a>
    /// </summary>
    public static Icon FileVideo => FileVideof ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-video", "f1c8");
    private static Icon? FileWaveformf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-waveform?f=classic&amp;s=light">File Waveform</a>
    /// </summary>
    public static Icon FileWaveform => FileWaveformf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-waveform", "f478");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-waveform?f=classic&amp;s=light">File Waveform</a>
    /// </summary>
    public static Icon FileMedicalAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileWaveform;
    private static Icon? FileWordf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-word?f=classic&amp;s=light">File Word</a>
    /// </summary>
    public static Icon FileWord => FileWordf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-word", "f1c2");
    private static Icon? FileXlsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-xls?f=classic&amp;s=light">File Xls</a>
    /// </summary>
    public static Icon FileXls => FileXlsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-xls", "e64d");
    private static Icon? FileXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-xmark?f=classic&amp;s=light">File Xmark</a>
    /// </summary>
    public static Icon FileXmark => FileXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-xmark", "f317");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-xmark?f=classic&amp;s=light">File Xmark</a>
    /// </summary>
    public static Icon FileTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileXmark;
    private static Icon? FileXmlf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-xml?f=classic&amp;s=light">File Xml</a>
    /// </summary>
    public static Icon FileXml => FileXmlf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-xml", "e654");
    private static Icon? FileZipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-zip?f=classic&amp;s=light">File Zip</a>
    /// </summary>
    public static Icon FileZip => FileZipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-zip", "e5ee");
    private static Icon? FileZipperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-zipper?f=classic&amp;s=light">File Zipper</a>
    /// </summary>
    public static Icon FileZipper => FileZipperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "file-zipper", "f1c6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/file-zipper?f=classic&amp;s=light">File Zipper</a>
    /// </summary>
    public static Icon FileArchive => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FileZipper;
    private static Icon? Filesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/files?f=classic&amp;s=light">Files</a>
    /// </summary>
    public static Icon Files => Filesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "files", "e178");
    private static Icon? FilesMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/files-medical?f=classic&amp;s=light">Files Medical</a>
    /// </summary>
    public static Icon FilesMedical => FilesMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "files-medical", "f7fd");
    private static Icon? Fillf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fill?f=classic&amp;s=light">Fill</a>
    /// </summary>
    public static Icon Fill => Fillf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fill", "f575");
    private static Icon? FillDripf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fill-drip?f=classic&amp;s=light">Fill Drip</a>
    /// </summary>
    public static Icon FillDrip => FillDripf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fill-drip", "f576");
    private static Icon? Filmf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/film?f=classic&amp;s=light">Film</a>
    /// </summary>
    public static Icon Film => Filmf ??= new Icon(IconFamily.Classic, IconStyle.Light, "film", "f008");
    private static Icon? FilmCanisterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/film-canister?f=classic&amp;s=light">Film Canister</a>
    /// </summary>
    public static Icon FilmCanister => FilmCanisterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "film-canister", "f8b7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/film-canister?f=classic&amp;s=light">Film Canister</a>
    /// </summary>
    public static Icon FilmCannister => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FilmCanister;
    private static Icon? FilmSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/film-simple?f=classic&amp;s=light">Film Simple</a>
    /// </summary>
    public static Icon FilmSimple => FilmSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "film-simple", "f3a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/film-simple?f=classic&amp;s=light">Film Simple</a>
    /// </summary>
    public static Icon FilmAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FilmSimple;
    private static Icon? FilmSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/film-slash?f=classic&amp;s=light">Film Slash</a>
    /// </summary>
    public static Icon FilmSlash => FilmSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "film-slash", "e179");
    private static Icon? Filmsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/films?f=classic&amp;s=light">Films</a>
    /// </summary>
    public static Icon Films => Filmsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "films", "e17a");
    private static Icon? Filterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filter?f=classic&amp;s=light">Filter</a>
    /// </summary>
    public static Icon Filter => Filterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "filter", "f0b0");
    private static Icon? FilterCircleDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filter-circle-dollar?f=classic&amp;s=light">Filter Circle Dollar</a>
    /// </summary>
    public static Icon FilterCircleDollar => FilterCircleDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "filter-circle-dollar", "f662");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filter-circle-dollar?f=classic&amp;s=light">Filter Circle Dollar</a>
    /// </summary>
    public static Icon FunnelDollar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FilterCircleDollar;
    private static Icon? FilterCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filter-circle-xmark?f=classic&amp;s=light">Filter Circle Xmark</a>
    /// </summary>
    public static Icon FilterCircleXmark => FilterCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "filter-circle-xmark", "e17b");
    private static Icon? FilterListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filter-list?f=classic&amp;s=light">Filter List</a>
    /// </summary>
    public static Icon FilterList => FilterListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "filter-list", "e17c");
    private static Icon? FilterSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filter-slash?f=classic&amp;s=light">Filter Slash</a>
    /// </summary>
    public static Icon FilterSlash => FilterSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "filter-slash", "e17d");
    private static Icon? Filtersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/filters?f=classic&amp;s=light">Filters</a>
    /// </summary>
    public static Icon Filters => Filtersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "filters", "e17e");
    private static Icon? Fingerprintf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fingerprint?f=classic&amp;s=light">Fingerprint</a>
    /// </summary>
    public static Icon Fingerprint => Fingerprintf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fingerprint", "f577");
    private static Icon? Firef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire?f=classic&amp;s=light">Fire</a>
    /// </summary>
    public static Icon Fire => Firef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire", "f06d");
    private static Icon? FireBurnerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-burner?f=classic&amp;s=light">Fire Burner</a>
    /// </summary>
    public static Icon FireBurner => FireBurnerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-burner", "e4f1");
    private static Icon? FireExtinguisherf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-extinguisher?f=classic&amp;s=light">Fire Extinguisher</a>
    /// </summary>
    public static Icon FireExtinguisher => FireExtinguisherf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-extinguisher", "f134");
    private static Icon? FireFlamef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-flame?f=classic&amp;s=light">Fire Flame</a>
    /// </summary>
    public static Icon FireFlame => FireFlamef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-flame", "f6df");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-flame?f=classic&amp;s=light">Fire Flame</a>
    /// </summary>
    public static Icon Flame => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FireFlame;
    private static Icon? FireFlameCurvedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-flame-curved?f=classic&amp;s=light">Fire Flame Curved</a>
    /// </summary>
    public static Icon FireFlameCurved => FireFlameCurvedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-flame-curved", "f7e4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-flame-curved?f=classic&amp;s=light">Fire Flame Curved</a>
    /// </summary>
    public static Icon FireAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FireFlameCurved;
    private static Icon? FireFlameSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-flame-simple?f=classic&amp;s=light">Fire Flame Simple</a>
    /// </summary>
    public static Icon FireFlameSimple => FireFlameSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-flame-simple", "f46a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-flame-simple?f=classic&amp;s=light">Fire Flame Simple</a>
    /// </summary>
    public static Icon Burn => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FireFlameSimple;
    private static Icon? FireHydrantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-hydrant?f=classic&amp;s=light">Fire Hydrant</a>
    /// </summary>
    public static Icon FireHydrant => FireHydrantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-hydrant", "e17f");
    private static Icon? FireSmokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fire-smoke?f=classic&amp;s=light">Fire Smoke</a>
    /// </summary>
    public static Icon FireSmoke => FireSmokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fire-smoke", "f74b");
    private static Icon? Fireplacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fireplace?f=classic&amp;s=light">Fireplace</a>
    /// </summary>
    public static Icon Fireplace => Fireplacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fireplace", "f79a");
    private static Icon? Fishf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fish?f=classic&amp;s=light">Fish</a>
    /// </summary>
    public static Icon Fish => Fishf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fish", "f578");
    private static Icon? FishBonesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fish-bones?f=classic&amp;s=light">Fish Bones</a>
    /// </summary>
    public static Icon FishBones => FishBonesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fish-bones", "e304");
    private static Icon? FishCookedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fish-cooked?f=classic&amp;s=light">Fish Cooked</a>
    /// </summary>
    public static Icon FishCooked => FishCookedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fish-cooked", "f7fe");
    private static Icon? FishFinsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fish-fins?f=classic&amp;s=light">Fish Fins</a>
    /// </summary>
    public static Icon FishFins => FishFinsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fish-fins", "e4f2");
    private static Icon? FishingRodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fishing-rod?f=classic&amp;s=light">Fishing Rod</a>
    /// </summary>
    public static Icon FishingRod => FishingRodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fishing-rod", "e3a8");
    private static Icon? Flagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag?f=classic&amp;s=light">Flag</a>
    /// </summary>
    public static Icon Flag => Flagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flag", "f024");
    private static Icon? FlagCheckeredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag-checkered?f=classic&amp;s=light">Flag Checkered</a>
    /// </summary>
    public static Icon FlagCheckered => FlagCheckeredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flag-checkered", "f11e");
    private static Icon? FlagPennantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag-pennant?f=classic&amp;s=light">Flag Pennant</a>
    /// </summary>
    public static Icon FlagPennant => FlagPennantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flag-pennant", "f456");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag-pennant?f=classic&amp;s=light">Flag Pennant</a>
    /// </summary>
    public static Icon Pennant => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FlagPennant;
    private static Icon? FlagSwallowtailf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag-swallowtail?f=classic&amp;s=light">Flag Swallowtail</a>
    /// </summary>
    public static Icon FlagSwallowtail => FlagSwallowtailf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flag-swallowtail", "f74c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag-swallowtail?f=classic&amp;s=light">Flag Swallowtail</a>
    /// </summary>
    public static Icon FlagAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FlagSwallowtail;
    private static Icon? FlagUsaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flag-usa?f=classic&amp;s=light">Flag Usa</a>
    /// </summary>
    public static Icon FlagUsa => FlagUsaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flag-usa", "f74d");
    private static Icon? Flashlightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flashlight?f=classic&amp;s=light">Flashlight</a>
    /// </summary>
    public static Icon Flashlight => Flashlightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flashlight", "f8b8");
    private static Icon? Flaskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask?f=classic&amp;s=light">Flask</a>
    /// </summary>
    public static Icon Flask => Flaskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flask", "f0c3");
    private static Icon? FlaskGearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask-gear?f=classic&amp;s=light">Flask Gear</a>
    /// </summary>
    public static Icon FlaskGear => FlaskGearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flask-gear", "e5f1");
    private static Icon? FlaskRoundPoisonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask-round-poison?f=classic&amp;s=light">Flask Round Poison</a>
    /// </summary>
    public static Icon FlaskRoundPoison => FlaskRoundPoisonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flask-round-poison", "f6e0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask-round-poison?f=classic&amp;s=light">Flask Round Poison</a>
    /// </summary>
    public static Icon FlaskPoison => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FlaskRoundPoison;
    private static Icon? FlaskRoundPotionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask-round-potion?f=classic&amp;s=light">Flask Round Potion</a>
    /// </summary>
    public static Icon FlaskRoundPotion => FlaskRoundPotionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flask-round-potion", "f6e1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask-round-potion?f=classic&amp;s=light">Flask Round Potion</a>
    /// </summary>
    public static Icon FlaskPotion => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FlaskRoundPotion;
    private static Icon? FlaskVialf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flask-vial?f=classic&amp;s=light">Flask Vial</a>
    /// </summary>
    public static Icon FlaskVial => FlaskVialf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flask-vial", "e4f3");
    private static Icon? Flatbreadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flatbread?f=classic&amp;s=light">Flatbread</a>
    /// </summary>
    public static Icon Flatbread => Flatbreadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flatbread", "e40b");
    private static Icon? FlatbreadStuffedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flatbread-stuffed?f=classic&amp;s=light">Flatbread Stuffed</a>
    /// </summary>
    public static Icon FlatbreadStuffed => FlatbreadStuffedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flatbread-stuffed", "e40c");
    private static Icon? FloppyDiskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk?f=classic&amp;s=light">Floppy Disk</a>
    /// </summary>
    public static Icon FloppyDisk => FloppyDiskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "floppy-disk", "f0c7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk?f=classic&amp;s=light">Floppy Disk</a>
    /// </summary>
    public static Icon Save => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FloppyDisk;
    private static Icon? FloppyDiskCircleArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-circle-arrow-right?f=classic&amp;s=light">Floppy Disk Circle Arrow Right</a>
    /// </summary>
    public static Icon FloppyDiskCircleArrowRight => FloppyDiskCircleArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "floppy-disk-circle-arrow-right", "e180");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-circle-arrow-right?f=classic&amp;s=light">Floppy Disk Circle Arrow Right</a>
    /// </summary>
    public static Icon SaveCircleArrowRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FloppyDiskCircleArrowRight;
    private static Icon? FloppyDiskCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-circle-xmark?f=classic&amp;s=light">Floppy Disk Circle Xmark</a>
    /// </summary>
    public static Icon FloppyDiskCircleXmark => FloppyDiskCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "floppy-disk-circle-xmark", "e181");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-circle-xmark?f=classic&amp;s=light">Floppy Disk Circle Xmark</a>
    /// </summary>
    public static Icon FloppyDiskTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FloppyDiskCircleXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-circle-xmark?f=classic&amp;s=light">Floppy Disk Circle Xmark</a>
    /// </summary>
    public static Icon SaveCircleXmark => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FloppyDiskCircleXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-circle-xmark?f=classic&amp;s=light">Floppy Disk Circle Xmark</a>
    /// </summary>
    public static Icon SaveTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FloppyDiskCircleXmark;
    private static Icon? FloppyDiskPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disk-pen?f=classic&amp;s=light">Floppy Disk Pen</a>
    /// </summary>
    public static Icon FloppyDiskPen => FloppyDiskPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "floppy-disk-pen", "e182");
    private static Icon? FloppyDisksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/floppy-disks?f=classic&amp;s=light">Floppy Disks</a>
    /// </summary>
    public static Icon FloppyDisks => FloppyDisksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "floppy-disks", "e183");
    private static Icon? FlorinSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/florin-sign?f=classic&amp;s=light">Florin Sign</a>
    /// </summary>
    public static Icon FlorinSign => FlorinSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "florin-sign", "e184");
    private static Icon? Flowerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flower?f=classic&amp;s=light">Flower</a>
    /// </summary>
    public static Icon Flower => Flowerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flower", "f7ff");
    private static Icon? FlowerDaffodilf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flower-daffodil?f=classic&amp;s=light">Flower Daffodil</a>
    /// </summary>
    public static Icon FlowerDaffodil => FlowerDaffodilf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flower-daffodil", "f800");
    private static Icon? FlowerTulipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flower-tulip?f=classic&amp;s=light">Flower Tulip</a>
    /// </summary>
    public static Icon FlowerTulip => FlowerTulipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flower-tulip", "f801");
    private static Icon? Flutef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flute?f=classic&amp;s=light">Flute</a>
    /// </summary>
    public static Icon Flute => Flutef ??= new Icon(IconFamily.Classic, IconStyle.Light, "flute", "f8b9");
    private static Icon? FluxCapacitorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flux-capacitor?f=classic&amp;s=light">Flux Capacitor</a>
    /// </summary>
    public static Icon FluxCapacitor => FluxCapacitorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flux-capacitor", "f8ba");
    private static Icon? FlyingDiscf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/flying-disc?f=classic&amp;s=light">Flying Disc</a>
    /// </summary>
    public static Icon FlyingDisc => FlyingDiscf ??= new Icon(IconFamily.Classic, IconStyle.Light, "flying-disc", "e3a9");
    private static Icon? Folderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder?f=classic&amp;s=light">Folder</a>
    /// </summary>
    public static Icon Folder => Folderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder", "f07b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder?f=classic&amp;s=light">Folder</a>
    /// </summary>
    public static Icon FolderBlank => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Folder;
    private static Icon? FolderArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-arrow-down?f=classic&amp;s=light">Folder Arrow Down</a>
    /// </summary>
    public static Icon FolderArrowDown => FolderArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-arrow-down", "e053");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-arrow-down?f=classic&amp;s=light">Folder Arrow Down</a>
    /// </summary>
    public static Icon FolderDownload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FolderArrowDown;
    private static Icon? FolderArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-arrow-up?f=classic&amp;s=light">Folder Arrow Up</a>
    /// </summary>
    public static Icon FolderArrowUp => FolderArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-arrow-up", "e054");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-arrow-up?f=classic&amp;s=light">Folder Arrow Up</a>
    /// </summary>
    public static Icon FolderUpload => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FolderArrowUp;
    private static Icon? FolderBookmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-bookmark?f=classic&amp;s=light">Folder Bookmark</a>
    /// </summary>
    public static Icon FolderBookmark => FolderBookmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-bookmark", "e186");
    private static Icon? FolderCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-check?f=classic&amp;s=light">Folder Check</a>
    /// </summary>
    public static Icon FolderCheck => FolderCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-check", "e64e");
    private static Icon? FolderClosedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-closed?f=classic&amp;s=light">Folder Closed</a>
    /// </summary>
    public static Icon FolderClosed => FolderClosedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-closed", "e185");
    private static Icon? FolderGearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-gear?f=classic&amp;s=light">Folder Gear</a>
    /// </summary>
    public static Icon FolderGear => FolderGearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-gear", "e187");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-gear?f=classic&amp;s=light">Folder Gear</a>
    /// </summary>
    public static Icon FolderCog => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FolderGear;
    private static Icon? FolderGridf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-grid?f=classic&amp;s=light">Folder Grid</a>
    /// </summary>
    public static Icon FolderGrid => FolderGridf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-grid", "e188");
    private static Icon? FolderHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-heart?f=classic&amp;s=light">Folder Heart</a>
    /// </summary>
    public static Icon FolderHeart => FolderHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-heart", "e189");
    private static Icon? FolderImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-image?f=classic&amp;s=light">Folder Image</a>
    /// </summary>
    public static Icon FolderImage => FolderImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-image", "e18a");
    private static Icon? FolderMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-magnifying-glass?f=classic&amp;s=light">Folder Magnifying Glass</a>
    /// </summary>
    public static Icon FolderMagnifyingGlass => FolderMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-magnifying-glass", "e18b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-magnifying-glass?f=classic&amp;s=light">Folder Magnifying Glass</a>
    /// </summary>
    public static Icon FolderSearch => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FolderMagnifyingGlass;
    private static Icon? FolderMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-medical?f=classic&amp;s=light">Folder Medical</a>
    /// </summary>
    public static Icon FolderMedical => FolderMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-medical", "e18c");
    private static Icon? FolderMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-minus?f=classic&amp;s=light">Folder Minus</a>
    /// </summary>
    public static Icon FolderMinus => FolderMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-minus", "f65d");
    private static Icon? FolderMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-music?f=classic&amp;s=light">Folder Music</a>
    /// </summary>
    public static Icon FolderMusic => FolderMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-music", "e18d");
    private static Icon? FolderOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-open?f=classic&amp;s=light">Folder Open</a>
    /// </summary>
    public static Icon FolderOpen => FolderOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-open", "f07c");
    private static Icon? FolderPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-plus?f=classic&amp;s=light">Folder Plus</a>
    /// </summary>
    public static Icon FolderPlus => FolderPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-plus", "f65e");
    private static Icon? FolderTreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-tree?f=classic&amp;s=light">Folder Tree</a>
    /// </summary>
    public static Icon FolderTree => FolderTreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-tree", "f802");
    private static Icon? FolderUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-user?f=classic&amp;s=light">Folder User</a>
    /// </summary>
    public static Icon FolderUser => FolderUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-user", "e18e");
    private static Icon? FolderXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-xmark?f=classic&amp;s=light">Folder Xmark</a>
    /// </summary>
    public static Icon FolderXmark => FolderXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folder-xmark", "f65f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folder-xmark?f=classic&amp;s=light">Folder Xmark</a>
    /// </summary>
    public static Icon FolderTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FolderXmark;
    private static Icon? Foldersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/folders?f=classic&amp;s=light">Folders</a>
    /// </summary>
    public static Icon Folders => Foldersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "folders", "f660");
    private static Icon? FonduePotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fondue-pot?f=classic&amp;s=light">Fondue Pot</a>
    /// </summary>
    public static Icon FonduePot => FonduePotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fondue-pot", "e40d");
    private static Icon? Fontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/font?f=classic&amp;s=light">Font</a>
    /// </summary>
    public static Icon Font => Fontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "font", "f031");
    private static Icon? FontAwesomef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/font-awesome?f=classic&amp;s=light">Font Awesome</a>
    /// </summary>
    public static Icon FontAwesome => FontAwesomef ??= new Icon(IconFamily.Classic, IconStyle.Light, "font-awesome", "f2b4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/font-awesome?f=classic&amp;s=light">Font Awesome</a>
    /// </summary>
    public static Icon FontAwesomeFlag => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FontAwesome;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/font-awesome?f=classic&amp;s=light">Font Awesome</a>
    /// </summary>
    public static Icon FontAwesomeLogoFull => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.FontAwesome;
    private static Icon? FontCasef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/font-case?f=classic&amp;s=light">Font Case</a>
    /// </summary>
    public static Icon FontCase => FontCasef ??= new Icon(IconFamily.Classic, IconStyle.Light, "font-case", "f866");
    private static Icon? Footballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/football?f=classic&amp;s=light">Football</a>
    /// </summary>
    public static Icon Football => Footballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "football", "f44e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/football?f=classic&amp;s=light">Football</a>
    /// </summary>
    public static Icon FootballBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Football;
    private static Icon? FootballHelmetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/football-helmet?f=classic&amp;s=light">Football Helmet</a>
    /// </summary>
    public static Icon FootballHelmet => FootballHelmetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "football-helmet", "f44f");
    private static Icon? Forkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fork?f=classic&amp;s=light">Fork</a>
    /// </summary>
    public static Icon Fork => Forkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fork", "f2e3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fork?f=classic&amp;s=light">Fork</a>
    /// </summary>
    public static Icon UtensilFork => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Fork;
    private static Icon? ForkKnifef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fork-knife?f=classic&amp;s=light">Fork Knife</a>
    /// </summary>
    public static Icon ForkKnife => ForkKnifef ??= new Icon(IconFamily.Classic, IconStyle.Light, "fork-knife", "f2e6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fork-knife?f=classic&amp;s=light">Fork Knife</a>
    /// </summary>
    public static Icon UtensilsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ForkKnife;
    private static Icon? Forkliftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/forklift?f=classic&amp;s=light">Forklift</a>
    /// </summary>
    public static Icon Forklift => Forkliftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "forklift", "f47a");
    private static Icon? Fortf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/fort?f=classic&amp;s=light">Fort</a>
    /// </summary>
    public static Icon Fort => Fortf ??= new Icon(IconFamily.Classic, IconStyle.Light, "fort", "e486");
    private static Icon? Forwardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/forward?f=classic&amp;s=light">Forward</a>
    /// </summary>
    public static Icon Forward => Forwardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "forward", "f04e");
    private static Icon? ForwardFastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/forward-fast?f=classic&amp;s=light">Forward Fast</a>
    /// </summary>
    public static Icon ForwardFast => ForwardFastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "forward-fast", "f050");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/forward-fast?f=classic&amp;s=light">Forward Fast</a>
    /// </summary>
    public static Icon FastForward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ForwardFast;
    private static Icon? ForwardStepf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/forward-step?f=classic&amp;s=light">Forward Step</a>
    /// </summary>
    public static Icon ForwardStep => ForwardStepf ??= new Icon(IconFamily.Classic, IconStyle.Light, "forward-step", "f051");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/forward-step?f=classic&amp;s=light">Forward Step</a>
    /// </summary>
    public static Icon StepForward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ForwardStep;
    private static Icon? Framef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/frame?f=classic&amp;s=light">Frame</a>
    /// </summary>
    public static Icon Frame => Framef ??= new Icon(IconFamily.Classic, IconStyle.Light, "frame", "e495");
    private static Icon? FrancSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/franc-sign?f=classic&amp;s=light">Franc Sign</a>
    /// </summary>
    public static Icon FrancSign => FrancSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "franc-sign", "e18f");
    private static Icon? FrenchFriesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/french-fries?f=classic&amp;s=light">French Fries</a>
    /// </summary>
    public static Icon FrenchFries => FrenchFriesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "french-fries", "f803");
    private static Icon? Frogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/frog?f=classic&amp;s=light">Frog</a>
    /// </summary>
    public static Icon Frog => Frogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "frog", "f52e");
    private static Icon? Functionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/function?f=classic&amp;s=light">Function</a>
    /// </summary>
    public static Icon Function => Functionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "function", "f661");
    private static Icon? Futbolf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/futbol?f=classic&amp;s=light">Futbol</a>
    /// </summary>
    public static Icon Futbol => Futbolf ??= new Icon(IconFamily.Classic, IconStyle.Light, "futbol", "f1e3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/futbol?f=classic&amp;s=light">Futbol</a>
    /// </summary>
    public static Icon FutbolBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Futbol;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/futbol?f=classic&amp;s=light">Futbol</a>
    /// </summary>
    public static Icon SoccerBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Futbol;
    private static Icon? Gf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/g?f=classic&amp;s=light">G</a>
    /// </summary>
    public static Icon G => Gf ??= new Icon(IconFamily.Classic, IconStyle.Light, "g", "47");
    private static Icon? Galaxyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/galaxy?f=classic&amp;s=light">Galaxy</a>
    /// </summary>
    public static Icon Galaxy => Galaxyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "galaxy", "e008");
    private static Icon? GalleryThumbnailsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gallery-thumbnails?f=classic&amp;s=light">Gallery Thumbnails</a>
    /// </summary>
    public static Icon GalleryThumbnails => GalleryThumbnailsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gallery-thumbnails", "e3aa");
    private static Icon? GameBoardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/game-board?f=classic&amp;s=light">Game Board</a>
    /// </summary>
    public static Icon GameBoard => GameBoardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "game-board", "f867");
    private static Icon? GameBoardSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/game-board-simple?f=classic&amp;s=light">Game Board Simple</a>
    /// </summary>
    public static Icon GameBoardSimple => GameBoardSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "game-board-simple", "f868");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/game-board-simple?f=classic&amp;s=light">Game Board Simple</a>
    /// </summary>
    public static Icon GameBoardAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GameBoardSimple;
    private static Icon? GameConsoleHandheldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/game-console-handheld?f=classic&amp;s=light">Game Console Handheld</a>
    /// </summary>
    public static Icon GameConsoleHandheld => GameConsoleHandheldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "game-console-handheld", "f8bb");
    private static Icon? GameConsoleHandheldCrankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/game-console-handheld-crank?f=classic&amp;s=light">Game Console Handheld Crank</a>
    /// </summary>
    public static Icon GameConsoleHandheldCrank => GameConsoleHandheldCrankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "game-console-handheld-crank", "e5b9");
    private static Icon? Gamepadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gamepad?f=classic&amp;s=light">Gamepad</a>
    /// </summary>
    public static Icon Gamepad => Gamepadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gamepad", "f11b");
    private static Icon? GamepadModernf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gamepad-modern?f=classic&amp;s=light">Gamepad Modern</a>
    /// </summary>
    public static Icon GamepadModern => GamepadModernf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gamepad-modern", "e5a2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gamepad-modern?f=classic&amp;s=light">Gamepad Modern</a>
    /// </summary>
    public static Icon GamepadAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GamepadModern;
    private static Icon? Garagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/garage?f=classic&amp;s=light">Garage</a>
    /// </summary>
    public static Icon Garage => Garagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "garage", "e009");
    private static Icon? GarageCarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/garage-car?f=classic&amp;s=light">Garage Car</a>
    /// </summary>
    public static Icon GarageCar => GarageCarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "garage-car", "e00a");
    private static Icon? GarageOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/garage-open?f=classic&amp;s=light">Garage Open</a>
    /// </summary>
    public static Icon GarageOpen => GarageOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "garage-open", "e00b");
    private static Icon? Garlicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/garlic?f=classic&amp;s=light">Garlic</a>
    /// </summary>
    public static Icon Garlic => Garlicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "garlic", "e40e");
    private static Icon? GasPumpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gas-pump?f=classic&amp;s=light">Gas Pump</a>
    /// </summary>
    public static Icon GasPump => GasPumpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gas-pump", "f52f");
    private static Icon? GasPumpSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gas-pump-slash?f=classic&amp;s=light">Gas Pump Slash</a>
    /// </summary>
    public static Icon GasPumpSlash => GasPumpSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gas-pump-slash", "f5f4");
    private static Icon? Gaugef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge?f=classic&amp;s=light">Gauge</a>
    /// </summary>
    public static Icon Gauge => Gaugef ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge", "f624");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge?f=classic&amp;s=light">Gauge</a>
    /// </summary>
    public static Icon Dashboard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Gauge;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge?f=classic&amp;s=light">Gauge</a>
    /// </summary>
    public static Icon GaugeMed => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Gauge;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge?f=classic&amp;s=light">Gauge</a>
    /// </summary>
    public static Icon TachometerAltAverage => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Gauge;
    private static Icon? GaugeCircleBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-circle-bolt?f=classic&amp;s=light">Gauge Circle Bolt</a>
    /// </summary>
    public static Icon GaugeCircleBolt => GaugeCircleBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-circle-bolt", "e496");
    private static Icon? GaugeCircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-circle-minus?f=classic&amp;s=light">Gauge Circle Minus</a>
    /// </summary>
    public static Icon GaugeCircleMinus => GaugeCircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-circle-minus", "e497");
    private static Icon? GaugeCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-circle-plus?f=classic&amp;s=light">Gauge Circle Plus</a>
    /// </summary>
    public static Icon GaugeCirclePlus => GaugeCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-circle-plus", "e498");
    private static Icon? GaugeHighf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-high?f=classic&amp;s=light">Gauge High</a>
    /// </summary>
    public static Icon GaugeHigh => GaugeHighf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-high", "f625");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-high?f=classic&amp;s=light">Gauge High</a>
    /// </summary>
    public static Icon TachometerAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeHigh;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-high?f=classic&amp;s=light">Gauge High</a>
    /// </summary>
    public static Icon TachometerAltFast => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeHigh;
    private static Icon? GaugeLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-low?f=classic&amp;s=light">Gauge Low</a>
    /// </summary>
    public static Icon GaugeLow => GaugeLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-low", "f627");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-low?f=classic&amp;s=light">Gauge Low</a>
    /// </summary>
    public static Icon TachometerAltSlow => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeLow;
    private static Icon? GaugeMaxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-max?f=classic&amp;s=light">Gauge Max</a>
    /// </summary>
    public static Icon GaugeMax => GaugeMaxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-max", "f626");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-max?f=classic&amp;s=light">Gauge Max</a>
    /// </summary>
    public static Icon TachometerAltFastest => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeMax;
    private static Icon? GaugeMinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-min?f=classic&amp;s=light">Gauge Min</a>
    /// </summary>
    public static Icon GaugeMin => GaugeMinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-min", "f628");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-min?f=classic&amp;s=light">Gauge Min</a>
    /// </summary>
    public static Icon TachometerAltSlowest => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeMin;
    private static Icon? GaugeSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple?f=classic&amp;s=light">Gauge Simple</a>
    /// </summary>
    public static Icon GaugeSimple => GaugeSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-simple", "f629");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple?f=classic&amp;s=light">Gauge Simple</a>
    /// </summary>
    public static Icon GaugeSimpleMed => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimple;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple?f=classic&amp;s=light">Gauge Simple</a>
    /// </summary>
    public static Icon TachometerAverage => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimple;
    private static Icon? GaugeSimpleHighf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-high?f=classic&amp;s=light">Gauge Simple High</a>
    /// </summary>
    public static Icon GaugeSimpleHigh => GaugeSimpleHighf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-simple-high", "f62a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-high?f=classic&amp;s=light">Gauge Simple High</a>
    /// </summary>
    public static Icon Tachometer => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimpleHigh;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-high?f=classic&amp;s=light">Gauge Simple High</a>
    /// </summary>
    public static Icon TachometerFast => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimpleHigh;
    private static Icon? GaugeSimpleLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-low?f=classic&amp;s=light">Gauge Simple Low</a>
    /// </summary>
    public static Icon GaugeSimpleLow => GaugeSimpleLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-simple-low", "f62c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-low?f=classic&amp;s=light">Gauge Simple Low</a>
    /// </summary>
    public static Icon TachometerSlow => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimpleLow;
    private static Icon? GaugeSimpleMaxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-max?f=classic&amp;s=light">Gauge Simple Max</a>
    /// </summary>
    public static Icon GaugeSimpleMax => GaugeSimpleMaxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-simple-max", "f62b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-max?f=classic&amp;s=light">Gauge Simple Max</a>
    /// </summary>
    public static Icon TachometerFastest => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimpleMax;
    private static Icon? GaugeSimpleMinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-min?f=classic&amp;s=light">Gauge Simple Min</a>
    /// </summary>
    public static Icon GaugeSimpleMin => GaugeSimpleMinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gauge-simple-min", "f62d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gauge-simple-min?f=classic&amp;s=light">Gauge Simple Min</a>
    /// </summary>
    public static Icon TachometerSlowest => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GaugeSimpleMin;
    private static Icon? Gavelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gavel?f=classic&amp;s=light">Gavel</a>
    /// </summary>
    public static Icon Gavel => Gavelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gavel", "f0e3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gavel?f=classic&amp;s=light">Gavel</a>
    /// </summary>
    public static Icon Legal => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Gavel;
    private static Icon? Gearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gear?f=classic&amp;s=light">Gear</a>
    /// </summary>
    public static Icon Gear => Gearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gear", "f013");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gear?f=classic&amp;s=light">Gear</a>
    /// </summary>
    public static Icon Cog => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Gear;
    private static Icon? GearCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gear-code?f=classic&amp;s=light">Gear Code</a>
    /// </summary>
    public static Icon GearCode => GearCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "gear-code", "e5e8");
    private static Icon? GearComplexf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gear-complex?f=classic&amp;s=light">Gear Complex</a>
    /// </summary>
    public static Icon GearComplex => GearComplexf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gear-complex", "e5e9");
    private static Icon? GearComplexCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gear-complex-code?f=classic&amp;s=light">Gear Complex Code</a>
    /// </summary>
    public static Icon GearComplexCode => GearComplexCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "gear-complex-code", "e5eb");
    private static Icon? Gearsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gears?f=classic&amp;s=light">Gears</a>
    /// </summary>
    public static Icon Gears => Gearsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gears", "f085");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gears?f=classic&amp;s=light">Gears</a>
    /// </summary>
    public static Icon Cogs => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Gears;
    private static Icon? Gemf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gem?f=classic&amp;s=light">Gem</a>
    /// </summary>
    public static Icon Gem => Gemf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gem", "f3a5");
    private static Icon? Genderlessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/genderless?f=classic&amp;s=light">Genderless</a>
    /// </summary>
    public static Icon Genderless => Genderlessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "genderless", "f22d");
    private static Icon? Ghostf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ghost?f=classic&amp;s=light">Ghost</a>
    /// </summary>
    public static Icon Ghost => Ghostf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ghost", "f6e2");
    private static Icon? Giff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gif?f=classic&amp;s=light">Gif</a>
    /// </summary>
    public static Icon Gif => Giff ??= new Icon(IconFamily.Classic, IconStyle.Light, "gif", "e190");
    private static Icon? Giftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gift?f=classic&amp;s=light">Gift</a>
    /// </summary>
    public static Icon Gift => Giftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gift", "f06b");
    private static Icon? GiftCardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gift-card?f=classic&amp;s=light">Gift Card</a>
    /// </summary>
    public static Icon GiftCard => GiftCardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gift-card", "f663");
    private static Icon? Giftsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gifts?f=classic&amp;s=light">Gifts</a>
    /// </summary>
    public static Icon Gifts => Giftsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gifts", "f79c");
    private static Icon? GingerbreadManf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gingerbread-man?f=classic&amp;s=light">Gingerbread Man</a>
    /// </summary>
    public static Icon GingerbreadMan => GingerbreadManf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gingerbread-man", "f79d");
    private static Icon? Glassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass?f=classic&amp;s=light">Glass</a>
    /// </summary>
    public static Icon Glass => Glassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glass", "f804");
    private static Icon? GlassCitrusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-citrus?f=classic&amp;s=light">Glass Citrus</a>
    /// </summary>
    public static Icon GlassCitrus => GlassCitrusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glass-citrus", "f869");
    private static Icon? GlassEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-empty?f=classic&amp;s=light">Glass Empty</a>
    /// </summary>
    public static Icon GlassEmpty => GlassEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glass-empty", "e191");
    private static Icon? GlassHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-half?f=classic&amp;s=light">Glass Half</a>
    /// </summary>
    public static Icon GlassHalf => GlassHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "glass-half", "e192");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-half?f=classic&amp;s=light">Glass Half</a>
    /// </summary>
    public static Icon GlassHalfEmpty => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GlassHalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-half?f=classic&amp;s=light">Glass Half</a>
    /// </summary>
    public static Icon GlassHalfFull => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GlassHalf;
    private static Icon? GlassWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-water?f=classic&amp;s=light">Glass Water</a>
    /// </summary>
    public static Icon GlassWater => GlassWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glass-water", "e4f4");
    private static Icon? GlassWaterDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glass-water-droplet?f=classic&amp;s=light">Glass Water Droplet</a>
    /// </summary>
    public static Icon GlassWaterDroplet => GlassWaterDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glass-water-droplet", "e4f5");
    private static Icon? Glassesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glasses?f=classic&amp;s=light">Glasses</a>
    /// </summary>
    public static Icon Glasses => Glassesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glasses", "f530");
    private static Icon? GlassesRoundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glasses-round?f=classic&amp;s=light">Glasses Round</a>
    /// </summary>
    public static Icon GlassesRound => GlassesRoundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "glasses-round", "f5f5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/glasses-round?f=classic&amp;s=light">Glasses Round</a>
    /// </summary>
    public static Icon GlassesAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GlassesRound;
    private static Icon? Globef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/globe?f=classic&amp;s=light">Globe</a>
    /// </summary>
    public static Icon Globe => Globef ??= new Icon(IconFamily.Classic, IconStyle.Light, "globe", "f0ac");
    private static Icon? GlobePointerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/globe-pointer?f=classic&amp;s=light">Globe Pointer</a>
    /// </summary>
    public static Icon GlobePointer => GlobePointerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "globe-pointer", "e60e");
    private static Icon? GlobeSnowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/globe-snow?f=classic&amp;s=light">Globe Snow</a>
    /// </summary>
    public static Icon GlobeSnow => GlobeSnowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "globe-snow", "f7a3");
    private static Icon? GlobeStandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/globe-stand?f=classic&amp;s=light">Globe Stand</a>
    /// </summary>
    public static Icon GlobeStand => GlobeStandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "globe-stand", "f5f6");
    private static Icon? GoalNetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/goal-net?f=classic&amp;s=light">Goal Net</a>
    /// </summary>
    public static Icon GoalNet => GoalNetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "goal-net", "e3ab");
    private static Icon? GolfBallTeef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/golf-ball-tee?f=classic&amp;s=light">Golf Ball Tee</a>
    /// </summary>
    public static Icon GolfBallTee => GolfBallTeef ??= new Icon(IconFamily.Classic, IconStyle.Light, "golf-ball-tee", "f450");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/golf-ball-tee?f=classic&amp;s=light">Golf Ball Tee</a>
    /// </summary>
    public static Icon GolfBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GolfBallTee;
    private static Icon? GolfClubf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/golf-club?f=classic&amp;s=light">Golf Club</a>
    /// </summary>
    public static Icon GolfClub => GolfClubf ??= new Icon(IconFamily.Classic, IconStyle.Light, "golf-club", "f451");
    private static Icon? GolfFlagHolef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/golf-flag-hole?f=classic&amp;s=light">Golf Flag Hole</a>
    /// </summary>
    public static Icon GolfFlagHole => GolfFlagHolef ??= new Icon(IconFamily.Classic, IconStyle.Light, "golf-flag-hole", "e3ac");
    private static Icon? Gopuramf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gopuram?f=classic&amp;s=light">Gopuram</a>
    /// </summary>
    public static Icon Gopuram => Gopuramf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gopuram", "f664");
    private static Icon? GraduationCapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/graduation-cap?f=classic&amp;s=light">Graduation Cap</a>
    /// </summary>
    public static Icon GraduationCap => GraduationCapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "graduation-cap", "f19d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/graduation-cap?f=classic&amp;s=light">Graduation Cap</a>
    /// </summary>
    public static Icon MortarBoard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.GraduationCap;
    private static Icon? Gramophonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gramophone?f=classic&amp;s=light">Gramophone</a>
    /// </summary>
    public static Icon Gramophone => Gramophonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "gramophone", "f8bd");
    private static Icon? Grapesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grapes?f=classic&amp;s=light">Grapes</a>
    /// </summary>
    public static Icon Grapes => Grapesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grapes", "e306");
    private static Icon? Gratef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grate?f=classic&amp;s=light">Grate</a>
    /// </summary>
    public static Icon Grate => Gratef ??= new Icon(IconFamily.Classic, IconStyle.Light, "grate", "e193");
    private static Icon? GrateDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grate-droplet?f=classic&amp;s=light">Grate Droplet</a>
    /// </summary>
    public static Icon GrateDroplet => GrateDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grate-droplet", "e194");
    private static Icon? GreaterThanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/greater-than?f=classic&amp;s=light">Greater Than</a>
    /// </summary>
    public static Icon GreaterThan => GreaterThanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "greater-than", "3e");
    private static Icon? GreaterThanEqualf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/greater-than-equal?f=classic&amp;s=light">Greater Than Equal</a>
    /// </summary>
    public static Icon GreaterThanEqual => GreaterThanEqualf ??= new Icon(IconFamily.Classic, IconStyle.Light, "greater-than-equal", "f532");
    private static Icon? Gridf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid?f=classic&amp;s=light">Grid</a>
    /// </summary>
    public static Icon Grid => Gridf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid", "e195");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid?f=classic&amp;s=light">Grid</a>
    /// </summary>
    public static Icon Grid3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Grid;
    private static Icon? Grid2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-2?f=classic&amp;s=light">Grid 2</a>
    /// </summary>
    public static Icon Grid2 => Grid2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-2", "e196");
    private static Icon? Grid2Plusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-2-plus?f=classic&amp;s=light">Grid 2 Plus</a>
    /// </summary>
    public static Icon Grid2Plus => Grid2Plusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-2-plus", "e197");
    private static Icon? Grid4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-4?f=classic&amp;s=light">Grid 4</a>
    /// </summary>
    public static Icon Grid4 => Grid4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-4", "e198");
    private static Icon? Grid5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-5?f=classic&amp;s=light">Grid 5</a>
    /// </summary>
    public static Icon Grid5 => Grid5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-5", "e199");
    private static Icon? GridDividersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-dividers?f=classic&amp;s=light">Grid Dividers</a>
    /// </summary>
    public static Icon GridDividers => GridDividersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-dividers", "e3ad");
    private static Icon? GridHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-horizontal?f=classic&amp;s=light">Grid Horizontal</a>
    /// </summary>
    public static Icon GridHorizontal => GridHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-horizontal", "e307");
    private static Icon? GridRoundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-round?f=classic&amp;s=light">Grid Round</a>
    /// </summary>
    public static Icon GridRound => GridRoundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-round", "e5da");
    private static Icon? GridRound2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-round-2?f=classic&amp;s=light">Grid Round 2</a>
    /// </summary>
    public static Icon GridRound2 => GridRound2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-round-2", "e5db");
    private static Icon? GridRound2Plusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-round-2-plus?f=classic&amp;s=light">Grid Round 2 Plus</a>
    /// </summary>
    public static Icon GridRound2Plus => GridRound2Plusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-round-2-plus", "e5dc");
    private static Icon? GridRound4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-round-4?f=classic&amp;s=light">Grid Round 4</a>
    /// </summary>
    public static Icon GridRound4 => GridRound4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-round-4", "e5dd");
    private static Icon? GridRound5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grid-round-5?f=classic&amp;s=light">Grid Round 5</a>
    /// </summary>
    public static Icon GridRound5 => GridRound5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "grid-round-5", "e5de");
    private static Icon? Grillf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grill?f=classic&amp;s=light">Grill</a>
    /// </summary>
    public static Icon Grill => Grillf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grill", "e5a3");
    private static Icon? GrillFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grill-fire?f=classic&amp;s=light">Grill Fire</a>
    /// </summary>
    public static Icon GrillFire => GrillFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "grill-fire", "e5a4");
    private static Icon? GrillHotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grill-hot?f=classic&amp;s=light">Grill Hot</a>
    /// </summary>
    public static Icon GrillHot => GrillHotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grill-hot", "e5a5");
    private static Icon? Gripf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip?f=classic&amp;s=light">Grip</a>
    /// </summary>
    public static Icon Grip => Gripf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grip", "f58d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip?f=classic&amp;s=light">Grip</a>
    /// </summary>
    public static Icon GripHorizontal => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Grip;
    private static Icon? GripDotsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip-dots?f=classic&amp;s=light">Grip Dots</a>
    /// </summary>
    public static Icon GripDots => GripDotsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grip-dots", "e410");
    private static Icon? GripDotsVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip-dots-vertical?f=classic&amp;s=light">Grip Dots Vertical</a>
    /// </summary>
    public static Icon GripDotsVertical => GripDotsVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grip-dots-vertical", "e411");
    private static Icon? GripLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip-lines?f=classic&amp;s=light">Grip Lines</a>
    /// </summary>
    public static Icon GripLines => GripLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grip-lines", "f7a4");
    private static Icon? GripLinesVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip-lines-vertical?f=classic&amp;s=light">Grip Lines Vertical</a>
    /// </summary>
    public static Icon GripLinesVertical => GripLinesVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grip-lines-vertical", "f7a5");
    private static Icon? GripVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/grip-vertical?f=classic&amp;s=light">Grip Vertical</a>
    /// </summary>
    public static Icon GripVertical => GripVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "grip-vertical", "f58e");
    private static Icon? GroupArrowsRotatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/group-arrows-rotate?f=classic&amp;s=light">Group Arrows Rotate</a>
    /// </summary>
    public static Icon GroupArrowsRotate => GroupArrowsRotatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "group-arrows-rotate", "e4f6");
    private static Icon? GuaraniSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/guarani-sign?f=classic&amp;s=light">Guarani Sign</a>
    /// </summary>
    public static Icon GuaraniSign => GuaraniSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "guarani-sign", "e19a");
    private static Icon? Guitarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/guitar?f=classic&amp;s=light">Guitar</a>
    /// </summary>
    public static Icon Guitar => Guitarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "guitar", "f7a6");
    private static Icon? GuitarElectricf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/guitar-electric?f=classic&amp;s=light">Guitar Electric</a>
    /// </summary>
    public static Icon GuitarElectric => GuitarElectricf ??= new Icon(IconFamily.Classic, IconStyle.Light, "guitar-electric", "f8be");
    private static Icon? Guitarsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/guitars?f=classic&amp;s=light">Guitars</a>
    /// </summary>
    public static Icon Guitars => Guitarsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "guitars", "f8bf");
    private static Icon? Gunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gun?f=classic&amp;s=light">Gun</a>
    /// </summary>
    public static Icon Gun => Gunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gun", "e19b");
    private static Icon? GunSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gun-slash?f=classic&amp;s=light">Gun Slash</a>
    /// </summary>
    public static Icon GunSlash => GunSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gun-slash", "e19c");
    private static Icon? GunSquirtf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/gun-squirt?f=classic&amp;s=light">Gun Squirt</a>
    /// </summary>
    public static Icon GunSquirt => GunSquirtf ??= new Icon(IconFamily.Classic, IconStyle.Light, "gun-squirt", "e19d");
    private static Icon? Hf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h?f=classic&amp;s=light">H</a>
    /// </summary>
    public static Icon H => Hf ??= new Icon(IconFamily.Classic, IconStyle.Light, "h", "48");
    private static Icon? H1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h1?f=classic&amp;s=light">H1</a>
    /// </summary>
    public static Icon H1 => H1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "h1", "f313");
    private static Icon? H2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h2?f=classic&amp;s=light">H2</a>
    /// </summary>
    public static Icon H2 => H2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "h2", "f314");
    private static Icon? H3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h3?f=classic&amp;s=light">H3</a>
    /// </summary>
    public static Icon H3 => H3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "h3", "f315");
    private static Icon? H4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h4?f=classic&amp;s=light">H4</a>
    /// </summary>
    public static Icon H4 => H4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "h4", "f86a");
    private static Icon? H5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h5?f=classic&amp;s=light">H5</a>
    /// </summary>
    public static Icon H5 => H5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "h5", "e412");
    private static Icon? H6f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/h6?f=classic&amp;s=light">H6</a>
    /// </summary>
    public static Icon H6 => H6f ??= new Icon(IconFamily.Classic, IconStyle.Light, "h6", "e413");
    private static Icon? Hammerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hammer?f=classic&amp;s=light">Hammer</a>
    /// </summary>
    public static Icon Hammer => Hammerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hammer", "f6e3");
    private static Icon? HammerBrushf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hammer-brush?f=classic&amp;s=light">Hammer Brush</a>
    /// </summary>
    public static Icon HammerBrush => HammerBrushf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hammer-brush", "e620");
    private static Icon? HammerCrashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hammer-crash?f=classic&amp;s=light">Hammer Crash</a>
    /// </summary>
    public static Icon HammerCrash => HammerCrashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hammer-crash", "e414");
    private static Icon? HammerWarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hammer-war?f=classic&amp;s=light">Hammer War</a>
    /// </summary>
    public static Icon HammerWar => HammerWarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hammer-war", "f6e4");
    private static Icon? Hamsaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hamsa?f=classic&amp;s=light">Hamsa</a>
    /// </summary>
    public static Icon Hamsa => Hamsaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hamsa", "f665");
    private static Icon? Handf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand?f=classic&amp;s=light">Hand</a>
    /// </summary>
    public static Icon Hand => Handf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand", "f256");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand?f=classic&amp;s=light">Hand</a>
    /// </summary>
    public static Icon HandPaper => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Hand;
    private static Icon? HandBackFistf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-fist?f=classic&amp;s=light">Hand Back Fist</a>
    /// </summary>
    public static Icon HandBackFist => HandBackFistf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-back-fist", "f255");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-fist?f=classic&amp;s=light">Hand Back Fist</a>
    /// </summary>
    public static Icon HandRock => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandBackFist;
    private static Icon? HandBackPointDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-point-down?f=classic&amp;s=light">Hand Back Point Down</a>
    /// </summary>
    public static Icon HandBackPointDown => HandBackPointDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-back-point-down", "e19e");
    private static Icon? HandBackPointLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-point-left?f=classic&amp;s=light">Hand Back Point Left</a>
    /// </summary>
    public static Icon HandBackPointLeft => HandBackPointLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-back-point-left", "e19f");
    private static Icon? HandBackPointRibbonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-point-ribbon?f=classic&amp;s=light">Hand Back Point Ribbon</a>
    /// </summary>
    public static Icon HandBackPointRibbon => HandBackPointRibbonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-back-point-ribbon", "e1a0");
    private static Icon? HandBackPointRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-point-right?f=classic&amp;s=light">Hand Back Point Right</a>
    /// </summary>
    public static Icon HandBackPointRight => HandBackPointRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-back-point-right", "e1a1");
    private static Icon? HandBackPointUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-back-point-up?f=classic&amp;s=light">Hand Back Point Up</a>
    /// </summary>
    public static Icon HandBackPointUp => HandBackPointUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-back-point-up", "e1a2");
    private static Icon? HandDotsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-dots?f=classic&amp;s=light">Hand Dots</a>
    /// </summary>
    public static Icon HandDots => HandDotsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-dots", "f461");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-dots?f=classic&amp;s=light">Hand Dots</a>
    /// </summary>
    public static Icon Allergies => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandDots;
    private static Icon? HandFingersCrossedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-fingers-crossed?f=classic&amp;s=light">Hand Fingers Crossed</a>
    /// </summary>
    public static Icon HandFingersCrossed => HandFingersCrossedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-fingers-crossed", "e1a3");
    private static Icon? HandFistf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-fist?f=classic&amp;s=light">Hand Fist</a>
    /// </summary>
    public static Icon HandFist => HandFistf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-fist", "f6de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-fist?f=classic&amp;s=light">Hand Fist</a>
    /// </summary>
    public static Icon FistRaised => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandFist;
    private static Icon? HandHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-heart?f=classic&amp;s=light">Hand Heart</a>
    /// </summary>
    public static Icon HandHeart => HandHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-heart", "f4bc");
    private static Icon? HandHoldingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding?f=classic&amp;s=light">Hand Holding</a>
    /// </summary>
    public static Icon HandHolding => HandHoldingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding", "f4bd");
    private static Icon? HandHoldingBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-box?f=classic&amp;s=light">Hand Holding Box</a>
    /// </summary>
    public static Icon HandHoldingBox => HandHoldingBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-box", "f47b");
    private static Icon? HandHoldingCircleDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-circle-dollar?f=classic&amp;s=light">Hand Holding Circle Dollar</a>
    /// </summary>
    public static Icon HandHoldingCircleDollar => HandHoldingCircleDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-circle-dollar", "e621");
    private static Icon? HandHoldingDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-dollar?f=classic&amp;s=light">Hand Holding Dollar</a>
    /// </summary>
    public static Icon HandHoldingDollar => HandHoldingDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-dollar", "f4c0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-dollar?f=classic&amp;s=light">Hand Holding Dollar</a>
    /// </summary>
    public static Icon HandHoldingUsd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandHoldingDollar;
    private static Icon? HandHoldingDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-droplet?f=classic&amp;s=light">Hand Holding Droplet</a>
    /// </summary>
    public static Icon HandHoldingDroplet => HandHoldingDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-droplet", "f4c1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-droplet?f=classic&amp;s=light">Hand Holding Droplet</a>
    /// </summary>
    public static Icon HandHoldingWater => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandHoldingDroplet;
    private static Icon? HandHoldingHandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-hand?f=classic&amp;s=light">Hand Holding Hand</a>
    /// </summary>
    public static Icon HandHoldingHand => HandHoldingHandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-hand", "e4f7");
    private static Icon? HandHoldingHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-heart?f=classic&amp;s=light">Hand Holding Heart</a>
    /// </summary>
    public static Icon HandHoldingHeart => HandHoldingHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-heart", "f4be");
    private static Icon? HandHoldingMagicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-magic?f=classic&amp;s=light">Hand Holding Magic</a>
    /// </summary>
    public static Icon HandHoldingMagic => HandHoldingMagicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-magic", "f6e5");
    private static Icon? HandHoldingMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-medical?f=classic&amp;s=light">Hand Holding Medical</a>
    /// </summary>
    public static Icon HandHoldingMedical => HandHoldingMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-medical", "e05c");
    private static Icon? HandHoldingSeedlingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-seedling?f=classic&amp;s=light">Hand Holding Seedling</a>
    /// </summary>
    public static Icon HandHoldingSeedling => HandHoldingSeedlingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-seedling", "f4bf");
    private static Icon? HandHoldingSkullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-holding-skull?f=classic&amp;s=light">Hand Holding Skull</a>
    /// </summary>
    public static Icon HandHoldingSkull => HandHoldingSkullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-holding-skull", "e1a4");
    private static Icon? HandHornsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-horns?f=classic&amp;s=light">Hand Horns</a>
    /// </summary>
    public static Icon HandHorns => HandHornsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-horns", "e1a9");
    private static Icon? HandLizardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-lizard?f=classic&amp;s=light">Hand Lizard</a>
    /// </summary>
    public static Icon HandLizard => HandLizardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-lizard", "f258");
    private static Icon? HandLovef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-love?f=classic&amp;s=light">Hand Love</a>
    /// </summary>
    public static Icon HandLove => HandLovef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-love", "e1a5");
    private static Icon? HandMiddleFingerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-middle-finger?f=classic&amp;s=light">Hand Middle Finger</a>
    /// </summary>
    public static Icon HandMiddleFinger => HandMiddleFingerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-middle-finger", "f806");
    private static Icon? HandPeacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-peace?f=classic&amp;s=light">Hand Peace</a>
    /// </summary>
    public static Icon HandPeace => HandPeacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-peace", "f25b");
    private static Icon? HandPointDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-point-down?f=classic&amp;s=light">Hand Point Down</a>
    /// </summary>
    public static Icon HandPointDown => HandPointDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-point-down", "f0a7");
    private static Icon? HandPointLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-point-left?f=classic&amp;s=light">Hand Point Left</a>
    /// </summary>
    public static Icon HandPointLeft => HandPointLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-point-left", "f0a5");
    private static Icon? HandPointRibbonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-point-ribbon?f=classic&amp;s=light">Hand Point Ribbon</a>
    /// </summary>
    public static Icon HandPointRibbon => HandPointRibbonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-point-ribbon", "e1a6");
    private static Icon? HandPointRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-point-right?f=classic&amp;s=light">Hand Point Right</a>
    /// </summary>
    public static Icon HandPointRight => HandPointRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-point-right", "f0a4");
    private static Icon? HandPointUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-point-up?f=classic&amp;s=light">Hand Point Up</a>
    /// </summary>
    public static Icon HandPointUp => HandPointUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-point-up", "f0a6");
    private static Icon? HandPointerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-pointer?f=classic&amp;s=light">Hand Pointer</a>
    /// </summary>
    public static Icon HandPointer => HandPointerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-pointer", "f25a");
    private static Icon? HandScissorsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-scissors?f=classic&amp;s=light">Hand Scissors</a>
    /// </summary>
    public static Icon HandScissors => HandScissorsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-scissors", "f257");
    private static Icon? HandSparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-sparkles?f=classic&amp;s=light">Hand Sparkles</a>
    /// </summary>
    public static Icon HandSparkles => HandSparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-sparkles", "e05d");
    private static Icon? HandSpockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-spock?f=classic&amp;s=light">Hand Spock</a>
    /// </summary>
    public static Icon HandSpock => HandSpockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-spock", "f259");
    private static Icon? HandWavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hand-wave?f=classic&amp;s=light">Hand Wave</a>
    /// </summary>
    public static Icon HandWave => HandWavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hand-wave", "e1a7");
    private static Icon? Handcuffsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handcuffs?f=classic&amp;s=light">Handcuffs</a>
    /// </summary>
    public static Icon Handcuffs => Handcuffsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "handcuffs", "e4f8");
    private static Icon? Handsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands?f=classic&amp;s=light">Hands</a>
    /// </summary>
    public static Icon Hands => Handsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands", "f2a7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands?f=classic&amp;s=light">Hands</a>
    /// </summary>
    public static Icon SignLanguage => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Hands;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands?f=classic&amp;s=light">Hands</a>
    /// </summary>
    public static Icon Signing => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Hands;
    private static Icon? HandsAslInterpretingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-asl-interpreting?f=classic&amp;s=light">Hands Asl Interpreting</a>
    /// </summary>
    public static Icon HandsAslInterpreting => HandsAslInterpretingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-asl-interpreting", "f2a3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-asl-interpreting?f=classic&amp;s=light">Hands Asl Interpreting</a>
    /// </summary>
    public static Icon AmericanSignLanguageInterpreting => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsAslInterpreting;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-asl-interpreting?f=classic&amp;s=light">Hands Asl Interpreting</a>
    /// </summary>
    public static Icon AslInterpreting => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsAslInterpreting;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-asl-interpreting?f=classic&amp;s=light">Hands Asl Interpreting</a>
    /// </summary>
    public static Icon HandsAmericanSignLanguageInterpreting => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsAslInterpreting;
    private static Icon? HandsBoundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-bound?f=classic&amp;s=light">Hands Bound</a>
    /// </summary>
    public static Icon HandsBound => HandsBoundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-bound", "e4f9");
    private static Icon? HandsBubblesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-bubbles?f=classic&amp;s=light">Hands Bubbles</a>
    /// </summary>
    public static Icon HandsBubbles => HandsBubblesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-bubbles", "e05e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-bubbles?f=classic&amp;s=light">Hands Bubbles</a>
    /// </summary>
    public static Icon HandsWash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsBubbles;
    private static Icon? HandsClappingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-clapping?f=classic&amp;s=light">Hands Clapping</a>
    /// </summary>
    public static Icon HandsClapping => HandsClappingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-clapping", "e1a8");
    private static Icon? HandsHoldingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding?f=classic&amp;s=light">Hands Holding</a>
    /// </summary>
    public static Icon HandsHolding => HandsHoldingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-holding", "f4c2");
    private static Icon? HandsHoldingChildf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-child?f=classic&amp;s=light">Hands Holding Child</a>
    /// </summary>
    public static Icon HandsHoldingChild => HandsHoldingChildf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-holding-child", "e4fa");
    private static Icon? HandsHoldingCirclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-circle?f=classic&amp;s=light">Hands Holding Circle</a>
    /// </summary>
    public static Icon HandsHoldingCircle => HandsHoldingCirclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-holding-circle", "e4fb");
    private static Icon? HandsHoldingDiamondf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-diamond?f=classic&amp;s=light">Hands Holding Diamond</a>
    /// </summary>
    public static Icon HandsHoldingDiamond => HandsHoldingDiamondf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-holding-diamond", "f47c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-diamond?f=classic&amp;s=light">Hands Holding Diamond</a>
    /// </summary>
    public static Icon HandReceiving => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsHoldingDiamond;
    private static Icon? HandsHoldingDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-dollar?f=classic&amp;s=light">Hands Holding Dollar</a>
    /// </summary>
    public static Icon HandsHoldingDollar => HandsHoldingDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-holding-dollar", "f4c5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-dollar?f=classic&amp;s=light">Hands Holding Dollar</a>
    /// </summary>
    public static Icon HandsUsd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsHoldingDollar;
    private static Icon? HandsHoldingHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-heart?f=classic&amp;s=light">Hands Holding Heart</a>
    /// </summary>
    public static Icon HandsHoldingHeart => HandsHoldingHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-holding-heart", "f4c3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-holding-heart?f=classic&amp;s=light">Hands Holding Heart</a>
    /// </summary>
    public static Icon HandsHeart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsHoldingHeart;
    private static Icon? HandsPrayingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-praying?f=classic&amp;s=light">Hands Praying</a>
    /// </summary>
    public static Icon HandsPraying => HandsPrayingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hands-praying", "f684");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hands-praying?f=classic&amp;s=light">Hands Praying</a>
    /// </summary>
    public static Icon PrayingHands => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandsPraying;
    private static Icon? Handshakef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake?f=classic&amp;s=light">Handshake</a>
    /// </summary>
    public static Icon Handshake => Handshakef ??= new Icon(IconFamily.Classic, IconStyle.Light, "handshake", "f2b5");
    private static Icon? HandshakeAnglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-angle?f=classic&amp;s=light">Handshake Angle</a>
    /// </summary>
    public static Icon HandshakeAngle => HandshakeAnglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "handshake-angle", "f4c4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-angle?f=classic&amp;s=light">Handshake Angle</a>
    /// </summary>
    public static Icon HandsHelping => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandshakeAngle;
    private static Icon? HandshakeSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-simple?f=classic&amp;s=light">Handshake Simple</a>
    /// </summary>
    public static Icon HandshakeSimple => HandshakeSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "handshake-simple", "f4c6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-simple?f=classic&amp;s=light">Handshake Simple</a>
    /// </summary>
    public static Icon HandshakeAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandshakeSimple;
    private static Icon? HandshakeSimpleSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-simple-slash?f=classic&amp;s=light">Handshake Simple Slash</a>
    /// </summary>
    public static Icon HandshakeSimpleSlash => HandshakeSimpleSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "handshake-simple-slash", "e05f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-simple-slash?f=classic&amp;s=light">Handshake Simple Slash</a>
    /// </summary>
    public static Icon HandshakeAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HandshakeSimpleSlash;
    private static Icon? HandshakeSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/handshake-slash?f=classic&amp;s=light">Handshake Slash</a>
    /// </summary>
    public static Icon HandshakeSlash => HandshakeSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "handshake-slash", "e060");
    private static Icon? Hanukiahf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hanukiah?f=classic&amp;s=light">Hanukiah</a>
    /// </summary>
    public static Icon Hanukiah => Hanukiahf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hanukiah", "f6e6");
    private static Icon? HardDrivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hard-drive?f=classic&amp;s=light">Hard Drive</a>
    /// </summary>
    public static Icon HardDrive => HardDrivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hard-drive", "f0a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hard-drive?f=classic&amp;s=light">Hard Drive</a>
    /// </summary>
    public static Icon Hdd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HardDrive;
    private static Icon? Hashtagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hashtag?f=classic&amp;s=light">Hashtag</a>
    /// </summary>
    public static Icon Hashtag => Hashtagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hashtag", "23");
    private static Icon? HashtagLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hashtag-lock?f=classic&amp;s=light">Hashtag Lock</a>
    /// </summary>
    public static Icon HashtagLock => HashtagLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hashtag-lock", "e415");
    private static Icon? HatBeachf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-beach?f=classic&amp;s=light">Hat Beach</a>
    /// </summary>
    public static Icon HatBeach => HatBeachf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-beach", "e606");
    private static Icon? HatCheff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-chef?f=classic&amp;s=light">Hat Chef</a>
    /// </summary>
    public static Icon HatChef => HatCheff ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-chef", "f86b");
    private static Icon? HatCowboyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-cowboy?f=classic&amp;s=light">Hat Cowboy</a>
    /// </summary>
    public static Icon HatCowboy => HatCowboyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-cowboy", "f8c0");
    private static Icon? HatCowboySidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-cowboy-side?f=classic&amp;s=light">Hat Cowboy Side</a>
    /// </summary>
    public static Icon HatCowboySide => HatCowboySidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-cowboy-side", "f8c1");
    private static Icon? HatSantaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-santa?f=classic&amp;s=light">Hat Santa</a>
    /// </summary>
    public static Icon HatSanta => HatSantaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-santa", "f7a7");
    private static Icon? HatWinterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-winter?f=classic&amp;s=light">Hat Winter</a>
    /// </summary>
    public static Icon HatWinter => HatWinterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-winter", "f7a8");
    private static Icon? HatWitchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-witch?f=classic&amp;s=light">Hat Witch</a>
    /// </summary>
    public static Icon HatWitch => HatWitchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-witch", "f6e7");
    private static Icon? HatWizardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hat-wizard?f=classic&amp;s=light">Hat Wizard</a>
    /// </summary>
    public static Icon HatWizard => HatWizardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hat-wizard", "f6e8");
    private static Icon? HeadSidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side?f=classic&amp;s=light">Head Side</a>
    /// </summary>
    public static Icon HeadSide => HeadSidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side", "f6e9");
    private static Icon? HeadSideBrainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-brain?f=classic&amp;s=light">Head Side Brain</a>
    /// </summary>
    public static Icon HeadSideBrain => HeadSideBrainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-brain", "f808");
    private static Icon? HeadSideCoughf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-cough?f=classic&amp;s=light">Head Side Cough</a>
    /// </summary>
    public static Icon HeadSideCough => HeadSideCoughf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-cough", "e061");
    private static Icon? HeadSideCoughSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-cough-slash?f=classic&amp;s=light">Head Side Cough Slash</a>
    /// </summary>
    public static Icon HeadSideCoughSlash => HeadSideCoughSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-cough-slash", "e062");
    private static Icon? HeadSideGearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-gear?f=classic&amp;s=light">Head Side Gear</a>
    /// </summary>
    public static Icon HeadSideGear => HeadSideGearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-gear", "e611");
    private static Icon? HeadSideGogglesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-goggles?f=classic&amp;s=light">Head Side Goggles</a>
    /// </summary>
    public static Icon HeadSideGoggles => HeadSideGogglesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-goggles", "f6ea");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-goggles?f=classic&amp;s=light">Head Side Goggles</a>
    /// </summary>
    public static Icon HeadVr => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HeadSideGoggles;
    private static Icon? HeadSideHeadphonesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-headphones?f=classic&amp;s=light">Head Side Headphones</a>
    /// </summary>
    public static Icon HeadSideHeadphones => HeadSideHeadphonesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-headphones", "f8c2");
    private static Icon? HeadSideHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-heart?f=classic&amp;s=light">Head Side Heart</a>
    /// </summary>
    public static Icon HeadSideHeart => HeadSideHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-heart", "e1aa");
    private static Icon? HeadSideMaskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-mask?f=classic&amp;s=light">Head Side Mask</a>
    /// </summary>
    public static Icon HeadSideMask => HeadSideMaskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-mask", "e063");
    private static Icon? HeadSideMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-medical?f=classic&amp;s=light">Head Side Medical</a>
    /// </summary>
    public static Icon HeadSideMedical => HeadSideMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-medical", "f809");
    private static Icon? HeadSideVirusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/head-side-virus?f=classic&amp;s=light">Head Side Virus</a>
    /// </summary>
    public static Icon HeadSideVirus => HeadSideVirusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "head-side-virus", "e064");
    private static Icon? Headingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heading?f=classic&amp;s=light">Heading</a>
    /// </summary>
    public static Icon Heading => Headingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heading", "f1dc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heading?f=classic&amp;s=light">Heading</a>
    /// </summary>
    public static Icon Header => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Heading;
    private static Icon? Headphonesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/headphones?f=classic&amp;s=light">Headphones</a>
    /// </summary>
    public static Icon Headphones => Headphonesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "headphones", "f025");
    private static Icon? HeadphonesSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/headphones-simple?f=classic&amp;s=light">Headphones Simple</a>
    /// </summary>
    public static Icon HeadphonesSimple => HeadphonesSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "headphones-simple", "f58f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/headphones-simple?f=classic&amp;s=light">Headphones Simple</a>
    /// </summary>
    public static Icon HeadphonesAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HeadphonesSimple;
    private static Icon? Headsetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/headset?f=classic&amp;s=light">Headset</a>
    /// </summary>
    public static Icon Headset => Headsetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "headset", "f590");
    private static Icon? Heartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart?f=classic&amp;s=light">Heart</a>
    /// </summary>
    public static Icon Heart => Heartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart", "f004");
    private static Icon? HeartCircleBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-circle-bolt?f=classic&amp;s=light">Heart Circle Bolt</a>
    /// </summary>
    public static Icon HeartCircleBolt => HeartCircleBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-circle-bolt", "e4fc");
    private static Icon? HeartCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-circle-check?f=classic&amp;s=light">Heart Circle Check</a>
    /// </summary>
    public static Icon HeartCircleCheck => HeartCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-circle-check", "e4fd");
    private static Icon? HeartCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-circle-exclamation?f=classic&amp;s=light">Heart Circle Exclamation</a>
    /// </summary>
    public static Icon HeartCircleExclamation => HeartCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-circle-exclamation", "e4fe");
    private static Icon? HeartCircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-circle-minus?f=classic&amp;s=light">Heart Circle Minus</a>
    /// </summary>
    public static Icon HeartCircleMinus => HeartCircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-circle-minus", "e4ff");
    private static Icon? HeartCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-circle-plus?f=classic&amp;s=light">Heart Circle Plus</a>
    /// </summary>
    public static Icon HeartCirclePlus => HeartCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-circle-plus", "e500");
    private static Icon? HeartCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-circle-xmark?f=classic&amp;s=light">Heart Circle Xmark</a>
    /// </summary>
    public static Icon HeartCircleXmark => HeartCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-circle-xmark", "e501");
    private static Icon? HeartCrackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-crack?f=classic&amp;s=light">Heart Crack</a>
    /// </summary>
    public static Icon HeartCrack => HeartCrackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-crack", "f7a9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-crack?f=classic&amp;s=light">Heart Crack</a>
    /// </summary>
    public static Icon HeartBroken => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HeartCrack;
    private static Icon? HeartHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-half?f=classic&amp;s=light">Heart Half</a>
    /// </summary>
    public static Icon HeartHalf => HeartHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-half", "e1ab");
    private static Icon? HeartHalfStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-half-stroke?f=classic&amp;s=light">Heart Half Stroke</a>
    /// </summary>
    public static Icon HeartHalfStroke => HeartHalfStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-half-stroke", "e1ac");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-half-stroke?f=classic&amp;s=light">Heart Half Stroke</a>
    /// </summary>
    public static Icon HeartHalfAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HeartHalfStroke;
    private static Icon? HeartPulsef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-pulse?f=classic&amp;s=light">Heart Pulse</a>
    /// </summary>
    public static Icon HeartPulse => HeartPulsef ??= new Icon(IconFamily.Classic, IconStyle.Light, "heart-pulse", "f21e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heart-pulse?f=classic&amp;s=light">Heart Pulse</a>
    /// </summary>
    public static Icon Heartbeat => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HeartPulse;
    private static Icon? Heatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/heat?f=classic&amp;s=light">Heat</a>
    /// </summary>
    public static Icon Heat => Heatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "heat", "e00c");
    private static Icon? Helicopterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helicopter?f=classic&amp;s=light">Helicopter</a>
    /// </summary>
    public static Icon Helicopter => Helicopterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "helicopter", "f533");
    private static Icon? HelicopterSymbolf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helicopter-symbol?f=classic&amp;s=light">Helicopter Symbol</a>
    /// </summary>
    public static Icon HelicopterSymbol => HelicopterSymbolf ??= new Icon(IconFamily.Classic, IconStyle.Light, "helicopter-symbol", "e502");
    private static Icon? HelmetBattlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helmet-battle?f=classic&amp;s=light">Helmet Battle</a>
    /// </summary>
    public static Icon HelmetBattle => HelmetBattlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "helmet-battle", "f6eb");
    private static Icon? HelmetSafetyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helmet-safety?f=classic&amp;s=light">Helmet Safety</a>
    /// </summary>
    public static Icon HelmetSafety => HelmetSafetyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "helmet-safety", "f807");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helmet-safety?f=classic&amp;s=light">Helmet Safety</a>
    /// </summary>
    public static Icon HardHat => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HelmetSafety;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helmet-safety?f=classic&amp;s=light">Helmet Safety</a>
    /// </summary>
    public static Icon HatHard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HelmetSafety;
    private static Icon? HelmetUnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/helmet-un?f=classic&amp;s=light">Helmet Un</a>
    /// </summary>
    public static Icon HelmetUn => HelmetUnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "helmet-un", "e503");
    private static Icon? Hexagonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon?f=classic&amp;s=light">Hexagon</a>
    /// </summary>
    public static Icon Hexagon => Hexagonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon", "f312");
    private static Icon? HexagonCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-check?f=classic&amp;s=light">Hexagon Check</a>
    /// </summary>
    public static Icon HexagonCheck => HexagonCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-check", "e416");
    private static Icon? HexagonDividef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-divide?f=classic&amp;s=light">Hexagon Divide</a>
    /// </summary>
    public static Icon HexagonDivide => HexagonDividef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-divide", "e1ad");
    private static Icon? HexagonExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-exclamation?f=classic&amp;s=light">Hexagon Exclamation</a>
    /// </summary>
    public static Icon HexagonExclamation => HexagonExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-exclamation", "e417");
    private static Icon? HexagonImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-image?f=classic&amp;s=light">Hexagon Image</a>
    /// </summary>
    public static Icon HexagonImage => HexagonImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-image", "e504");
    private static Icon? HexagonMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-minus?f=classic&amp;s=light">Hexagon Minus</a>
    /// </summary>
    public static Icon HexagonMinus => HexagonMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-minus", "f307");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-minus?f=classic&amp;s=light">Hexagon Minus</a>
    /// </summary>
    public static Icon MinusHexagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HexagonMinus;
    private static Icon? HexagonPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-plus?f=classic&amp;s=light">Hexagon Plus</a>
    /// </summary>
    public static Icon HexagonPlus => HexagonPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-plus", "f300");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-plus?f=classic&amp;s=light">Hexagon Plus</a>
    /// </summary>
    public static Icon PlusHexagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HexagonPlus;
    private static Icon? HexagonVerticalNftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-vertical-nft?f=classic&amp;s=light">Hexagon Vertical Nft</a>
    /// </summary>
    public static Icon HexagonVerticalNft => HexagonVerticalNftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-vertical-nft", "e505");
    private static Icon? HexagonVerticalNftSlantedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-vertical-nft-slanted?f=classic&amp;s=light">Hexagon Vertical Nft Slanted</a>
    /// </summary>
    public static Icon HexagonVerticalNftSlanted => HexagonVerticalNftSlantedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-vertical-nft-slanted", "e506");
    private static Icon? HexagonXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-xmark?f=classic&amp;s=light">Hexagon Xmark</a>
    /// </summary>
    public static Icon HexagonXmark => HexagonXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hexagon-xmark", "f2ee");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-xmark?f=classic&amp;s=light">Hexagon Xmark</a>
    /// </summary>
    public static Icon TimesHexagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HexagonXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hexagon-xmark?f=classic&amp;s=light">Hexagon Xmark</a>
    /// </summary>
    public static Icon XmarkHexagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HexagonXmark;
    private static Icon? HighDefinitionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/high-definition?f=classic&amp;s=light">High Definition</a>
    /// </summary>
    public static Icon HighDefinition => HighDefinitionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "high-definition", "e1ae");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/high-definition?f=classic&amp;s=light">High Definition</a>
    /// </summary>
    public static Icon RectangleHd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HighDefinition;
    private static Icon? Highlighterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/highlighter?f=classic&amp;s=light">Highlighter</a>
    /// </summary>
    public static Icon Highlighter => Highlighterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "highlighter", "f591");
    private static Icon? HighlighterLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/highlighter-line?f=classic&amp;s=light">Highlighter Line</a>
    /// </summary>
    public static Icon HighlighterLine => HighlighterLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "highlighter-line", "e1af");
    private static Icon? HillAvalanchef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hill-avalanche?f=classic&amp;s=light">Hill Avalanche</a>
    /// </summary>
    public static Icon HillAvalanche => HillAvalanchef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hill-avalanche", "e507");
    private static Icon? HillRockslidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hill-rockslide?f=classic&amp;s=light">Hill Rockslide</a>
    /// </summary>
    public static Icon HillRockslide => HillRockslidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hill-rockslide", "e508");
    private static Icon? Hippof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hippo?f=classic&amp;s=light">Hippo</a>
    /// </summary>
    public static Icon Hippo => Hippof ??= new Icon(IconFamily.Classic, IconStyle.Light, "hippo", "f6ed");
    private static Icon? HockeyMaskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hockey-mask?f=classic&amp;s=light">Hockey Mask</a>
    /// </summary>
    public static Icon HockeyMask => HockeyMaskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hockey-mask", "f6ee");
    private static Icon? HockeyPuckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hockey-puck?f=classic&amp;s=light">Hockey Puck</a>
    /// </summary>
    public static Icon HockeyPuck => HockeyPuckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hockey-puck", "f453");
    private static Icon? HockeyStickPuckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hockey-stick-puck?f=classic&amp;s=light">Hockey Stick Puck</a>
    /// </summary>
    public static Icon HockeyStickPuck => HockeyStickPuckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hockey-stick-puck", "e3ae");
    private static Icon? HockeySticksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hockey-sticks?f=classic&amp;s=light">Hockey Sticks</a>
    /// </summary>
    public static Icon HockeySticks => HockeySticksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hockey-sticks", "f454");
    private static Icon? HollyBerryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/holly-berry?f=classic&amp;s=light">Holly Berry</a>
    /// </summary>
    public static Icon HollyBerry => HollyBerryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "holly-berry", "f7aa");
    private static Icon? HoneyPotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/honey-pot?f=classic&amp;s=light">Honey Pot</a>
    /// </summary>
    public static Icon HoneyPot => HoneyPotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "honey-pot", "e418");
    private static Icon? HoodCloakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hood-cloak?f=classic&amp;s=light">Hood Cloak</a>
    /// </summary>
    public static Icon HoodCloak => HoodCloakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hood-cloak", "f6ef");
    private static Icon? HorizontalRulef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/horizontal-rule?f=classic&amp;s=light">Horizontal Rule</a>
    /// </summary>
    public static Icon HorizontalRule => HorizontalRulef ??= new Icon(IconFamily.Classic, IconStyle.Light, "horizontal-rule", "f86c");
    private static Icon? Horsef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/horse?f=classic&amp;s=light">Horse</a>
    /// </summary>
    public static Icon Horse => Horsef ??= new Icon(IconFamily.Classic, IconStyle.Light, "horse", "f6f0");
    private static Icon? HorseHeadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/horse-head?f=classic&amp;s=light">Horse Head</a>
    /// </summary>
    public static Icon HorseHead => HorseHeadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "horse-head", "f7ab");
    private static Icon? HorseSaddlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/horse-saddle?f=classic&amp;s=light">Horse Saddle</a>
    /// </summary>
    public static Icon HorseSaddle => HorseSaddlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "horse-saddle", "f8c3");
    private static Icon? Hosef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hose?f=classic&amp;s=light">Hose</a>
    /// </summary>
    public static Icon Hose => Hosef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hose", "e419");
    private static Icon? HoseReelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hose-reel?f=classic&amp;s=light">Hose Reel</a>
    /// </summary>
    public static Icon HoseReel => HoseReelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hose-reel", "e41a");
    private static Icon? Hospitalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hospital?f=classic&amp;s=light">Hospital</a>
    /// </summary>
    public static Icon Hospital => Hospitalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hospital", "f0f8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hospital?f=classic&amp;s=light">Hospital</a>
    /// </summary>
    public static Icon HospitalAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Hospital;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hospital?f=classic&amp;s=light">Hospital</a>
    /// </summary>
    public static Icon HospitalWide => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Hospital;
    private static Icon? HospitalUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hospital-user?f=classic&amp;s=light">Hospital User</a>
    /// </summary>
    public static Icon HospitalUser => HospitalUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hospital-user", "f80d");
    private static Icon? Hospitalsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hospitals?f=classic&amp;s=light">Hospitals</a>
    /// </summary>
    public static Icon Hospitals => Hospitalsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hospitals", "f80e");
    private static Icon? HotTubPersonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hot-tub-person?f=classic&amp;s=light">Hot Tub Person</a>
    /// </summary>
    public static Icon HotTubPerson => HotTubPersonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hot-tub-person", "f593");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hot-tub-person?f=classic&amp;s=light">Hot Tub Person</a>
    /// </summary>
    public static Icon HotTub => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HotTubPerson;
    private static Icon? Hotdogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hotdog?f=classic&amp;s=light">Hotdog</a>
    /// </summary>
    public static Icon Hotdog => Hotdogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hotdog", "f80f");
    private static Icon? Hotelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hotel?f=classic&amp;s=light">Hotel</a>
    /// </summary>
    public static Icon Hotel => Hotelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hotel", "f594");
    private static Icon? Hourglassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass?f=classic&amp;s=light">Hourglass</a>
    /// </summary>
    public static Icon Hourglass => Hourglassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hourglass", "f254");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass?f=classic&amp;s=light">Hourglass</a>
    /// </summary>
    public static Icon HourglassEmpty => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Hourglass;
    private static Icon? HourglassClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-clock?f=classic&amp;s=light">Hourglass Clock</a>
    /// </summary>
    public static Icon HourglassClock => HourglassClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hourglass-clock", "e41b");
    private static Icon? HourglassEndf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-end?f=classic&amp;s=light">Hourglass End</a>
    /// </summary>
    public static Icon HourglassEnd => HourglassEndf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hourglass-end", "f253");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-end?f=classic&amp;s=light">Hourglass End</a>
    /// </summary>
    public static Icon Hourglass3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HourglassEnd;
    private static Icon? HourglassHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-half?f=classic&amp;s=light">Hourglass Half</a>
    /// </summary>
    public static Icon HourglassHalf => HourglassHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "hourglass-half", "f252");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-half?f=classic&amp;s=light">Hourglass Half</a>
    /// </summary>
    public static Icon Hourglass2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HourglassHalf;
    private static Icon? HourglassStartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-start?f=classic&amp;s=light">Hourglass Start</a>
    /// </summary>
    public static Icon HourglassStart => HourglassStartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hourglass-start", "f251");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hourglass-start?f=classic&amp;s=light">Hourglass Start</a>
    /// </summary>
    public static Icon Hourglass1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HourglassStart;
    private static Icon? Housef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house?f=classic&amp;s=light">House</a>
    /// </summary>
    public static Icon House => Housef ??= new Icon(IconFamily.Classic, IconStyle.Light, "house", "f015");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house?f=classic&amp;s=light">House</a>
    /// </summary>
    public static Icon Home => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.House;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house?f=classic&amp;s=light">House</a>
    /// </summary>
    public static Icon HomeAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.House;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house?f=classic&amp;s=light">House</a>
    /// </summary>
    public static Icon HomeLgAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.House;
    private static Icon? HouseBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-blank?f=classic&amp;s=light">House Blank</a>
    /// </summary>
    public static Icon HouseBlank => HouseBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-blank", "e487");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-blank?f=classic&amp;s=light">House Blank</a>
    /// </summary>
    public static Icon HomeBlank => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseBlank;
    private static Icon? HouseBuildingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-building?f=classic&amp;s=light">House Building</a>
    /// </summary>
    public static Icon HouseBuilding => HouseBuildingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-building", "e1b1");
    private static Icon? HouseChimneyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney?f=classic&amp;s=light">House Chimney</a>
    /// </summary>
    public static Icon HouseChimney => HouseChimneyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney", "e3af");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney?f=classic&amp;s=light">House Chimney</a>
    /// </summary>
    public static Icon HomeLg => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseChimney;
    private static Icon? HouseChimneyBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-blank?f=classic&amp;s=light">House Chimney Blank</a>
    /// </summary>
    public static Icon HouseChimneyBlank => HouseChimneyBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney-blank", "e3b0");
    private static Icon? HouseChimneyCrackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-crack?f=classic&amp;s=light">House Chimney Crack</a>
    /// </summary>
    public static Icon HouseChimneyCrack => HouseChimneyCrackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney-crack", "f6f1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-crack?f=classic&amp;s=light">House Chimney Crack</a>
    /// </summary>
    public static Icon HouseDamage => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseChimneyCrack;
    private static Icon? HouseChimneyHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-heart?f=classic&amp;s=light">House Chimney Heart</a>
    /// </summary>
    public static Icon HouseChimneyHeart => HouseChimneyHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney-heart", "e1b2");
    private static Icon? HouseChimneyMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-medical?f=classic&amp;s=light">House Chimney Medical</a>
    /// </summary>
    public static Icon HouseChimneyMedical => HouseChimneyMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney-medical", "f7f2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-medical?f=classic&amp;s=light">House Chimney Medical</a>
    /// </summary>
    public static Icon ClinicMedical => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseChimneyMedical;
    private static Icon? HouseChimneyUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-user?f=classic&amp;s=light">House Chimney User</a>
    /// </summary>
    public static Icon HouseChimneyUser => HouseChimneyUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney-user", "e065");
    private static Icon? HouseChimneyWindowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-chimney-window?f=classic&amp;s=light">House Chimney Window</a>
    /// </summary>
    public static Icon HouseChimneyWindow => HouseChimneyWindowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-chimney-window", "e00d");
    private static Icon? HouseCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-circle-check?f=classic&amp;s=light">House Circle Check</a>
    /// </summary>
    public static Icon HouseCircleCheck => HouseCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-circle-check", "e509");
    private static Icon? HouseCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-circle-exclamation?f=classic&amp;s=light">House Circle Exclamation</a>
    /// </summary>
    public static Icon HouseCircleExclamation => HouseCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-circle-exclamation", "e50a");
    private static Icon? HouseCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-circle-xmark?f=classic&amp;s=light">House Circle Xmark</a>
    /// </summary>
    public static Icon HouseCircleXmark => HouseCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-circle-xmark", "e50b");
    private static Icon? HouseCrackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-crack?f=classic&amp;s=light">House Crack</a>
    /// </summary>
    public static Icon HouseCrack => HouseCrackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-crack", "e3b1");
    private static Icon? HouseDayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-day?f=classic&amp;s=light">House Day</a>
    /// </summary>
    public static Icon HouseDay => HouseDayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-day", "e00e");
    private static Icon? HouseFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-fire?f=classic&amp;s=light">House Fire</a>
    /// </summary>
    public static Icon HouseFire => HouseFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-fire", "e50c");
    private static Icon? HouseFlagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-flag?f=classic&amp;s=light">House Flag</a>
    /// </summary>
    public static Icon HouseFlag => HouseFlagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-flag", "e50d");
    private static Icon? HouseFloodWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-flood-water?f=classic&amp;s=light">House Flood Water</a>
    /// </summary>
    public static Icon HouseFloodWater => HouseFloodWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-flood-water", "e50e");
    private static Icon? HouseFloodWaterCircleArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-flood-water-circle-arrow-right?f=classic&amp;s=light">House Flood Water Circle Arrow Right</a>
    /// </summary>
    public static Icon HouseFloodWaterCircleArrowRight => HouseFloodWaterCircleArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-flood-water-circle-arrow-right", "e50f");
    private static Icon? HouseHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-heart?f=classic&amp;s=light">House Heart</a>
    /// </summary>
    public static Icon HouseHeart => HouseHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-heart", "f4c9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-heart?f=classic&amp;s=light">House Heart</a>
    /// </summary>
    public static Icon HomeHeart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseHeart;
    private static Icon? HouseLaptopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-laptop?f=classic&amp;s=light">House Laptop</a>
    /// </summary>
    public static Icon HouseLaptop => HouseLaptopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-laptop", "e066");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-laptop?f=classic&amp;s=light">House Laptop</a>
    /// </summary>
    public static Icon LaptopHouse => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseLaptop;
    private static Icon? HouseLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-lock?f=classic&amp;s=light">House Lock</a>
    /// </summary>
    public static Icon HouseLock => HouseLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-lock", "e510");
    private static Icon? HouseMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-medical?f=classic&amp;s=light">House Medical</a>
    /// </summary>
    public static Icon HouseMedical => HouseMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-medical", "e3b2");
    private static Icon? HouseMedicalCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-medical-circle-check?f=classic&amp;s=light">House Medical Circle Check</a>
    /// </summary>
    public static Icon HouseMedicalCircleCheck => HouseMedicalCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-medical-circle-check", "e511");
    private static Icon? HouseMedicalCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-medical-circle-exclamation?f=classic&amp;s=light">House Medical Circle Exclamation</a>
    /// </summary>
    public static Icon HouseMedicalCircleExclamation => HouseMedicalCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-medical-circle-exclamation", "e512");
    private static Icon? HouseMedicalCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-medical-circle-xmark?f=classic&amp;s=light">House Medical Circle Xmark</a>
    /// </summary>
    public static Icon HouseMedicalCircleXmark => HouseMedicalCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-medical-circle-xmark", "e513");
    private static Icon? HouseMedicalFlagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-medical-flag?f=classic&amp;s=light">House Medical Flag</a>
    /// </summary>
    public static Icon HouseMedicalFlag => HouseMedicalFlagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-medical-flag", "e514");
    private static Icon? HouseNightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-night?f=classic&amp;s=light">House Night</a>
    /// </summary>
    public static Icon HouseNight => HouseNightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-night", "e010");
    private static Icon? HousePersonLeavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-person-leave?f=classic&amp;s=light">House Person Leave</a>
    /// </summary>
    public static Icon HousePersonLeave => HousePersonLeavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-person-leave", "e00f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-person-leave?f=classic&amp;s=light">House Person Leave</a>
    /// </summary>
    public static Icon HouseLeave => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HousePersonLeave;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-person-leave?f=classic&amp;s=light">House Person Leave</a>
    /// </summary>
    public static Icon HousePersonDepart => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HousePersonLeave;
    private static Icon? HousePersonReturnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-person-return?f=classic&amp;s=light">House Person Return</a>
    /// </summary>
    public static Icon HousePersonReturn => HousePersonReturnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-person-return", "e011");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-person-return?f=classic&amp;s=light">House Person Return</a>
    /// </summary>
    public static Icon HousePersonArrive => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HousePersonReturn;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-person-return?f=classic&amp;s=light">House Person Return</a>
    /// </summary>
    public static Icon HouseReturn => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HousePersonReturn;
    private static Icon? HouseSignalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-signal?f=classic&amp;s=light">House Signal</a>
    /// </summary>
    public static Icon HouseSignal => HouseSignalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-signal", "e012");
    private static Icon? HouseTreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-tree?f=classic&amp;s=light">House Tree</a>
    /// </summary>
    public static Icon HouseTree => HouseTreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-tree", "e1b3");
    private static Icon? HouseTsunamif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-tsunami?f=classic&amp;s=light">House Tsunami</a>
    /// </summary>
    public static Icon HouseTsunami => HouseTsunamif ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-tsunami", "e515");
    private static Icon? HouseTurretf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-turret?f=classic&amp;s=light">House Turret</a>
    /// </summary>
    public static Icon HouseTurret => HouseTurretf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-turret", "e1b4");
    private static Icon? HouseUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-user?f=classic&amp;s=light">House User</a>
    /// </summary>
    public static Icon HouseUser => HouseUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-user", "e1b0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-user?f=classic&amp;s=light">House User</a>
    /// </summary>
    public static Icon HomeUser => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseUser;
    private static Icon? HouseWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-water?f=classic&amp;s=light">House Water</a>
    /// </summary>
    public static Icon HouseWater => HouseWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-water", "f74f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-water?f=classic&amp;s=light">House Water</a>
    /// </summary>
    public static Icon HouseFlood => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HouseWater;
    private static Icon? HouseWindowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/house-window?f=classic&amp;s=light">House Window</a>
    /// </summary>
    public static Icon HouseWindow => HouseWindowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "house-window", "e3b3");
    private static Icon? HryvniaSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hryvnia-sign?f=classic&amp;s=light">Hryvnia Sign</a>
    /// </summary>
    public static Icon HryvniaSign => HryvniaSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hryvnia-sign", "f6f2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hryvnia-sign?f=classic&amp;s=light">Hryvnia Sign</a>
    /// </summary>
    public static Icon Hryvnia => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HryvniaSign;
    private static Icon? HundredPointsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hundred-points?f=classic&amp;s=light">Hundred Points</a>
    /// </summary>
    public static Icon HundredPoints => HundredPointsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hundred-points", "e41c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hundred-points?f=classic&amp;s=light">Hundred Points</a>
    /// </summary>
    public static Icon _100 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.HundredPoints;
    private static Icon? Hurricanef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hurricane?f=classic&amp;s=light">Hurricane</a>
    /// </summary>
    public static Icon Hurricane => Hurricanef ??= new Icon(IconFamily.Classic, IconStyle.Light, "hurricane", "f751");
    private static Icon? Hyphenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/hyphen?f=classic&amp;s=light">Hyphen</a>
    /// </summary>
    public static Icon Hyphen => Hyphenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "hyphen", "2d");
    private static Icon? If;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/i?f=classic&amp;s=light">I</a>
    /// </summary>
    public static Icon I => If ??= new Icon(IconFamily.Classic, IconStyle.Light, "i", "49");
    private static Icon? ICursorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/i-cursor?f=classic&amp;s=light">I Cursor</a>
    /// </summary>
    public static Icon ICursor => ICursorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "i-cursor", "f246");
    private static Icon? IceCreamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ice-cream?f=classic&amp;s=light">Ice Cream</a>
    /// </summary>
    public static Icon IceCream => IceCreamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ice-cream", "f810");
    private static Icon? IceSkatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ice-skate?f=classic&amp;s=light">Ice Skate</a>
    /// </summary>
    public static Icon IceSkate => IceSkatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "ice-skate", "f7ac");
    private static Icon? Iciclesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/icicles?f=classic&amp;s=light">Icicles</a>
    /// </summary>
    public static Icon Icicles => Iciclesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "icicles", "f7ad");
    private static Icon? Iconsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/icons?f=classic&amp;s=light">Icons</a>
    /// </summary>
    public static Icon Icons => Iconsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "icons", "f86d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/icons?f=classic&amp;s=light">Icons</a>
    /// </summary>
    public static Icon HeartMusicCameraBolt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Icons;
    private static Icon? IdBadgef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/id-badge?f=classic&amp;s=light">Id Badge</a>
    /// </summary>
    public static Icon IdBadge => IdBadgef ??= new Icon(IconFamily.Classic, IconStyle.Light, "id-badge", "f2c1");
    private static Icon? IdCardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/id-card?f=classic&amp;s=light">Id Card</a>
    /// </summary>
    public static Icon IdCard => IdCardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "id-card", "f2c2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/id-card?f=classic&amp;s=light">Id Card</a>
    /// </summary>
    public static Icon DriversLicense => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.IdCard;
    private static Icon? IdCardClipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/id-card-clip?f=classic&amp;s=light">Id Card Clip</a>
    /// </summary>
    public static Icon IdCardClip => IdCardClipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "id-card-clip", "f47f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/id-card-clip?f=classic&amp;s=light">Id Card Clip</a>
    /// </summary>
    public static Icon IdCardAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.IdCardClip;
    private static Icon? Igloof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/igloo?f=classic&amp;s=light">Igloo</a>
    /// </summary>
    public static Icon Igloo => Igloof ??= new Icon(IconFamily.Classic, IconStyle.Light, "igloo", "f7ae");
    private static Icon? Imagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image?f=classic&amp;s=light">Image</a>
    /// </summary>
    public static Icon Image => Imagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "image", "f03e");
    private static Icon? ImageLandscapef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-landscape?f=classic&amp;s=light">Image Landscape</a>
    /// </summary>
    public static Icon ImageLandscape => ImageLandscapef ??= new Icon(IconFamily.Classic, IconStyle.Light, "image-landscape", "e1b5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-landscape?f=classic&amp;s=light">Image Landscape</a>
    /// </summary>
    public static Icon Landscape => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ImageLandscape;
    private static Icon? ImagePolaroidf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-polaroid?f=classic&amp;s=light">Image Polaroid</a>
    /// </summary>
    public static Icon ImagePolaroid => ImagePolaroidf ??= new Icon(IconFamily.Classic, IconStyle.Light, "image-polaroid", "f8c4");
    private static Icon? ImagePolaroidUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-polaroid-user?f=classic&amp;s=light">Image Polaroid User</a>
    /// </summary>
    public static Icon ImagePolaroidUser => ImagePolaroidUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "image-polaroid-user", "e1b6");
    private static Icon? ImagePortraitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-portrait?f=classic&amp;s=light">Image Portrait</a>
    /// </summary>
    public static Icon ImagePortrait => ImagePortraitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "image-portrait", "f3e0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-portrait?f=classic&amp;s=light">Image Portrait</a>
    /// </summary>
    public static Icon Portrait => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ImagePortrait;
    private static Icon? ImageSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-slash?f=classic&amp;s=light">Image Slash</a>
    /// </summary>
    public static Icon ImageSlash => ImageSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "image-slash", "e1b7");
    private static Icon? ImageUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/image-user?f=classic&amp;s=light">Image User</a>
    /// </summary>
    public static Icon ImageUser => ImageUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "image-user", "e1b8");
    private static Icon? Imagesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/images?f=classic&amp;s=light">Images</a>
    /// </summary>
    public static Icon Images => Imagesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "images", "f302");
    private static Icon? ImagesUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/images-user?f=classic&amp;s=light">Images User</a>
    /// </summary>
    public static Icon ImagesUser => ImagesUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "images-user", "e1b9");
    private static Icon? Inboxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inbox?f=classic&amp;s=light">Inbox</a>
    /// </summary>
    public static Icon Inbox => Inboxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "inbox", "f01c");
    private static Icon? InboxFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inbox-full?f=classic&amp;s=light">Inbox Full</a>
    /// </summary>
    public static Icon InboxFull => InboxFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "inbox-full", "e1ba");
    private static Icon? InboxInf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inbox-in?f=classic&amp;s=light">Inbox In</a>
    /// </summary>
    public static Icon InboxIn => InboxInf ??= new Icon(IconFamily.Classic, IconStyle.Light, "inbox-in", "f310");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inbox-in?f=classic&amp;s=light">Inbox In</a>
    /// </summary>
    public static Icon InboxArrowDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.InboxIn;
    private static Icon? InboxOutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inbox-out?f=classic&amp;s=light">Inbox Out</a>
    /// </summary>
    public static Icon InboxOut => InboxOutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "inbox-out", "f311");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inbox-out?f=classic&amp;s=light">Inbox Out</a>
    /// </summary>
    public static Icon InboxArrowUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.InboxOut;
    private static Icon? Inboxesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inboxes?f=classic&amp;s=light">Inboxes</a>
    /// </summary>
    public static Icon Inboxes => Inboxesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "inboxes", "e1bb");
    private static Icon? Indentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/indent?f=classic&amp;s=light">Indent</a>
    /// </summary>
    public static Icon Indent => Indentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "indent", "f03c");
    private static Icon? IndianRupeeSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/indian-rupee-sign?f=classic&amp;s=light">Indian Rupee Sign</a>
    /// </summary>
    public static Icon IndianRupeeSign => IndianRupeeSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "indian-rupee-sign", "e1bc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/indian-rupee-sign?f=classic&amp;s=light">Indian Rupee Sign</a>
    /// </summary>
    public static Icon IndianRupee => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.IndianRupeeSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/indian-rupee-sign?f=classic&amp;s=light">Indian Rupee Sign</a>
    /// </summary>
    public static Icon Inr => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.IndianRupeeSign;
    private static Icon? Industryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/industry?f=classic&amp;s=light">Industry</a>
    /// </summary>
    public static Icon Industry => Industryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "industry", "f275");
    private static Icon? IndustryWindowsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/industry-windows?f=classic&amp;s=light">Industry Windows</a>
    /// </summary>
    public static Icon IndustryWindows => IndustryWindowsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "industry-windows", "f3b3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/industry-windows?f=classic&amp;s=light">Industry Windows</a>
    /// </summary>
    public static Icon IndustryAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.IndustryWindows;
    private static Icon? Infinityf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/infinity?f=classic&amp;s=light">Infinity</a>
    /// </summary>
    public static Icon Infinity => Infinityf ??= new Icon(IconFamily.Classic, IconStyle.Light, "infinity", "f534");
    private static Icon? Infof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/info?f=classic&amp;s=light">Info</a>
    /// </summary>
    public static Icon Info => Infof ??= new Icon(IconFamily.Classic, IconStyle.Light, "info", "f129");
    private static Icon? Inhalerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/inhaler?f=classic&amp;s=light">Inhaler</a>
    /// </summary>
    public static Icon Inhaler => Inhalerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "inhaler", "f5f9");
    private static Icon? InputNumericf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/input-numeric?f=classic&amp;s=light">Input Numeric</a>
    /// </summary>
    public static Icon InputNumeric => InputNumericf ??= new Icon(IconFamily.Classic, IconStyle.Light, "input-numeric", "e1bd");
    private static Icon? InputPipef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/input-pipe?f=classic&amp;s=light">Input Pipe</a>
    /// </summary>
    public static Icon InputPipe => InputPipef ??= new Icon(IconFamily.Classic, IconStyle.Light, "input-pipe", "e1be");
    private static Icon? InputTextf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/input-text?f=classic&amp;s=light">Input Text</a>
    /// </summary>
    public static Icon InputText => InputTextf ??= new Icon(IconFamily.Classic, IconStyle.Light, "input-text", "e1bf");
    private static Icon? Integralf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/integral?f=classic&amp;s=light">Integral</a>
    /// </summary>
    public static Icon Integral => Integralf ??= new Icon(IconFamily.Classic, IconStyle.Light, "integral", "f667");
    private static Icon? Interrobangf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/interrobang?f=classic&amp;s=light">Interrobang</a>
    /// </summary>
    public static Icon Interrobang => Interrobangf ??= new Icon(IconFamily.Classic, IconStyle.Light, "interrobang", "e5ba");
    private static Icon? Intersectionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/intersection?f=classic&amp;s=light">Intersection</a>
    /// </summary>
    public static Icon Intersection => Intersectionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "intersection", "f668");
    private static Icon? IslandTropicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/island-tropical?f=classic&amp;s=light">Island Tropical</a>
    /// </summary>
    public static Icon IslandTropical => IslandTropicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "island-tropical", "f811");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/island-tropical?f=classic&amp;s=light">Island Tropical</a>
    /// </summary>
    public static Icon IslandTreePalm => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.IslandTropical;
    private static Icon? Italicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/italic?f=classic&amp;s=light">Italic</a>
    /// </summary>
    public static Icon Italic => Italicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "italic", "f033");
    private static Icon? Jf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/j?f=classic&amp;s=light">J</a>
    /// </summary>
    public static Icon J => Jf ??= new Icon(IconFamily.Classic, IconStyle.Light, "j", "4a");
    private static Icon? JackOLanternf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jack-o-lantern?f=classic&amp;s=light">Jack O Lantern</a>
    /// </summary>
    public static Icon JackOLantern => JackOLanternf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jack-o-lantern", "f30e");
    private static Icon? Jarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jar?f=classic&amp;s=light">Jar</a>
    /// </summary>
    public static Icon Jar => Jarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jar", "e516");
    private static Icon? JarWheatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jar-wheat?f=classic&amp;s=light">Jar Wheat</a>
    /// </summary>
    public static Icon JarWheat => JarWheatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jar-wheat", "e517");
    private static Icon? Jedif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jedi?f=classic&amp;s=light">Jedi</a>
    /// </summary>
    public static Icon Jedi => Jedif ??= new Icon(IconFamily.Classic, IconStyle.Light, "jedi", "f669");
    private static Icon? JetFighterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jet-fighter?f=classic&amp;s=light">Jet Fighter</a>
    /// </summary>
    public static Icon JetFighter => JetFighterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jet-fighter", "f0fb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jet-fighter?f=classic&amp;s=light">Jet Fighter</a>
    /// </summary>
    public static Icon FighterJet => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.JetFighter;
    private static Icon? JetFighterUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jet-fighter-up?f=classic&amp;s=light">Jet Fighter Up</a>
    /// </summary>
    public static Icon JetFighterUp => JetFighterUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jet-fighter-up", "e518");
    private static Icon? Jointf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/joint?f=classic&amp;s=light">Joint</a>
    /// </summary>
    public static Icon Joint => Jointf ??= new Icon(IconFamily.Classic, IconStyle.Light, "joint", "f595");
    private static Icon? Joystickf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/joystick?f=classic&amp;s=light">Joystick</a>
    /// </summary>
    public static Icon Joystick => Joystickf ??= new Icon(IconFamily.Classic, IconStyle.Light, "joystick", "f8c5");
    private static Icon? Jugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jug?f=classic&amp;s=light">Jug</a>
    /// </summary>
    public static Icon Jug => Jugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jug", "f8c6");
    private static Icon? JugBottlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jug-bottle?f=classic&amp;s=light">Jug Bottle</a>
    /// </summary>
    public static Icon JugBottle => JugBottlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "jug-bottle", "e5fb");
    private static Icon? JugDetergentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/jug-detergent?f=classic&amp;s=light">Jug Detergent</a>
    /// </summary>
    public static Icon JugDetergent => JugDetergentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "jug-detergent", "e519");
    private static Icon? Kf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/k?f=classic&amp;s=light">K</a>
    /// </summary>
    public static Icon K => Kf ??= new Icon(IconFamily.Classic, IconStyle.Light, "k", "4b");
    private static Icon? Kaabaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kaaba?f=classic&amp;s=light">Kaaba</a>
    /// </summary>
    public static Icon Kaaba => Kaabaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kaaba", "f66b");
    private static Icon? Kazoof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kazoo?f=classic&amp;s=light">Kazoo</a>
    /// </summary>
    public static Icon Kazoo => Kazoof ??= new Icon(IconFamily.Classic, IconStyle.Light, "kazoo", "f8c7");
    private static Icon? Kerningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kerning?f=classic&amp;s=light">Kerning</a>
    /// </summary>
    public static Icon Kerning => Kerningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kerning", "f86f");
    private static Icon? Keyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/key?f=classic&amp;s=light">Key</a>
    /// </summary>
    public static Icon Key => Keyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "key", "f084");
    private static Icon? KeySkeletonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/key-skeleton?f=classic&amp;s=light">Key Skeleton</a>
    /// </summary>
    public static Icon KeySkeleton => KeySkeletonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "key-skeleton", "f6f3");
    private static Icon? KeySkeletonLeftRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/key-skeleton-left-right?f=classic&amp;s=light">Key Skeleton Left Right</a>
    /// </summary>
    public static Icon KeySkeletonLeftRight => KeySkeletonLeftRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "key-skeleton-left-right", "e3b4");
    private static Icon? Keyboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/keyboard?f=classic&amp;s=light">Keyboard</a>
    /// </summary>
    public static Icon Keyboard => Keyboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "keyboard", "f11c");
    private static Icon? KeyboardBrightnessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/keyboard-brightness?f=classic&amp;s=light">Keyboard Brightness</a>
    /// </summary>
    public static Icon KeyboardBrightness => KeyboardBrightnessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "keyboard-brightness", "e1c0");
    private static Icon? KeyboardBrightnessLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/keyboard-brightness-low?f=classic&amp;s=light">Keyboard Brightness Low</a>
    /// </summary>
    public static Icon KeyboardBrightnessLow => KeyboardBrightnessLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "keyboard-brightness-low", "e1c1");
    private static Icon? KeyboardDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/keyboard-down?f=classic&amp;s=light">Keyboard Down</a>
    /// </summary>
    public static Icon KeyboardDown => KeyboardDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "keyboard-down", "e1c2");
    private static Icon? KeyboardLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/keyboard-left?f=classic&amp;s=light">Keyboard Left</a>
    /// </summary>
    public static Icon KeyboardLeft => KeyboardLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "keyboard-left", "e1c3");
    private static Icon? Keynotef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/keynote?f=classic&amp;s=light">Keynote</a>
    /// </summary>
    public static Icon Keynote => Keynotef ??= new Icon(IconFamily.Classic, IconStyle.Light, "keynote", "f66c");
    private static Icon? Khandaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/khanda?f=classic&amp;s=light">Khanda</a>
    /// </summary>
    public static Icon Khanda => Khandaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "khanda", "f66d");
    private static Icon? Kidneysf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kidneys?f=classic&amp;s=light">Kidneys</a>
    /// </summary>
    public static Icon Kidneys => Kidneysf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kidneys", "f5fb");
    private static Icon? KipSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kip-sign?f=classic&amp;s=light">Kip Sign</a>
    /// </summary>
    public static Icon KipSign => KipSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kip-sign", "e1c4");
    private static Icon? KitMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kit-medical?f=classic&amp;s=light">Kit Medical</a>
    /// </summary>
    public static Icon KitMedical => KitMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kit-medical", "f479");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kit-medical?f=classic&amp;s=light">Kit Medical</a>
    /// </summary>
    public static Icon FirstAid => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.KitMedical;
    private static Icon? KitchenSetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kitchen-set?f=classic&amp;s=light">Kitchen Set</a>
    /// </summary>
    public static Icon KitchenSet => KitchenSetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kitchen-set", "e51a");
    private static Icon? Kitef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kite?f=classic&amp;s=light">Kite</a>
    /// </summary>
    public static Icon Kite => Kitef ??= new Icon(IconFamily.Classic, IconStyle.Light, "kite", "f6f4");
    private static Icon? KiwiBirdf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kiwi-bird?f=classic&amp;s=light">Kiwi Bird</a>
    /// </summary>
    public static Icon KiwiBird => KiwiBirdf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kiwi-bird", "f535");
    private static Icon? KiwiFruitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/kiwi-fruit?f=classic&amp;s=light">Kiwi Fruit</a>
    /// </summary>
    public static Icon KiwiFruit => KiwiFruitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "kiwi-fruit", "e30c");
    private static Icon? Knifef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/knife?f=classic&amp;s=light">Knife</a>
    /// </summary>
    public static Icon Knife => Knifef ??= new Icon(IconFamily.Classic, IconStyle.Light, "knife", "f2e4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/knife?f=classic&amp;s=light">Knife</a>
    /// </summary>
    public static Icon UtensilKnife => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Knife;
    private static Icon? KnifeKitchenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/knife-kitchen?f=classic&amp;s=light">Knife Kitchen</a>
    /// </summary>
    public static Icon KnifeKitchen => KnifeKitchenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "knife-kitchen", "f6f5");
    private static Icon? Lf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/l?f=classic&amp;s=light">L</a>
    /// </summary>
    public static Icon L => Lf ??= new Icon(IconFamily.Classic, IconStyle.Light, "l", "4c");
    private static Icon? LacrosseStickf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lacrosse-stick?f=classic&amp;s=light">Lacrosse Stick</a>
    /// </summary>
    public static Icon LacrosseStick => LacrosseStickf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lacrosse-stick", "e3b5");
    private static Icon? LacrosseStickBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lacrosse-stick-ball?f=classic&amp;s=light">Lacrosse Stick Ball</a>
    /// </summary>
    public static Icon LacrosseStickBall => LacrosseStickBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lacrosse-stick-ball", "e3b6");
    private static Icon? Lambdaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lambda?f=classic&amp;s=light">Lambda</a>
    /// </summary>
    public static Icon Lambda => Lambdaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lambda", "f66e");
    private static Icon? Lampf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lamp?f=classic&amp;s=light">Lamp</a>
    /// </summary>
    public static Icon Lamp => Lampf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lamp", "f4ca");
    private static Icon? LampDeskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lamp-desk?f=classic&amp;s=light">Lamp Desk</a>
    /// </summary>
    public static Icon LampDesk => LampDeskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lamp-desk", "e014");
    private static Icon? LampFloorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lamp-floor?f=classic&amp;s=light">Lamp Floor</a>
    /// </summary>
    public static Icon LampFloor => LampFloorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lamp-floor", "e015");
    private static Icon? LampStreetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lamp-street?f=classic&amp;s=light">Lamp Street</a>
    /// </summary>
    public static Icon LampStreet => LampStreetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lamp-street", "e1c5");
    private static Icon? LandMineOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/land-mine-on?f=classic&amp;s=light">Land Mine On</a>
    /// </summary>
    public static Icon LandMineOn => LandMineOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "land-mine-on", "e51b");
    private static Icon? Landmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/landmark?f=classic&amp;s=light">Landmark</a>
    /// </summary>
    public static Icon Landmark => Landmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "landmark", "f66f");
    private static Icon? LandmarkDomef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/landmark-dome?f=classic&amp;s=light">Landmark Dome</a>
    /// </summary>
    public static Icon LandmarkDome => LandmarkDomef ??= new Icon(IconFamily.Classic, IconStyle.Light, "landmark-dome", "f752");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/landmark-dome?f=classic&amp;s=light">Landmark Dome</a>
    /// </summary>
    public static Icon LandmarkAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LandmarkDome;
    private static Icon? LandmarkFlagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/landmark-flag?f=classic&amp;s=light">Landmark Flag</a>
    /// </summary>
    public static Icon LandmarkFlag => LandmarkFlagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "landmark-flag", "e51c");
    private static Icon? LandmarkMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/landmark-magnifying-glass?f=classic&amp;s=light">Landmark Magnifying Glass</a>
    /// </summary>
    public static Icon LandmarkMagnifyingGlass => LandmarkMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "landmark-magnifying-glass", "e622");
    private static Icon? Languagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/language?f=classic&amp;s=light">Language</a>
    /// </summary>
    public static Icon Language => Languagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "language", "f1ab");
    private static Icon? Laptopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop?f=classic&amp;s=light">Laptop</a>
    /// </summary>
    public static Icon Laptop => Laptopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop", "f109");
    private static Icon? LaptopArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-arrow-down?f=classic&amp;s=light">Laptop Arrow Down</a>
    /// </summary>
    public static Icon LaptopArrowDown => LaptopArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-arrow-down", "e1c6");
    private static Icon? LaptopBinaryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-binary?f=classic&amp;s=light">Laptop Binary</a>
    /// </summary>
    public static Icon LaptopBinary => LaptopBinaryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-binary", "e5e7");
    private static Icon? LaptopCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-code?f=classic&amp;s=light">Laptop Code</a>
    /// </summary>
    public static Icon LaptopCode => LaptopCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-code", "f5fc");
    private static Icon? LaptopFilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-file?f=classic&amp;s=light">Laptop File</a>
    /// </summary>
    public static Icon LaptopFile => LaptopFilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-file", "e51d");
    private static Icon? LaptopMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-medical?f=classic&amp;s=light">Laptop Medical</a>
    /// </summary>
    public static Icon LaptopMedical => LaptopMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-medical", "f812");
    private static Icon? LaptopMobilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-mobile?f=classic&amp;s=light">Laptop Mobile</a>
    /// </summary>
    public static Icon LaptopMobile => LaptopMobilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-mobile", "f87a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-mobile?f=classic&amp;s=light">Laptop Mobile</a>
    /// </summary>
    public static Icon PhoneLaptop => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LaptopMobile;
    private static Icon? LaptopSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/laptop-slash?f=classic&amp;s=light">Laptop Slash</a>
    /// </summary>
    public static Icon LaptopSlash => LaptopSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "laptop-slash", "e1c7");
    private static Icon? LariSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lari-sign?f=classic&amp;s=light">Lari Sign</a>
    /// </summary>
    public static Icon LariSign => LariSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lari-sign", "e1c8");
    private static Icon? Lassof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lasso?f=classic&amp;s=light">Lasso</a>
    /// </summary>
    public static Icon Lasso => Lassof ??= new Icon(IconFamily.Classic, IconStyle.Light, "lasso", "f8c8");
    private static Icon? LassoSparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lasso-sparkles?f=classic&amp;s=light">Lasso Sparkles</a>
    /// </summary>
    public static Icon LassoSparkles => LassoSparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lasso-sparkles", "e1c9");
    private static Icon? LayerGroupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/layer-group?f=classic&amp;s=light">Layer Group</a>
    /// </summary>
    public static Icon LayerGroup => LayerGroupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "layer-group", "f5fd");
    private static Icon? LayerMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/layer-minus?f=classic&amp;s=light">Layer Minus</a>
    /// </summary>
    public static Icon LayerMinus => LayerMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "layer-minus", "f5fe");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/layer-minus?f=classic&amp;s=light">Layer Minus</a>
    /// </summary>
    public static Icon LayerGroupMinus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LayerMinus;
    private static Icon? LayerPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/layer-plus?f=classic&amp;s=light">Layer Plus</a>
    /// </summary>
    public static Icon LayerPlus => LayerPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "layer-plus", "f5ff");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/layer-plus?f=classic&amp;s=light">Layer Plus</a>
    /// </summary>
    public static Icon LayerGroupPlus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LayerPlus;
    private static Icon? Leaff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/leaf?f=classic&amp;s=light">Leaf</a>
    /// </summary>
    public static Icon Leaf => Leaff ??= new Icon(IconFamily.Classic, IconStyle.Light, "leaf", "f06c");
    private static Icon? LeafHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/leaf-heart?f=classic&amp;s=light">Leaf Heart</a>
    /// </summary>
    public static Icon LeafHeart => LeafHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "leaf-heart", "f4cb");
    private static Icon? LeafMaplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/leaf-maple?f=classic&amp;s=light">Leaf Maple</a>
    /// </summary>
    public static Icon LeafMaple => LeafMaplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "leaf-maple", "f6f6");
    private static Icon? LeafOakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/leaf-oak?f=classic&amp;s=light">Leaf Oak</a>
    /// </summary>
    public static Icon LeafOak => LeafOakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "leaf-oak", "f6f7");
    private static Icon? LeafyGreenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/leafy-green?f=classic&amp;s=light">Leafy Green</a>
    /// </summary>
    public static Icon LeafyGreen => LeafyGreenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "leafy-green", "e41d");
    private static Icon? Leftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left?f=classic&amp;s=light">Left</a>
    /// </summary>
    public static Icon Left => Leftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "left", "f355");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left?f=classic&amp;s=light">Left</a>
    /// </summary>
    public static Icon ArrowAltLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Left;
    private static Icon? LeftFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-from-line?f=classic&amp;s=light">Left From Line</a>
    /// </summary>
    public static Icon LeftFromLine => LeftFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "left-from-line", "f348");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-from-line?f=classic&amp;s=light">Left From Line</a>
    /// </summary>
    public static Icon ArrowAltFromRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LeftFromLine;
    private static Icon? LeftLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-long?f=classic&amp;s=light">Left Long</a>
    /// </summary>
    public static Icon LeftLong => LeftLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "left-long", "f30a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-long?f=classic&amp;s=light">Left Long</a>
    /// </summary>
    public static Icon LongArrowAltLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LeftLong;
    private static Icon? LeftLongToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-long-to-line?f=classic&amp;s=light">Left Long To Line</a>
    /// </summary>
    public static Icon LeftLongToLine => LeftLongToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "left-long-to-line", "e41e");
    private static Icon? LeftRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-right?f=classic&amp;s=light">Left Right</a>
    /// </summary>
    public static Icon LeftRight => LeftRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "left-right", "f337");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-right?f=classic&amp;s=light">Left Right</a>
    /// </summary>
    public static Icon ArrowsAltH => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LeftRight;
    private static Icon? LeftToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-to-line?f=classic&amp;s=light">Left To Line</a>
    /// </summary>
    public static Icon LeftToLine => LeftToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "left-to-line", "f34b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/left-to-line?f=classic&amp;s=light">Left To Line</a>
    /// </summary>
    public static Icon ArrowAltToLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LeftToLine;
    private static Icon? Lemonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lemon?f=classic&amp;s=light">Lemon</a>
    /// </summary>
    public static Icon Lemon => Lemonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lemon", "f094");
    private static Icon? LessThanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/less-than?f=classic&amp;s=light">Less Than</a>
    /// </summary>
    public static Icon LessThan => LessThanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "less-than", "3c");
    private static Icon? LessThanEqualf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/less-than-equal?f=classic&amp;s=light">Less Than Equal</a>
    /// </summary>
    public static Icon LessThanEqual => LessThanEqualf ??= new Icon(IconFamily.Classic, IconStyle.Light, "less-than-equal", "f537");
    private static Icon? LifeRingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/life-ring?f=classic&amp;s=light">Life Ring</a>
    /// </summary>
    public static Icon LifeRing => LifeRingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "life-ring", "f1cd");
    private static Icon? LightCeilingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/light-ceiling?f=classic&amp;s=light">Light Ceiling</a>
    /// </summary>
    public static Icon LightCeiling => LightCeilingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "light-ceiling", "e016");
    private static Icon? LightEmergencyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/light-emergency?f=classic&amp;s=light">Light Emergency</a>
    /// </summary>
    public static Icon LightEmergency => LightEmergencyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "light-emergency", "e41f");
    private static Icon? LightEmergencyOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/light-emergency-on?f=classic&amp;s=light">Light Emergency On</a>
    /// </summary>
    public static Icon LightEmergencyOn => LightEmergencyOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "light-emergency-on", "e420");
    private static Icon? LightSwitchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/light-switch?f=classic&amp;s=light">Light Switch</a>
    /// </summary>
    public static Icon LightSwitch => LightSwitchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "light-switch", "e017");
    private static Icon? LightSwitchOfff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/light-switch-off?f=classic&amp;s=light">Light Switch Off</a>
    /// </summary>
    public static Icon LightSwitchOff => LightSwitchOfff ??= new Icon(IconFamily.Classic, IconStyle.Light, "light-switch-off", "e018");
    private static Icon? LightSwitchOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/light-switch-on?f=classic&amp;s=light">Light Switch On</a>
    /// </summary>
    public static Icon LightSwitchOn => LightSwitchOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "light-switch-on", "e019");
    private static Icon? Lightbulbf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb?f=classic&amp;s=light">Lightbulb</a>
    /// </summary>
    public static Icon Lightbulb => Lightbulbf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb", "f0eb");
    private static Icon? LightbulbCflf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-cfl?f=classic&amp;s=light">Lightbulb Cfl</a>
    /// </summary>
    public static Icon LightbulbCfl => LightbulbCflf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-cfl", "e5a6");
    private static Icon? LightbulbCflOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-cfl-on?f=classic&amp;s=light">Lightbulb Cfl On</a>
    /// </summary>
    public static Icon LightbulbCflOn => LightbulbCflOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-cfl-on", "e5a7");
    private static Icon? LightbulbDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-dollar?f=classic&amp;s=light">Lightbulb Dollar</a>
    /// </summary>
    public static Icon LightbulbDollar => LightbulbDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-dollar", "f670");
    private static Icon? LightbulbExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-exclamation?f=classic&amp;s=light">Lightbulb Exclamation</a>
    /// </summary>
    public static Icon LightbulbExclamation => LightbulbExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-exclamation", "f671");
    private static Icon? LightbulbExclamationOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-exclamation-on?f=classic&amp;s=light">Lightbulb Exclamation On</a>
    /// </summary>
    public static Icon LightbulbExclamationOn => LightbulbExclamationOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-exclamation-on", "e1ca");
    private static Icon? LightbulbGearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-gear?f=classic&amp;s=light">Lightbulb Gear</a>
    /// </summary>
    public static Icon LightbulbGear => LightbulbGearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-gear", "e5fd");
    private static Icon? LightbulbOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-on?f=classic&amp;s=light">Lightbulb On</a>
    /// </summary>
    public static Icon LightbulbOn => LightbulbOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-on", "f672");
    private static Icon? LightbulbSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lightbulb-slash?f=classic&amp;s=light">Lightbulb Slash</a>
    /// </summary>
    public static Icon LightbulbSlash => LightbulbSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lightbulb-slash", "f673");
    private static Icon? Lighthousef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lighthouse?f=classic&amp;s=light">Lighthouse</a>
    /// </summary>
    public static Icon Lighthouse => Lighthousef ??= new Icon(IconFamily.Classic, IconStyle.Light, "lighthouse", "e612");
    private static Icon? LightsHolidayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lights-holiday?f=classic&amp;s=light">Lights Holiday</a>
    /// </summary>
    public static Icon LightsHoliday => LightsHolidayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lights-holiday", "f7b2");
    private static Icon? LineColumnsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/line-columns?f=classic&amp;s=light">Line Columns</a>
    /// </summary>
    public static Icon LineColumns => LineColumnsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "line-columns", "f870");
    private static Icon? LineHeightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/line-height?f=classic&amp;s=light">Line Height</a>
    /// </summary>
    public static Icon LineHeight => LineHeightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "line-height", "f871");
    private static Icon? LinesLeaningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lines-leaning?f=classic&amp;s=light">Lines Leaning</a>
    /// </summary>
    public static Icon LinesLeaning => LinesLeaningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lines-leaning", "e51e");
    private static Icon? Linkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link?f=classic&amp;s=light">Link</a>
    /// </summary>
    public static Icon Link => Linkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "link", "f0c1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link?f=classic&amp;s=light">Link</a>
    /// </summary>
    public static Icon Chain => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Link;
    private static Icon? LinkHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-horizontal?f=classic&amp;s=light">Link Horizontal</a>
    /// </summary>
    public static Icon LinkHorizontal => LinkHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "link-horizontal", "e1cb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-horizontal?f=classic&amp;s=light">Link Horizontal</a>
    /// </summary>
    public static Icon ChainHorizontal => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LinkHorizontal;
    private static Icon? LinkHorizontalSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-horizontal-slash?f=classic&amp;s=light">Link Horizontal Slash</a>
    /// </summary>
    public static Icon LinkHorizontalSlash => LinkHorizontalSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "link-horizontal-slash", "e1cc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-horizontal-slash?f=classic&amp;s=light">Link Horizontal Slash</a>
    /// </summary>
    public static Icon ChainHorizontalSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LinkHorizontalSlash;
    private static Icon? LinkSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-simple?f=classic&amp;s=light">Link Simple</a>
    /// </summary>
    public static Icon LinkSimple => LinkSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "link-simple", "e1cd");
    private static Icon? LinkSimpleSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-simple-slash?f=classic&amp;s=light">Link Simple Slash</a>
    /// </summary>
    public static Icon LinkSimpleSlash => LinkSimpleSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "link-simple-slash", "e1ce");
    private static Icon? LinkSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-slash?f=classic&amp;s=light">Link Slash</a>
    /// </summary>
    public static Icon LinkSlash => LinkSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "link-slash", "f127");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-slash?f=classic&amp;s=light">Link Slash</a>
    /// </summary>
    public static Icon ChainBroken => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LinkSlash;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-slash?f=classic&amp;s=light">Link Slash</a>
    /// </summary>
    public static Icon ChainSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LinkSlash;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/link-slash?f=classic&amp;s=light">Link Slash</a>
    /// </summary>
    public static Icon Unlink => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LinkSlash;
    private static Icon? Lipsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lips?f=classic&amp;s=light">Lips</a>
    /// </summary>
    public static Icon Lips => Lipsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lips", "f600");
    private static Icon? LiraSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lira-sign?f=classic&amp;s=light">Lira Sign</a>
    /// </summary>
    public static Icon LiraSign => LiraSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lira-sign", "f195");
    private static Icon? Listf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list?f=classic&amp;s=light">List</a>
    /// </summary>
    public static Icon List => Listf ??= new Icon(IconFamily.Classic, IconStyle.Light, "list", "f03a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list?f=classic&amp;s=light">List</a>
    /// </summary>
    public static Icon ListSquares => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.List;
    private static Icon? ListCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-check?f=classic&amp;s=light">List Check</a>
    /// </summary>
    public static Icon ListCheck => ListCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-check", "f0ae");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-check?f=classic&amp;s=light">List Check</a>
    /// </summary>
    public static Icon Tasks => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ListCheck;
    private static Icon? ListDropdownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-dropdown?f=classic&amp;s=light">List Dropdown</a>
    /// </summary>
    public static Icon ListDropdown => ListDropdownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-dropdown", "e1cf");
    private static Icon? ListMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-music?f=classic&amp;s=light">List Music</a>
    /// </summary>
    public static Icon ListMusic => ListMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-music", "f8c9");
    private static Icon? ListOlf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-ol?f=classic&amp;s=light">List Ol</a>
    /// </summary>
    public static Icon ListOl => ListOlf ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-ol", "f0cb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-ol?f=classic&amp;s=light">List Ol</a>
    /// </summary>
    public static Icon List12 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ListOl;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-ol?f=classic&amp;s=light">List Ol</a>
    /// </summary>
    public static Icon ListNumeric => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ListOl;
    private static Icon? ListRadiof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-radio?f=classic&amp;s=light">List Radio</a>
    /// </summary>
    public static Icon ListRadio => ListRadiof ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-radio", "e1d0");
    private static Icon? ListTimelinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-timeline?f=classic&amp;s=light">List Timeline</a>
    /// </summary>
    public static Icon ListTimeline => ListTimelinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-timeline", "e1d1");
    private static Icon? ListTreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-tree?f=classic&amp;s=light">List Tree</a>
    /// </summary>
    public static Icon ListTree => ListTreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-tree", "e1d2");
    private static Icon? ListUlf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-ul?f=classic&amp;s=light">List Ul</a>
    /// </summary>
    public static Icon ListUl => ListUlf ??= new Icon(IconFamily.Classic, IconStyle.Light, "list-ul", "f0ca");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/list-ul?f=classic&amp;s=light">List Ul</a>
    /// </summary>
    public static Icon ListDots => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ListUl;
    private static Icon? LitecoinSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/litecoin-sign?f=classic&amp;s=light">Litecoin Sign</a>
    /// </summary>
    public static Icon LitecoinSign => LitecoinSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "litecoin-sign", "e1d3");
    private static Icon? Loaderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/loader?f=classic&amp;s=light">Loader</a>
    /// </summary>
    public static Icon Loader => Loaderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "loader", "e1d4");
    private static Icon? Lobsterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lobster?f=classic&amp;s=light">Lobster</a>
    /// </summary>
    public static Icon Lobster => Lobsterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lobster", "e421");
    private static Icon? LocationArrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-arrow?f=classic&amp;s=light">Location Arrow</a>
    /// </summary>
    public static Icon LocationArrow => LocationArrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-arrow", "f124");
    private static Icon? LocationArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-arrow-up?f=classic&amp;s=light">Location Arrow Up</a>
    /// </summary>
    public static Icon LocationArrowUp => LocationArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-arrow-up", "e63a");
    private static Icon? LocationCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-check?f=classic&amp;s=light">Location Check</a>
    /// </summary>
    public static Icon LocationCheck => LocationCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-check", "f606");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-check?f=classic&amp;s=light">Location Check</a>
    /// </summary>
    public static Icon MapMarkerCheck => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationCheck;
    private static Icon? LocationCrosshairsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-crosshairs?f=classic&amp;s=light">Location Crosshairs</a>
    /// </summary>
    public static Icon LocationCrosshairs => LocationCrosshairsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-crosshairs", "f601");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-crosshairs?f=classic&amp;s=light">Location Crosshairs</a>
    /// </summary>
    public static Icon Location => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationCrosshairs;
    private static Icon? LocationCrosshairsSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-crosshairs-slash?f=classic&amp;s=light">Location Crosshairs Slash</a>
    /// </summary>
    public static Icon LocationCrosshairsSlash => LocationCrosshairsSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-crosshairs-slash", "f603");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-crosshairs-slash?f=classic&amp;s=light">Location Crosshairs Slash</a>
    /// </summary>
    public static Icon LocationSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationCrosshairsSlash;
    private static Icon? LocationDotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-dot?f=classic&amp;s=light">Location Dot</a>
    /// </summary>
    public static Icon LocationDot => LocationDotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-dot", "f3c5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-dot?f=classic&amp;s=light">Location Dot</a>
    /// </summary>
    public static Icon MapMarkerAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationDot;
    private static Icon? LocationDotSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-dot-slash?f=classic&amp;s=light">Location Dot Slash</a>
    /// </summary>
    public static Icon LocationDotSlash => LocationDotSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-dot-slash", "f605");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-dot-slash?f=classic&amp;s=light">Location Dot Slash</a>
    /// </summary>
    public static Icon MapMarkerAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationDotSlash;
    private static Icon? LocationExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-exclamation?f=classic&amp;s=light">Location Exclamation</a>
    /// </summary>
    public static Icon LocationExclamation => LocationExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-exclamation", "f608");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-exclamation?f=classic&amp;s=light">Location Exclamation</a>
    /// </summary>
    public static Icon MapMarkerExclamation => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationExclamation;
    private static Icon? LocationMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-minus?f=classic&amp;s=light">Location Minus</a>
    /// </summary>
    public static Icon LocationMinus => LocationMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-minus", "f609");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-minus?f=classic&amp;s=light">Location Minus</a>
    /// </summary>
    public static Icon MapMarkerMinus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationMinus;
    private static Icon? LocationPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pen?f=classic&amp;s=light">Location Pen</a>
    /// </summary>
    public static Icon LocationPen => LocationPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-pen", "f607");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pen?f=classic&amp;s=light">Location Pen</a>
    /// </summary>
    public static Icon MapMarkerEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationPen;
    private static Icon? LocationPinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pin?f=classic&amp;s=light">Location Pin</a>
    /// </summary>
    public static Icon LocationPin => LocationPinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-pin", "f041");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pin?f=classic&amp;s=light">Location Pin</a>
    /// </summary>
    public static Icon MapMarker => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationPin;
    private static Icon? LocationPinLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pin-lock?f=classic&amp;s=light">Location Pin Lock</a>
    /// </summary>
    public static Icon LocationPinLock => LocationPinLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-pin-lock", "e51f");
    private static Icon? LocationPinSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pin-slash?f=classic&amp;s=light">Location Pin Slash</a>
    /// </summary>
    public static Icon LocationPinSlash => LocationPinSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-pin-slash", "f60c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-pin-slash?f=classic&amp;s=light">Location Pin Slash</a>
    /// </summary>
    public static Icon MapMarkerSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationPinSlash;
    private static Icon? LocationPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-plus?f=classic&amp;s=light">Location Plus</a>
    /// </summary>
    public static Icon LocationPlus => LocationPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-plus", "f60a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-plus?f=classic&amp;s=light">Location Plus</a>
    /// </summary>
    public static Icon MapMarkerPlus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationPlus;
    private static Icon? LocationQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-question?f=classic&amp;s=light">Location Question</a>
    /// </summary>
    public static Icon LocationQuestion => LocationQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-question", "f60b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-question?f=classic&amp;s=light">Location Question</a>
    /// </summary>
    public static Icon MapMarkerQuestion => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationQuestion;
    private static Icon? LocationSmilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-smile?f=classic&amp;s=light">Location Smile</a>
    /// </summary>
    public static Icon LocationSmile => LocationSmilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-smile", "f60d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-smile?f=classic&amp;s=light">Location Smile</a>
    /// </summary>
    public static Icon MapMarkerSmile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationSmile;
    private static Icon? LocationXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-xmark?f=classic&amp;s=light">Location Xmark</a>
    /// </summary>
    public static Icon LocationXmark => LocationXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "location-xmark", "f60e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-xmark?f=classic&amp;s=light">Location Xmark</a>
    /// </summary>
    public static Icon MapMarkerTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/location-xmark?f=classic&amp;s=light">Location Xmark</a>
    /// </summary>
    public static Icon MapMarkerXmark => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LocationXmark;
    private static Icon? Lockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock?f=classic&amp;s=light">Lock</a>
    /// </summary>
    public static Icon Lock => Lockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lock", "f023");
    private static Icon? LockAf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-a?f=classic&amp;s=light">Lock A</a>
    /// </summary>
    public static Icon LockA => LockAf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lock-a", "e422");
    private static Icon? LockHashtagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-hashtag?f=classic&amp;s=light">Lock Hashtag</a>
    /// </summary>
    public static Icon LockHashtag => LockHashtagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lock-hashtag", "e423");
    private static Icon? LockKeyholef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-keyhole?f=classic&amp;s=light">Lock Keyhole</a>
    /// </summary>
    public static Icon LockKeyhole => LockKeyholef ??= new Icon(IconFamily.Classic, IconStyle.Light, "lock-keyhole", "f30d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-keyhole?f=classic&amp;s=light">Lock Keyhole</a>
    /// </summary>
    public static Icon LockAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LockKeyhole;
    private static Icon? LockKeyholeOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-keyhole-open?f=classic&amp;s=light">Lock Keyhole Open</a>
    /// </summary>
    public static Icon LockKeyholeOpen => LockKeyholeOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lock-keyhole-open", "f3c2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-keyhole-open?f=classic&amp;s=light">Lock Keyhole Open</a>
    /// </summary>
    public static Icon LockOpenAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LockKeyholeOpen;
    private static Icon? LockOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lock-open?f=classic&amp;s=light">Lock Open</a>
    /// </summary>
    public static Icon LockOpen => LockOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lock-open", "f3c1");
    private static Icon? Locustf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/locust?f=classic&amp;s=light">Locust</a>
    /// </summary>
    public static Icon Locust => Locustf ??= new Icon(IconFamily.Classic, IconStyle.Light, "locust", "e520");
    private static Icon? Lollipopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lollipop?f=classic&amp;s=light">Lollipop</a>
    /// </summary>
    public static Icon Lollipop => Lollipopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lollipop", "e424");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lollipop?f=classic&amp;s=light">Lollipop</a>
    /// </summary>
    public static Icon Lollypop => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Lollipop;
    private static Icon? Loveseatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/loveseat?f=classic&amp;s=light">Loveseat</a>
    /// </summary>
    public static Icon Loveseat => Loveseatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "loveseat", "f4cc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/loveseat?f=classic&amp;s=light">Loveseat</a>
    /// </summary>
    public static Icon CouchSmall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Loveseat;
    private static Icon? LuchadorMaskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/luchador-mask?f=classic&amp;s=light">Luchador Mask</a>
    /// </summary>
    public static Icon LuchadorMask => LuchadorMaskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "luchador-mask", "f455");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/luchador-mask?f=classic&amp;s=light">Luchador Mask</a>
    /// </summary>
    public static Icon Luchador => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LuchadorMask;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/luchador-mask?f=classic&amp;s=light">Luchador Mask</a>
    /// </summary>
    public static Icon MaskLuchador => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.LuchadorMask;
    private static Icon? Lungsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lungs?f=classic&amp;s=light">Lungs</a>
    /// </summary>
    public static Icon Lungs => Lungsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lungs", "f604");
    private static Icon? LungsVirusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/lungs-virus?f=classic&amp;s=light">Lungs Virus</a>
    /// </summary>
    public static Icon LungsVirus => LungsVirusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "lungs-virus", "e067");
    private static Icon? Mf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/m?f=classic&amp;s=light">M</a>
    /// </summary>
    public static Icon M => Mf ??= new Icon(IconFamily.Classic, IconStyle.Light, "m", "4d");
    private static Icon? Macef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mace?f=classic&amp;s=light">Mace</a>
    /// </summary>
    public static Icon Mace => Macef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mace", "f6f8");
    private static Icon? Magnetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnet?f=classic&amp;s=light">Magnet</a>
    /// </summary>
    public static Icon Magnet => Magnetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnet", "f076");
    private static Icon? MagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass?f=classic&amp;s=light">Magnifying Glass</a>
    /// </summary>
    public static Icon MagnifyingGlass => MagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass", "f002");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass?f=classic&amp;s=light">Magnifying Glass</a>
    /// </summary>
    public static Icon Search => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MagnifyingGlass;
    private static Icon? MagnifyingGlassArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-arrow-right?f=classic&amp;s=light">Magnifying Glass Arrow Right</a>
    /// </summary>
    public static Icon MagnifyingGlassArrowRight => MagnifyingGlassArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-arrow-right", "e521");
    private static Icon? MagnifyingGlassArrowsRotatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-arrows-rotate?f=classic&amp;s=light">Magnifying Glass Arrows Rotate</a>
    /// </summary>
    public static Icon MagnifyingGlassArrowsRotate => MagnifyingGlassArrowsRotatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-arrows-rotate", "e65e");
    private static Icon? MagnifyingGlassChartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-chart?f=classic&amp;s=light">Magnifying Glass Chart</a>
    /// </summary>
    public static Icon MagnifyingGlassChart => MagnifyingGlassChartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-chart", "e522");
    private static Icon? MagnifyingGlassDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-dollar?f=classic&amp;s=light">Magnifying Glass Dollar</a>
    /// </summary>
    public static Icon MagnifyingGlassDollar => MagnifyingGlassDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-dollar", "f688");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-dollar?f=classic&amp;s=light">Magnifying Glass Dollar</a>
    /// </summary>
    public static Icon SearchDollar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MagnifyingGlassDollar;
    private static Icon? MagnifyingGlassLocationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-location?f=classic&amp;s=light">Magnifying Glass Location</a>
    /// </summary>
    public static Icon MagnifyingGlassLocation => MagnifyingGlassLocationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-location", "f689");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-location?f=classic&amp;s=light">Magnifying Glass Location</a>
    /// </summary>
    public static Icon SearchLocation => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MagnifyingGlassLocation;
    private static Icon? MagnifyingGlassMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-minus?f=classic&amp;s=light">Magnifying Glass Minus</a>
    /// </summary>
    public static Icon MagnifyingGlassMinus => MagnifyingGlassMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-minus", "f010");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-minus?f=classic&amp;s=light">Magnifying Glass Minus</a>
    /// </summary>
    public static Icon SearchMinus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MagnifyingGlassMinus;
    private static Icon? MagnifyingGlassMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-music?f=classic&amp;s=light">Magnifying Glass Music</a>
    /// </summary>
    public static Icon MagnifyingGlassMusic => MagnifyingGlassMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-music", "e65f");
    private static Icon? MagnifyingGlassPlayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-play?f=classic&amp;s=light">Magnifying Glass Play</a>
    /// </summary>
    public static Icon MagnifyingGlassPlay => MagnifyingGlassPlayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-play", "e660");
    private static Icon? MagnifyingGlassPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-plus?f=classic&amp;s=light">Magnifying Glass Plus</a>
    /// </summary>
    public static Icon MagnifyingGlassPlus => MagnifyingGlassPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-plus", "f00e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-plus?f=classic&amp;s=light">Magnifying Glass Plus</a>
    /// </summary>
    public static Icon SearchPlus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MagnifyingGlassPlus;
    private static Icon? MagnifyingGlassWaveformf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/magnifying-glass-waveform?f=classic&amp;s=light">Magnifying Glass Waveform</a>
    /// </summary>
    public static Icon MagnifyingGlassWaveform => MagnifyingGlassWaveformf ??= new Icon(IconFamily.Classic, IconStyle.Light, "magnifying-glass-waveform", "e661");
    private static Icon? Mailboxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mailbox?f=classic&amp;s=light">Mailbox</a>
    /// </summary>
    public static Icon Mailbox => Mailboxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mailbox", "f813");
    private static Icon? MailboxFlagUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mailbox-flag-up?f=classic&amp;s=light">Mailbox Flag Up</a>
    /// </summary>
    public static Icon MailboxFlagUp => MailboxFlagUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mailbox-flag-up", "e5bb");
    private static Icon? ManatSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/manat-sign?f=classic&amp;s=light">Manat Sign</a>
    /// </summary>
    public static Icon ManatSign => ManatSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "manat-sign", "e1d5");
    private static Icon? Mandolinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mandolin?f=classic&amp;s=light">Mandolin</a>
    /// </summary>
    public static Icon Mandolin => Mandolinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mandolin", "f6f9");
    private static Icon? Mangof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mango?f=classic&amp;s=light">Mango</a>
    /// </summary>
    public static Icon Mango => Mangof ??= new Icon(IconFamily.Classic, IconStyle.Light, "mango", "e30f");
    private static Icon? Manholef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/manhole?f=classic&amp;s=light">Manhole</a>
    /// </summary>
    public static Icon Manhole => Manholef ??= new Icon(IconFamily.Classic, IconStyle.Light, "manhole", "e1d6");
    private static Icon? Mapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/map?f=classic&amp;s=light">Map</a>
    /// </summary>
    public static Icon Map => Mapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "map", "f279");
    private static Icon? MapLocationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/map-location?f=classic&amp;s=light">Map Location</a>
    /// </summary>
    public static Icon MapLocation => MapLocationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "map-location", "f59f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/map-location?f=classic&amp;s=light">Map Location</a>
    /// </summary>
    public static Icon MapMarked => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MapLocation;
    private static Icon? MapLocationDotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/map-location-dot?f=classic&amp;s=light">Map Location Dot</a>
    /// </summary>
    public static Icon MapLocationDot => MapLocationDotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "map-location-dot", "f5a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/map-location-dot?f=classic&amp;s=light">Map Location Dot</a>
    /// </summary>
    public static Icon MapMarkedAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MapLocationDot;
    private static Icon? MapPinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/map-pin?f=classic&amp;s=light">Map Pin</a>
    /// </summary>
    public static Icon MapPin => MapPinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "map-pin", "f276");
    private static Icon? Markerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/marker?f=classic&amp;s=light">Marker</a>
    /// </summary>
    public static Icon Marker => Markerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "marker", "f5a1");
    private static Icon? Marsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars?f=classic&amp;s=light">Mars</a>
    /// </summary>
    public static Icon Mars => Marsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars", "f222");
    private static Icon? MarsAndVenusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-and-venus?f=classic&amp;s=light">Mars And Venus</a>
    /// </summary>
    public static Icon MarsAndVenus => MarsAndVenusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars-and-venus", "f224");
    private static Icon? MarsAndVenusBurstf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-and-venus-burst?f=classic&amp;s=light">Mars And Venus Burst</a>
    /// </summary>
    public static Icon MarsAndVenusBurst => MarsAndVenusBurstf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars-and-venus-burst", "e523");
    private static Icon? MarsDoublef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-double?f=classic&amp;s=light">Mars Double</a>
    /// </summary>
    public static Icon MarsDouble => MarsDoublef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars-double", "f227");
    private static Icon? MarsStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-stroke?f=classic&amp;s=light">Mars Stroke</a>
    /// </summary>
    public static Icon MarsStroke => MarsStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars-stroke", "f229");
    private static Icon? MarsStrokeRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-stroke-right?f=classic&amp;s=light">Mars Stroke Right</a>
    /// </summary>
    public static Icon MarsStrokeRight => MarsStrokeRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars-stroke-right", "f22b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-stroke-right?f=classic&amp;s=light">Mars Stroke Right</a>
    /// </summary>
    public static Icon MarsStrokeH => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MarsStrokeRight;
    private static Icon? MarsStrokeUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-stroke-up?f=classic&amp;s=light">Mars Stroke Up</a>
    /// </summary>
    public static Icon MarsStrokeUp => MarsStrokeUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mars-stroke-up", "f22a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mars-stroke-up?f=classic&amp;s=light">Mars Stroke Up</a>
    /// </summary>
    public static Icon MarsStrokeV => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MarsStrokeUp;
    private static Icon? MartiniGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/martini-glass?f=classic&amp;s=light">Martini Glass</a>
    /// </summary>
    public static Icon MartiniGlass => MartiniGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "martini-glass", "f57b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/martini-glass?f=classic&amp;s=light">Martini Glass</a>
    /// </summary>
    public static Icon GlassMartiniAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MartiniGlass;
    private static Icon? MartiniGlassCitrusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/martini-glass-citrus?f=classic&amp;s=light">Martini Glass Citrus</a>
    /// </summary>
    public static Icon MartiniGlassCitrus => MartiniGlassCitrusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "martini-glass-citrus", "f561");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/martini-glass-citrus?f=classic&amp;s=light">Martini Glass Citrus</a>
    /// </summary>
    public static Icon Cocktail => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MartiniGlassCitrus;
    private static Icon? MartiniGlassEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/martini-glass-empty?f=classic&amp;s=light">Martini Glass Empty</a>
    /// </summary>
    public static Icon MartiniGlassEmpty => MartiniGlassEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "martini-glass-empty", "f000");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/martini-glass-empty?f=classic&amp;s=light">Martini Glass Empty</a>
    /// </summary>
    public static Icon GlassMartini => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MartiniGlassEmpty;
    private static Icon? Maskf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mask?f=classic&amp;s=light">Mask</a>
    /// </summary>
    public static Icon Mask => Maskf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mask", "f6fa");
    private static Icon? MaskFacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mask-face?f=classic&amp;s=light">Mask Face</a>
    /// </summary>
    public static Icon MaskFace => MaskFacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mask-face", "e1d7");
    private static Icon? MaskSnorkelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mask-snorkel?f=classic&amp;s=light">Mask Snorkel</a>
    /// </summary>
    public static Icon MaskSnorkel => MaskSnorkelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mask-snorkel", "e3b7");
    private static Icon? MaskVentilatorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mask-ventilator?f=classic&amp;s=light">Mask Ventilator</a>
    /// </summary>
    public static Icon MaskVentilator => MaskVentilatorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mask-ventilator", "e524");
    private static Icon? MasksTheaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/masks-theater?f=classic&amp;s=light">Masks Theater</a>
    /// </summary>
    public static Icon MasksTheater => MasksTheaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "masks-theater", "f630");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/masks-theater?f=classic&amp;s=light">Masks Theater</a>
    /// </summary>
    public static Icon TheaterMasks => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MasksTheater;
    private static Icon? MattressPillowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mattress-pillow?f=classic&amp;s=light">Mattress Pillow</a>
    /// </summary>
    public static Icon MattressPillow => MattressPillowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mattress-pillow", "e525");
    private static Icon? Maximizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/maximize?f=classic&amp;s=light">Maximize</a>
    /// </summary>
    public static Icon Maximize => Maximizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "maximize", "f31e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/maximize?f=classic&amp;s=light">Maximize</a>
    /// </summary>
    public static Icon ExpandArrowsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Maximize;
    private static Icon? Meatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/meat?f=classic&amp;s=light">Meat</a>
    /// </summary>
    public static Icon Meat => Meatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "meat", "f814");
    private static Icon? Medalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/medal?f=classic&amp;s=light">Medal</a>
    /// </summary>
    public static Icon Medal => Medalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "medal", "f5a2");
    private static Icon? Megaphonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/megaphone?f=classic&amp;s=light">Megaphone</a>
    /// </summary>
    public static Icon Megaphone => Megaphonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "megaphone", "f675");
    private static Icon? Melonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/melon?f=classic&amp;s=light">Melon</a>
    /// </summary>
    public static Icon Melon => Melonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "melon", "e310");
    private static Icon? MelonSlicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/melon-slice?f=classic&amp;s=light">Melon Slice</a>
    /// </summary>
    public static Icon MelonSlice => MelonSlicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "melon-slice", "e311");
    private static Icon? Memof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/memo?f=classic&amp;s=light">Memo</a>
    /// </summary>
    public static Icon Memo => Memof ??= new Icon(IconFamily.Classic, IconStyle.Light, "memo", "e1d8");
    private static Icon? MemoCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/memo-circle-check?f=classic&amp;s=light">Memo Circle Check</a>
    /// </summary>
    public static Icon MemoCircleCheck => MemoCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "memo-circle-check", "e1d9");
    private static Icon? MemoCircleInfof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/memo-circle-info?f=classic&amp;s=light">Memo Circle Info</a>
    /// </summary>
    public static Icon MemoCircleInfo => MemoCircleInfof ??= new Icon(IconFamily.Classic, IconStyle.Light, "memo-circle-info", "e49a");
    private static Icon? MemoPadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/memo-pad?f=classic&amp;s=light">Memo Pad</a>
    /// </summary>
    public static Icon MemoPad => MemoPadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "memo-pad", "e1da");
    private static Icon? Memoryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/memory?f=classic&amp;s=light">Memory</a>
    /// </summary>
    public static Icon Memory => Memoryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "memory", "f538");
    private static Icon? Menorahf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/menorah?f=classic&amp;s=light">Menorah</a>
    /// </summary>
    public static Icon Menorah => Menorahf ??= new Icon(IconFamily.Classic, IconStyle.Light, "menorah", "f676");
    private static Icon? Mercuryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mercury?f=classic&amp;s=light">Mercury</a>
    /// </summary>
    public static Icon Mercury => Mercuryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mercury", "f223");
    private static Icon? Mergef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/merge?f=classic&amp;s=light">Merge</a>
    /// </summary>
    public static Icon Merge => Mergef ??= new Icon(IconFamily.Classic, IconStyle.Light, "merge", "e526");
    private static Icon? Messagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message?f=classic&amp;s=light">Message</a>
    /// </summary>
    public static Icon Message => Messagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "message", "f27a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message?f=classic&amp;s=light">Message</a>
    /// </summary>
    public static Icon CommentAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Message;
    private static Icon? MessageArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-arrow-down?f=classic&amp;s=light">Message Arrow Down</a>
    /// </summary>
    public static Icon MessageArrowDown => MessageArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-arrow-down", "e1db");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-arrow-down?f=classic&amp;s=light">Message Arrow Down</a>
    /// </summary>
    public static Icon CommentAltArrowDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageArrowDown;
    private static Icon? MessageArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-arrow-up?f=classic&amp;s=light">Message Arrow Up</a>
    /// </summary>
    public static Icon MessageArrowUp => MessageArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-arrow-up", "e1dc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-arrow-up?f=classic&amp;s=light">Message Arrow Up</a>
    /// </summary>
    public static Icon CommentAltArrowUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageArrowUp;
    private static Icon? MessageArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-arrow-up-right?f=classic&amp;s=light">Message Arrow Up Right</a>
    /// </summary>
    public static Icon MessageArrowUpRight => MessageArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-arrow-up-right", "e1dd");
    private static Icon? MessageBotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-bot?f=classic&amp;s=light">Message Bot</a>
    /// </summary>
    public static Icon MessageBot => MessageBotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-bot", "e3b8");
    private static Icon? MessageCaptionsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-captions?f=classic&amp;s=light">Message Captions</a>
    /// </summary>
    public static Icon MessageCaptions => MessageCaptionsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-captions", "e1de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-captions?f=classic&amp;s=light">Message Captions</a>
    /// </summary>
    public static Icon CommentAltCaptions => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageCaptions;
    private static Icon? MessageCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-check?f=classic&amp;s=light">Message Check</a>
    /// </summary>
    public static Icon MessageCheck => MessageCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-check", "f4a2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-check?f=classic&amp;s=light">Message Check</a>
    /// </summary>
    public static Icon CommentAltCheck => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageCheck;
    private static Icon? MessageCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-code?f=classic&amp;s=light">Message Code</a>
    /// </summary>
    public static Icon MessageCode => MessageCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-code", "e1df");
    private static Icon? MessageDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-dollar?f=classic&amp;s=light">Message Dollar</a>
    /// </summary>
    public static Icon MessageDollar => MessageDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-dollar", "f650");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-dollar?f=classic&amp;s=light">Message Dollar</a>
    /// </summary>
    public static Icon CommentAltDollar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageDollar;
    private static Icon? MessageDotsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-dots?f=classic&amp;s=light">Message Dots</a>
    /// </summary>
    public static Icon MessageDots => MessageDotsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-dots", "f4a3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-dots?f=classic&amp;s=light">Message Dots</a>
    /// </summary>
    public static Icon CommentAltDots => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageDots;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-dots?f=classic&amp;s=light">Message Dots</a>
    /// </summary>
    public static Icon Messaging => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageDots;
    private static Icon? MessageExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-exclamation?f=classic&amp;s=light">Message Exclamation</a>
    /// </summary>
    public static Icon MessageExclamation => MessageExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-exclamation", "f4a5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-exclamation?f=classic&amp;s=light">Message Exclamation</a>
    /// </summary>
    public static Icon CommentAltExclamation => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageExclamation;
    private static Icon? MessageHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-heart?f=classic&amp;s=light">Message Heart</a>
    /// </summary>
    public static Icon MessageHeart => MessageHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-heart", "e5c9");
    private static Icon? MessageImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-image?f=classic&amp;s=light">Message Image</a>
    /// </summary>
    public static Icon MessageImage => MessageImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-image", "e1e0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-image?f=classic&amp;s=light">Message Image</a>
    /// </summary>
    public static Icon CommentAltImage => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageImage;
    private static Icon? MessageLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-lines?f=classic&amp;s=light">Message Lines</a>
    /// </summary>
    public static Icon MessageLines => MessageLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-lines", "f4a6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-lines?f=classic&amp;s=light">Message Lines</a>
    /// </summary>
    public static Icon CommentAltLines => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageLines;
    private static Icon? MessageMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-medical?f=classic&amp;s=light">Message Medical</a>
    /// </summary>
    public static Icon MessageMedical => MessageMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-medical", "f7f4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-medical?f=classic&amp;s=light">Message Medical</a>
    /// </summary>
    public static Icon CommentAltMedical => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageMedical;
    private static Icon? MessageMiddlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-middle?f=classic&amp;s=light">Message Middle</a>
    /// </summary>
    public static Icon MessageMiddle => MessageMiddlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-middle", "e1e1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-middle?f=classic&amp;s=light">Message Middle</a>
    /// </summary>
    public static Icon CommentMiddleAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageMiddle;
    private static Icon? MessageMiddleTopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-middle-top?f=classic&amp;s=light">Message Middle Top</a>
    /// </summary>
    public static Icon MessageMiddleTop => MessageMiddleTopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-middle-top", "e1e2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-middle-top?f=classic&amp;s=light">Message Middle Top</a>
    /// </summary>
    public static Icon CommentMiddleTopAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageMiddleTop;
    private static Icon? MessageMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-minus?f=classic&amp;s=light">Message Minus</a>
    /// </summary>
    public static Icon MessageMinus => MessageMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-minus", "f4a7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-minus?f=classic&amp;s=light">Message Minus</a>
    /// </summary>
    public static Icon CommentAltMinus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageMinus;
    private static Icon? MessageMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-music?f=classic&amp;s=light">Message Music</a>
    /// </summary>
    public static Icon MessageMusic => MessageMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-music", "f8af");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-music?f=classic&amp;s=light">Message Music</a>
    /// </summary>
    public static Icon CommentAltMusic => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageMusic;
    private static Icon? MessagePenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-pen?f=classic&amp;s=light">Message Pen</a>
    /// </summary>
    public static Icon MessagePen => MessagePenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-pen", "f4a4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-pen?f=classic&amp;s=light">Message Pen</a>
    /// </summary>
    public static Icon CommentAltEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessagePen;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-pen?f=classic&amp;s=light">Message Pen</a>
    /// </summary>
    public static Icon MessageEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessagePen;
    private static Icon? MessagePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-plus?f=classic&amp;s=light">Message Plus</a>
    /// </summary>
    public static Icon MessagePlus => MessagePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-plus", "f4a8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-plus?f=classic&amp;s=light">Message Plus</a>
    /// </summary>
    public static Icon CommentAltPlus => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessagePlus;
    private static Icon? MessageQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-question?f=classic&amp;s=light">Message Question</a>
    /// </summary>
    public static Icon MessageQuestion => MessageQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-question", "e1e3");
    private static Icon? MessageQuotef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-quote?f=classic&amp;s=light">Message Quote</a>
    /// </summary>
    public static Icon MessageQuote => MessageQuotef ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-quote", "e1e4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-quote?f=classic&amp;s=light">Message Quote</a>
    /// </summary>
    public static Icon CommentAltQuote => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageQuote;
    private static Icon? MessageSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-slash?f=classic&amp;s=light">Message Slash</a>
    /// </summary>
    public static Icon MessageSlash => MessageSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-slash", "f4a9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-slash?f=classic&amp;s=light">Message Slash</a>
    /// </summary>
    public static Icon CommentAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageSlash;
    private static Icon? MessageSmilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-smile?f=classic&amp;s=light">Message Smile</a>
    /// </summary>
    public static Icon MessageSmile => MessageSmilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-smile", "f4aa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-smile?f=classic&amp;s=light">Message Smile</a>
    /// </summary>
    public static Icon CommentAltSmile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageSmile;
    private static Icon? MessageSmsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-sms?f=classic&amp;s=light">Message Sms</a>
    /// </summary>
    public static Icon MessageSms => MessageSmsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-sms", "e1e5");
    private static Icon? MessageTextf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-text?f=classic&amp;s=light">Message Text</a>
    /// </summary>
    public static Icon MessageText => MessageTextf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-text", "e1e6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-text?f=classic&amp;s=light">Message Text</a>
    /// </summary>
    public static Icon CommentAltText => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageText;
    private static Icon? MessageXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-xmark?f=classic&amp;s=light">Message Xmark</a>
    /// </summary>
    public static Icon MessageXmark => MessageXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "message-xmark", "f4ab");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-xmark?f=classic&amp;s=light">Message Xmark</a>
    /// </summary>
    public static Icon CommentAltTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/message-xmark?f=classic&amp;s=light">Message Xmark</a>
    /// </summary>
    public static Icon MessageTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessageXmark;
    private static Icon? Messagesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/messages?f=classic&amp;s=light">Messages</a>
    /// </summary>
    public static Icon Messages => Messagesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "messages", "f4b6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/messages?f=classic&amp;s=light">Messages</a>
    /// </summary>
    public static Icon CommentsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Messages;
    private static Icon? MessagesDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/messages-dollar?f=classic&amp;s=light">Messages Dollar</a>
    /// </summary>
    public static Icon MessagesDollar => MessagesDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "messages-dollar", "f652");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/messages-dollar?f=classic&amp;s=light">Messages Dollar</a>
    /// </summary>
    public static Icon CommentsAltDollar => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MessagesDollar;
    private static Icon? MessagesQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/messages-question?f=classic&amp;s=light">Messages Question</a>
    /// </summary>
    public static Icon MessagesQuestion => MessagesQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "messages-question", "e1e7");
    private static Icon? Meteorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/meteor?f=classic&amp;s=light">Meteor</a>
    /// </summary>
    public static Icon Meteor => Meteorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "meteor", "f753");
    private static Icon? Meterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/meter?f=classic&amp;s=light">Meter</a>
    /// </summary>
    public static Icon Meter => Meterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "meter", "e1e8");
    private static Icon? MeterBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/meter-bolt?f=classic&amp;s=light">Meter Bolt</a>
    /// </summary>
    public static Icon MeterBolt => MeterBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "meter-bolt", "e1e9");
    private static Icon? MeterDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/meter-droplet?f=classic&amp;s=light">Meter Droplet</a>
    /// </summary>
    public static Icon MeterDroplet => MeterDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "meter-droplet", "e1ea");
    private static Icon? MeterFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/meter-fire?f=classic&amp;s=light">Meter Fire</a>
    /// </summary>
    public static Icon MeterFire => MeterFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "meter-fire", "e1eb");
    private static Icon? Microchipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microchip?f=classic&amp;s=light">Microchip</a>
    /// </summary>
    public static Icon Microchip => Microchipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "microchip", "f2db");
    private static Icon? MicrochipAif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microchip-ai?f=classic&amp;s=light">Microchip Ai</a>
    /// </summary>
    public static Icon MicrochipAi => MicrochipAif ??= new Icon(IconFamily.Classic, IconStyle.Light, "microchip-ai", "e1ec");
    private static Icon? Microphonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone?f=classic&amp;s=light">Microphone</a>
    /// </summary>
    public static Icon Microphone => Microphonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "microphone", "f130");
    private static Icon? MicrophoneLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone-lines?f=classic&amp;s=light">Microphone Lines</a>
    /// </summary>
    public static Icon MicrophoneLines => MicrophoneLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "microphone-lines", "f3c9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone-lines?f=classic&amp;s=light">Microphone Lines</a>
    /// </summary>
    public static Icon MicrophoneAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MicrophoneLines;
    private static Icon? MicrophoneLinesSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone-lines-slash?f=classic&amp;s=light">Microphone Lines Slash</a>
    /// </summary>
    public static Icon MicrophoneLinesSlash => MicrophoneLinesSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "microphone-lines-slash", "f539");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone-lines-slash?f=classic&amp;s=light">Microphone Lines Slash</a>
    /// </summary>
    public static Icon MicrophoneAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MicrophoneLinesSlash;
    private static Icon? MicrophoneSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone-slash?f=classic&amp;s=light">Microphone Slash</a>
    /// </summary>
    public static Icon MicrophoneSlash => MicrophoneSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "microphone-slash", "f131");
    private static Icon? MicrophoneStandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microphone-stand?f=classic&amp;s=light">Microphone Stand</a>
    /// </summary>
    public static Icon MicrophoneStand => MicrophoneStandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "microphone-stand", "f8cb");
    private static Icon? Microscopef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microscope?f=classic&amp;s=light">Microscope</a>
    /// </summary>
    public static Icon Microscope => Microscopef ??= new Icon(IconFamily.Classic, IconStyle.Light, "microscope", "f610");
    private static Icon? Microwavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/microwave?f=classic&amp;s=light">Microwave</a>
    /// </summary>
    public static Icon Microwave => Microwavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "microwave", "e01b");
    private static Icon? MillSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mill-sign?f=classic&amp;s=light">Mill Sign</a>
    /// </summary>
    public static Icon MillSign => MillSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mill-sign", "e1ed");
    private static Icon? Minimizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/minimize?f=classic&amp;s=light">Minimize</a>
    /// </summary>
    public static Icon Minimize => Minimizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "minimize", "f78c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/minimize?f=classic&amp;s=light">Minimize</a>
    /// </summary>
    public static Icon CompressArrowsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Minimize;
    private static Icon? Minusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/minus?f=classic&amp;s=light">Minus</a>
    /// </summary>
    public static Icon Minus => Minusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "minus", "f068");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/minus?f=classic&amp;s=light">Minus</a>
    /// </summary>
    public static Icon Subtract => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Minus;
    private static Icon? Mistletoef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mistletoe?f=classic&amp;s=light">Mistletoe</a>
    /// </summary>
    public static Icon Mistletoe => Mistletoef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mistletoe", "f7b4");
    private static Icon? Mittenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mitten?f=classic&amp;s=light">Mitten</a>
    /// </summary>
    public static Icon Mitten => Mittenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mitten", "f7b5");
    private static Icon? Mobilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile?f=classic&amp;s=light">Mobile</a>
    /// </summary>
    public static Icon Mobile => Mobilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile", "f3ce");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile?f=classic&amp;s=light">Mobile</a>
    /// </summary>
    public static Icon MobileAndroid => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Mobile;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile?f=classic&amp;s=light">Mobile</a>
    /// </summary>
    public static Icon MobilePhone => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Mobile;
    private static Icon? MobileButtonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-button?f=classic&amp;s=light">Mobile Button</a>
    /// </summary>
    public static Icon MobileButton => MobileButtonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-button", "f10b");
    private static Icon? MobileNotchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-notch?f=classic&amp;s=light">Mobile Notch</a>
    /// </summary>
    public static Icon MobileNotch => MobileNotchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-notch", "e1ee");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-notch?f=classic&amp;s=light">Mobile Notch</a>
    /// </summary>
    public static Icon MobileIphone => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MobileNotch;
    private static Icon? MobileRetrof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-retro?f=classic&amp;s=light">Mobile Retro</a>
    /// </summary>
    public static Icon MobileRetro => MobileRetrof ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-retro", "e527");
    private static Icon? MobileScreenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-screen?f=classic&amp;s=light">Mobile Screen</a>
    /// </summary>
    public static Icon MobileScreen => MobileScreenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-screen", "f3cf");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-screen?f=classic&amp;s=light">Mobile Screen</a>
    /// </summary>
    public static Icon MobileAndroidAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MobileScreen;
    private static Icon? MobileScreenButtonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-screen-button?f=classic&amp;s=light">Mobile Screen Button</a>
    /// </summary>
    public static Icon MobileScreenButton => MobileScreenButtonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-screen-button", "f3cd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-screen-button?f=classic&amp;s=light">Mobile Screen Button</a>
    /// </summary>
    public static Icon MobileAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MobileScreenButton;
    private static Icon? MobileSignalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-signal?f=classic&amp;s=light">Mobile Signal</a>
    /// </summary>
    public static Icon MobileSignal => MobileSignalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-signal", "e1ef");
    private static Icon? MobileSignalOutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mobile-signal-out?f=classic&amp;s=light">Mobile Signal Out</a>
    /// </summary>
    public static Icon MobileSignalOut => MobileSignalOutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mobile-signal-out", "e1f0");
    private static Icon? MoneyBillf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill?f=classic&amp;s=light">Money Bill</a>
    /// </summary>
    public static Icon MoneyBill => MoneyBillf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill", "f0d6");
    private static Icon? MoneyBill1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-1?f=classic&amp;s=light">Money Bill 1</a>
    /// </summary>
    public static Icon MoneyBill1 => MoneyBill1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-1", "f3d1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-1?f=classic&amp;s=light">Money Bill 1</a>
    /// </summary>
    public static Icon MoneyBillAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoneyBill1;
    private static Icon? MoneyBill1Wavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-1-wave?f=classic&amp;s=light">Money Bill 1 Wave</a>
    /// </summary>
    public static Icon MoneyBill1Wave => MoneyBill1Wavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-1-wave", "f53b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-1-wave?f=classic&amp;s=light">Money Bill 1 Wave</a>
    /// </summary>
    public static Icon MoneyBillWaveAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoneyBill1Wave;
    private static Icon? MoneyBillSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-simple?f=classic&amp;s=light">Money Bill Simple</a>
    /// </summary>
    public static Icon MoneyBillSimple => MoneyBillSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-simple", "e1f1");
    private static Icon? MoneyBillSimpleWavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-simple-wave?f=classic&amp;s=light">Money Bill Simple Wave</a>
    /// </summary>
    public static Icon MoneyBillSimpleWave => MoneyBillSimpleWavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-simple-wave", "e1f2");
    private static Icon? MoneyBillTransferf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-transfer?f=classic&amp;s=light">Money Bill Transfer</a>
    /// </summary>
    public static Icon MoneyBillTransfer => MoneyBillTransferf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-transfer", "e528");
    private static Icon? MoneyBillTrendUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-trend-up?f=classic&amp;s=light">Money Bill Trend Up</a>
    /// </summary>
    public static Icon MoneyBillTrendUp => MoneyBillTrendUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-trend-up", "e529");
    private static Icon? MoneyBillWavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-wave?f=classic&amp;s=light">Money Bill Wave</a>
    /// </summary>
    public static Icon MoneyBillWave => MoneyBillWavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-wave", "f53a");
    private static Icon? MoneyBillWheatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bill-wheat?f=classic&amp;s=light">Money Bill Wheat</a>
    /// </summary>
    public static Icon MoneyBillWheat => MoneyBillWheatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bill-wheat", "e52a");
    private static Icon? MoneyBillsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bills?f=classic&amp;s=light">Money Bills</a>
    /// </summary>
    public static Icon MoneyBills => MoneyBillsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bills", "e1f3");
    private static Icon? MoneyBillsSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bills-simple?f=classic&amp;s=light">Money Bills Simple</a>
    /// </summary>
    public static Icon MoneyBillsSimple => MoneyBillsSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-bills-simple", "e1f4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-bills-simple?f=classic&amp;s=light">Money Bills Simple</a>
    /// </summary>
    public static Icon MoneyBillsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoneyBillsSimple;
    private static Icon? MoneyCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check?f=classic&amp;s=light">Money Check</a>
    /// </summary>
    public static Icon MoneyCheck => MoneyCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-check", "f53c");
    private static Icon? MoneyCheckDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check-dollar?f=classic&amp;s=light">Money Check Dollar</a>
    /// </summary>
    public static Icon MoneyCheckDollar => MoneyCheckDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-check-dollar", "f53d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check-dollar?f=classic&amp;s=light">Money Check Dollar</a>
    /// </summary>
    public static Icon MoneyCheckAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoneyCheckDollar;
    private static Icon? MoneyCheckDollarPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check-dollar-pen?f=classic&amp;s=light">Money Check Dollar Pen</a>
    /// </summary>
    public static Icon MoneyCheckDollarPen => MoneyCheckDollarPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-check-dollar-pen", "f873");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check-dollar-pen?f=classic&amp;s=light">Money Check Dollar Pen</a>
    /// </summary>
    public static Icon MoneyCheckEditAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoneyCheckDollarPen;
    private static Icon? MoneyCheckPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check-pen?f=classic&amp;s=light">Money Check Pen</a>
    /// </summary>
    public static Icon MoneyCheckPen => MoneyCheckPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-check-pen", "f872");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-check-pen?f=classic&amp;s=light">Money Check Pen</a>
    /// </summary>
    public static Icon MoneyCheckEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoneyCheckPen;
    private static Icon? MoneyFromBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-from-bracket?f=classic&amp;s=light">Money From Bracket</a>
    /// </summary>
    public static Icon MoneyFromBracket => MoneyFromBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-from-bracket", "e312");
    private static Icon? MoneySimpleFromBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/money-simple-from-bracket?f=classic&amp;s=light">Money Simple From Bracket</a>
    /// </summary>
    public static Icon MoneySimpleFromBracket => MoneySimpleFromBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "money-simple-from-bracket", "e313");
    private static Icon? MonitorWaveformf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/monitor-waveform?f=classic&amp;s=light">Monitor Waveform</a>
    /// </summary>
    public static Icon MonitorWaveform => MonitorWaveformf ??= new Icon(IconFamily.Classic, IconStyle.Light, "monitor-waveform", "f611");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/monitor-waveform?f=classic&amp;s=light">Monitor Waveform</a>
    /// </summary>
    public static Icon MonitorHeartRate => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MonitorWaveform;
    private static Icon? Monkeyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/monkey?f=classic&amp;s=light">Monkey</a>
    /// </summary>
    public static Icon Monkey => Monkeyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "monkey", "f6fb");
    private static Icon? Monumentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/monument?f=classic&amp;s=light">Monument</a>
    /// </summary>
    public static Icon Monument => Monumentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "monument", "f5a6");
    private static Icon? Moonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/moon?f=classic&amp;s=light">Moon</a>
    /// </summary>
    public static Icon Moon => Moonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "moon", "f186");
    private static Icon? MoonCloudf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/moon-cloud?f=classic&amp;s=light">Moon Cloud</a>
    /// </summary>
    public static Icon MoonCloud => MoonCloudf ??= new Icon(IconFamily.Classic, IconStyle.Light, "moon-cloud", "f754");
    private static Icon? MoonOverSunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/moon-over-sun?f=classic&amp;s=light">Moon Over Sun</a>
    /// </summary>
    public static Icon MoonOverSun => MoonOverSunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "moon-over-sun", "f74a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/moon-over-sun?f=classic&amp;s=light">Moon Over Sun</a>
    /// </summary>
    public static Icon EclipseAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MoonOverSun;
    private static Icon? MoonStarsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/moon-stars?f=classic&amp;s=light">Moon Stars</a>
    /// </summary>
    public static Icon MoonStars => MoonStarsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "moon-stars", "f755");
    private static Icon? Mopedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/moped?f=classic&amp;s=light">Moped</a>
    /// </summary>
    public static Icon Moped => Mopedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "moped", "e3b9");
    private static Icon? MortarPestlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mortar-pestle?f=classic&amp;s=light">Mortar Pestle</a>
    /// </summary>
    public static Icon MortarPestle => MortarPestlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mortar-pestle", "f5a7");
    private static Icon? Mosquef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mosque?f=classic&amp;s=light">Mosque</a>
    /// </summary>
    public static Icon Mosque => Mosquef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mosque", "f678");
    private static Icon? Mosquitof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mosquito?f=classic&amp;s=light">Mosquito</a>
    /// </summary>
    public static Icon Mosquito => Mosquitof ??= new Icon(IconFamily.Classic, IconStyle.Light, "mosquito", "e52b");
    private static Icon? MosquitoNetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mosquito-net?f=classic&amp;s=light">Mosquito Net</a>
    /// </summary>
    public static Icon MosquitoNet => MosquitoNetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mosquito-net", "e52c");
    private static Icon? Motorcyclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/motorcycle?f=classic&amp;s=light">Motorcycle</a>
    /// </summary>
    public static Icon Motorcycle => Motorcyclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "motorcycle", "f21c");
    private static Icon? Moundf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mound?f=classic&amp;s=light">Mound</a>
    /// </summary>
    public static Icon Mound => Moundf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mound", "e52d");
    private static Icon? Mountainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mountain?f=classic&amp;s=light">Mountain</a>
    /// </summary>
    public static Icon Mountain => Mountainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mountain", "f6fc");
    private static Icon? MountainCityf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mountain-city?f=classic&amp;s=light">Mountain City</a>
    /// </summary>
    public static Icon MountainCity => MountainCityf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mountain-city", "e52e");
    private static Icon? MountainSunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mountain-sun?f=classic&amp;s=light">Mountain Sun</a>
    /// </summary>
    public static Icon MountainSun => MountainSunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mountain-sun", "e52f");
    private static Icon? Mountainsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mountains?f=classic&amp;s=light">Mountains</a>
    /// </summary>
    public static Icon Mountains => Mountainsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mountains", "f6fd");
    private static Icon? MouseFieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mouse-field?f=classic&amp;s=light">Mouse Field</a>
    /// </summary>
    public static Icon MouseField => MouseFieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mouse-field", "e5a8");
    private static Icon? Mp3Playerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mp3-player?f=classic&amp;s=light">Mp3 Player</a>
    /// </summary>
    public static Icon Mp3Player => Mp3Playerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mp3-player", "f8ce");
    private static Icon? Mugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug?f=classic&amp;s=light">Mug</a>
    /// </summary>
    public static Icon Mug => Mugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mug", "f874");
    private static Icon? MugHotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug-hot?f=classic&amp;s=light">Mug Hot</a>
    /// </summary>
    public static Icon MugHot => MugHotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mug-hot", "f7b6");
    private static Icon? MugMarshmallowsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug-marshmallows?f=classic&amp;s=light">Mug Marshmallows</a>
    /// </summary>
    public static Icon MugMarshmallows => MugMarshmallowsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mug-marshmallows", "f7b7");
    private static Icon? MugSaucerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug-saucer?f=classic&amp;s=light">Mug Saucer</a>
    /// </summary>
    public static Icon MugSaucer => MugSaucerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mug-saucer", "f0f4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug-saucer?f=classic&amp;s=light">Mug Saucer</a>
    /// </summary>
    public static Icon Coffee => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MugSaucer;
    private static Icon? MugTeaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug-tea?f=classic&amp;s=light">Mug Tea</a>
    /// </summary>
    public static Icon MugTea => MugTeaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mug-tea", "f875");
    private static Icon? MugTeaSaucerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mug-tea-saucer?f=classic&amp;s=light">Mug Tea Saucer</a>
    /// </summary>
    public static Icon MugTeaSaucer => MugTeaSaucerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mug-tea-saucer", "e1f5");
    private static Icon? Mushroomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mushroom?f=classic&amp;s=light">Mushroom</a>
    /// </summary>
    public static Icon Mushroom => Mushroomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "mushroom", "e425");
    private static Icon? Musicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music?f=classic&amp;s=light">Music</a>
    /// </summary>
    public static Icon Music => Musicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "music", "f001");
    private static Icon? MusicMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music-magnifying-glass?f=classic&amp;s=light">Music Magnifying Glass</a>
    /// </summary>
    public static Icon MusicMagnifyingGlass => MusicMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "music-magnifying-glass", "e662");
    private static Icon? MusicNotef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music-note?f=classic&amp;s=light">Music Note</a>
    /// </summary>
    public static Icon MusicNote => MusicNotef ??= new Icon(IconFamily.Classic, IconStyle.Light, "music-note", "f8cf");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music-note?f=classic&amp;s=light">Music Note</a>
    /// </summary>
    public static Icon MusicAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MusicNote;
    private static Icon? MusicNoteSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music-note-slash?f=classic&amp;s=light">Music Note Slash</a>
    /// </summary>
    public static Icon MusicNoteSlash => MusicNoteSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "music-note-slash", "f8d0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music-note-slash?f=classic&amp;s=light">Music Note Slash</a>
    /// </summary>
    public static Icon MusicAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.MusicNoteSlash;
    private static Icon? MusicSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/music-slash?f=classic&amp;s=light">Music Slash</a>
    /// </summary>
    public static Icon MusicSlash => MusicSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "music-slash", "f8d1");
    private static Icon? Mustachef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/mustache?f=classic&amp;s=light">Mustache</a>
    /// </summary>
    public static Icon Mustache => Mustachef ??= new Icon(IconFamily.Classic, IconStyle.Light, "mustache", "e5bc");
    private static Icon? Nf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/n?f=classic&amp;s=light">N</a>
    /// </summary>
    public static Icon N => Nf ??= new Icon(IconFamily.Classic, IconStyle.Light, "n", "4e");
    private static Icon? NairaSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/naira-sign?f=classic&amp;s=light">Naira Sign</a>
    /// </summary>
    public static Icon NairaSign => NairaSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "naira-sign", "e1f6");
    private static Icon? Narwhalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/narwhal?f=classic&amp;s=light">Narwhal</a>
    /// </summary>
    public static Icon Narwhal => Narwhalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "narwhal", "f6fe");
    private static Icon? NestingDollsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nesting-dolls?f=classic&amp;s=light">Nesting Dolls</a>
    /// </summary>
    public static Icon NestingDolls => NestingDollsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nesting-dolls", "e3ba");
    private static Icon? NetworkWiredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/network-wired?f=classic&amp;s=light">Network Wired</a>
    /// </summary>
    public static Icon NetworkWired => NetworkWiredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "network-wired", "f6ff");
    private static Icon? Neuterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/neuter?f=classic&amp;s=light">Neuter</a>
    /// </summary>
    public static Icon Neuter => Neuterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "neuter", "f22c");
    private static Icon? Newspaperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/newspaper?f=classic&amp;s=light">Newspaper</a>
    /// </summary>
    public static Icon Newspaper => Newspaperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "newspaper", "f1ea");
    private static Icon? Nfcf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc?f=classic&amp;s=light">Nfc</a>
    /// </summary>
    public static Icon Nfc => Nfcf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc", "e1f7");
    private static Icon? NfcLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-lock?f=classic&amp;s=light">Nfc Lock</a>
    /// </summary>
    public static Icon NfcLock => NfcLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-lock", "e1f8");
    private static Icon? NfcMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-magnifying-glass?f=classic&amp;s=light">Nfc Magnifying Glass</a>
    /// </summary>
    public static Icon NfcMagnifyingGlass => NfcMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-magnifying-glass", "e1f9");
    private static Icon? NfcPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-pen?f=classic&amp;s=light">Nfc Pen</a>
    /// </summary>
    public static Icon NfcPen => NfcPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-pen", "e1fa");
    private static Icon? NfcSignalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-signal?f=classic&amp;s=light">Nfc Signal</a>
    /// </summary>
    public static Icon NfcSignal => NfcSignalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-signal", "e1fb");
    private static Icon? NfcSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-slash?f=classic&amp;s=light">Nfc Slash</a>
    /// </summary>
    public static Icon NfcSlash => NfcSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-slash", "e1fc");
    private static Icon? NfcSymbolf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-symbol?f=classic&amp;s=light">Nfc Symbol</a>
    /// </summary>
    public static Icon NfcSymbol => NfcSymbolf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-symbol", "e531");
    private static Icon? NfcTrashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nfc-trash?f=classic&amp;s=light">Nfc Trash</a>
    /// </summary>
    public static Icon NfcTrash => NfcTrashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "nfc-trash", "e1fd");
    private static Icon? Nosef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/nose?f=classic&amp;s=light">Nose</a>
    /// </summary>
    public static Icon Nose => Nosef ??= new Icon(IconFamily.Classic, IconStyle.Light, "nose", "e5bd");
    private static Icon? NotEqualf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/not-equal?f=classic&amp;s=light">Not Equal</a>
    /// </summary>
    public static Icon NotEqual => NotEqualf ??= new Icon(IconFamily.Classic, IconStyle.Light, "not-equal", "f53e");
    private static Icon? Notdeff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/notdef?f=classic&amp;s=light">Notdef</a>
    /// </summary>
    public static Icon Notdef => Notdeff ??= new Icon(IconFamily.Classic, IconStyle.Light, "notdef", "e1fe");
    private static Icon? Notef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/note?f=classic&amp;s=light">Note</a>
    /// </summary>
    public static Icon Note => Notef ??= new Icon(IconFamily.Classic, IconStyle.Light, "note", "e1ff");
    private static Icon? NoteMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/note-medical?f=classic&amp;s=light">Note Medical</a>
    /// </summary>
    public static Icon NoteMedical => NoteMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "note-medical", "e200");
    private static Icon? NoteStickyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/note-sticky?f=classic&amp;s=light">Note Sticky</a>
    /// </summary>
    public static Icon NoteSticky => NoteStickyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "note-sticky", "f249");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/note-sticky?f=classic&amp;s=light">Note Sticky</a>
    /// </summary>
    public static Icon StickyNote => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.NoteSticky;
    private static Icon? Notebookf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/notebook?f=classic&amp;s=light">Notebook</a>
    /// </summary>
    public static Icon Notebook => Notebookf ??= new Icon(IconFamily.Classic, IconStyle.Light, "notebook", "e201");
    private static Icon? Notesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/notes?f=classic&amp;s=light">Notes</a>
    /// </summary>
    public static Icon Notes => Notesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "notes", "e202");
    private static Icon? NotesMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/notes-medical?f=classic&amp;s=light">Notes Medical</a>
    /// </summary>
    public static Icon NotesMedical => NotesMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "notes-medical", "f481");
    private static Icon? Of;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/o?f=classic&amp;s=light">O</a>
    /// </summary>
    public static Icon O => Of ??= new Icon(IconFamily.Classic, IconStyle.Light, "o", "4f");
    private static Icon? ObjectExcludef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/object-exclude?f=classic&amp;s=light">Object Exclude</a>
    /// </summary>
    public static Icon ObjectExclude => ObjectExcludef ??= new Icon(IconFamily.Classic, IconStyle.Light, "object-exclude", "e49c");
    private static Icon? ObjectGroupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/object-group?f=classic&amp;s=light">Object Group</a>
    /// </summary>
    public static Icon ObjectGroup => ObjectGroupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "object-group", "f247");
    private static Icon? ObjectIntersectf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/object-intersect?f=classic&amp;s=light">Object Intersect</a>
    /// </summary>
    public static Icon ObjectIntersect => ObjectIntersectf ??= new Icon(IconFamily.Classic, IconStyle.Light, "object-intersect", "e49d");
    private static Icon? ObjectSubtractf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/object-subtract?f=classic&amp;s=light">Object Subtract</a>
    /// </summary>
    public static Icon ObjectSubtract => ObjectSubtractf ??= new Icon(IconFamily.Classic, IconStyle.Light, "object-subtract", "e49e");
    private static Icon? ObjectUngroupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/object-ungroup?f=classic&amp;s=light">Object Ungroup</a>
    /// </summary>
    public static Icon ObjectUngroup => ObjectUngroupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "object-ungroup", "f248");
    private static Icon? ObjectUnionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/object-union?f=classic&amp;s=light">Object Union</a>
    /// </summary>
    public static Icon ObjectUnion => ObjectUnionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "object-union", "e49f");
    private static Icon? ObjectsAlignBottomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-align-bottom?f=classic&amp;s=light">Objects Align Bottom</a>
    /// </summary>
    public static Icon ObjectsAlignBottom => ObjectsAlignBottomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-align-bottom", "e3bb");
    private static Icon? ObjectsAlignCenterHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-align-center-horizontal?f=classic&amp;s=light">Objects Align Center Horizontal</a>
    /// </summary>
    public static Icon ObjectsAlignCenterHorizontal => ObjectsAlignCenterHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-align-center-horizontal", "e3bc");
    private static Icon? ObjectsAlignCenterVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-align-center-vertical?f=classic&amp;s=light">Objects Align Center Vertical</a>
    /// </summary>
    public static Icon ObjectsAlignCenterVertical => ObjectsAlignCenterVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-align-center-vertical", "e3bd");
    private static Icon? ObjectsAlignLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-align-left?f=classic&amp;s=light">Objects Align Left</a>
    /// </summary>
    public static Icon ObjectsAlignLeft => ObjectsAlignLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-align-left", "e3be");
    private static Icon? ObjectsAlignRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-align-right?f=classic&amp;s=light">Objects Align Right</a>
    /// </summary>
    public static Icon ObjectsAlignRight => ObjectsAlignRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-align-right", "e3bf");
    private static Icon? ObjectsAlignTopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-align-top?f=classic&amp;s=light">Objects Align Top</a>
    /// </summary>
    public static Icon ObjectsAlignTop => ObjectsAlignTopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-align-top", "e3c0");
    private static Icon? ObjectsColumnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/objects-column?f=classic&amp;s=light">Objects Column</a>
    /// </summary>
    public static Icon ObjectsColumn => ObjectsColumnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "objects-column", "e3c1");
    private static Icon? Octagonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon?f=classic&amp;s=light">Octagon</a>
    /// </summary>
    public static Icon Octagon => Octagonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon", "f306");
    private static Icon? OctagonCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-check?f=classic&amp;s=light">Octagon Check</a>
    /// </summary>
    public static Icon OctagonCheck => OctagonCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon-check", "e426");
    private static Icon? OctagonDividef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-divide?f=classic&amp;s=light">Octagon Divide</a>
    /// </summary>
    public static Icon OctagonDivide => OctagonDividef ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon-divide", "e203");
    private static Icon? OctagonExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-exclamation?f=classic&amp;s=light">Octagon Exclamation</a>
    /// </summary>
    public static Icon OctagonExclamation => OctagonExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon-exclamation", "e204");
    private static Icon? OctagonMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-minus?f=classic&amp;s=light">Octagon Minus</a>
    /// </summary>
    public static Icon OctagonMinus => OctagonMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon-minus", "f308");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-minus?f=classic&amp;s=light">Octagon Minus</a>
    /// </summary>
    public static Icon MinusOctagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.OctagonMinus;
    private static Icon? OctagonPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-plus?f=classic&amp;s=light">Octagon Plus</a>
    /// </summary>
    public static Icon OctagonPlus => OctagonPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon-plus", "f301");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-plus?f=classic&amp;s=light">Octagon Plus</a>
    /// </summary>
    public static Icon PlusOctagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.OctagonPlus;
    private static Icon? OctagonXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-xmark?f=classic&amp;s=light">Octagon Xmark</a>
    /// </summary>
    public static Icon OctagonXmark => OctagonXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "octagon-xmark", "f2f0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-xmark?f=classic&amp;s=light">Octagon Xmark</a>
    /// </summary>
    public static Icon TimesOctagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.OctagonXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/octagon-xmark?f=classic&amp;s=light">Octagon Xmark</a>
    /// </summary>
    public static Icon XmarkOctagon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.OctagonXmark;
    private static Icon? OilCanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/oil-can?f=classic&amp;s=light">Oil Can</a>
    /// </summary>
    public static Icon OilCan => OilCanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "oil-can", "f613");
    private static Icon? OilCanDripf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/oil-can-drip?f=classic&amp;s=light">Oil Can Drip</a>
    /// </summary>
    public static Icon OilCanDrip => OilCanDripf ??= new Icon(IconFamily.Classic, IconStyle.Light, "oil-can-drip", "e205");
    private static Icon? OilTemperaturef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/oil-temperature?f=classic&amp;s=light">Oil Temperature</a>
    /// </summary>
    public static Icon OilTemperature => OilTemperaturef ??= new Icon(IconFamily.Classic, IconStyle.Light, "oil-temperature", "f614");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/oil-temperature?f=classic&amp;s=light">Oil Temperature</a>
    /// </summary>
    public static Icon OilTemp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.OilTemperature;
    private static Icon? OilWellf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/oil-well?f=classic&amp;s=light">Oil Well</a>
    /// </summary>
    public static Icon OilWell => OilWellf ??= new Icon(IconFamily.Classic, IconStyle.Light, "oil-well", "e532");
    private static Icon? Olivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/olive?f=classic&amp;s=light">Olive</a>
    /// </summary>
    public static Icon Olive => Olivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "olive", "e316");
    private static Icon? OliveBranchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/olive-branch?f=classic&amp;s=light">Olive Branch</a>
    /// </summary>
    public static Icon OliveBranch => OliveBranchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "olive-branch", "e317");
    private static Icon? Omf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/om?f=classic&amp;s=light">Om</a>
    /// </summary>
    public static Icon Om => Omf ??= new Icon(IconFamily.Classic, IconStyle.Light, "om", "f679");
    private static Icon? Omegaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/omega?f=classic&amp;s=light">Omega</a>
    /// </summary>
    public static Icon Omega => Omegaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "omega", "f67a");
    private static Icon? Onionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/onion?f=classic&amp;s=light">Onion</a>
    /// </summary>
    public static Icon Onion => Onionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "onion", "e427");
    private static Icon? Optionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/option?f=classic&amp;s=light">Option</a>
    /// </summary>
    public static Icon Option => Optionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "option", "e318");
    private static Icon? Ornamentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ornament?f=classic&amp;s=light">Ornament</a>
    /// </summary>
    public static Icon Ornament => Ornamentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ornament", "f7b8");
    private static Icon? Otterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/otter?f=classic&amp;s=light">Otter</a>
    /// </summary>
    public static Icon Otter => Otterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "otter", "f700");
    private static Icon? Outdentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/outdent?f=classic&amp;s=light">Outdent</a>
    /// </summary>
    public static Icon Outdent => Outdentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "outdent", "f03b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/outdent?f=classic&amp;s=light">Outdent</a>
    /// </summary>
    public static Icon Dedent => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Outdent;
    private static Icon? Outletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/outlet?f=classic&amp;s=light">Outlet</a>
    /// </summary>
    public static Icon Outlet => Outletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "outlet", "e01c");
    private static Icon? Ovenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/oven?f=classic&amp;s=light">Oven</a>
    /// </summary>
    public static Icon Oven => Ovenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "oven", "e01d");
    private static Icon? Overlinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/overline?f=classic&amp;s=light">Overline</a>
    /// </summary>
    public static Icon Overline => Overlinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "overline", "f876");
    private static Icon? Pf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/p?f=classic&amp;s=light">P</a>
    /// </summary>
    public static Icon P => Pf ??= new Icon(IconFamily.Classic, IconStyle.Light, "p", "50");
    private static Icon? Pagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/page?f=classic&amp;s=light">Page</a>
    /// </summary>
    public static Icon Page => Pagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "page", "e428");
    private static Icon? PageCaretDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/page-caret-down?f=classic&amp;s=light">Page Caret Down</a>
    /// </summary>
    public static Icon PageCaretDown => PageCaretDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "page-caret-down", "e429");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/page-caret-down?f=classic&amp;s=light">Page Caret Down</a>
    /// </summary>
    public static Icon FileCaretDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PageCaretDown;
    private static Icon? PageCaretUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/page-caret-up?f=classic&amp;s=light">Page Caret Up</a>
    /// </summary>
    public static Icon PageCaretUp => PageCaretUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "page-caret-up", "e42a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/page-caret-up?f=classic&amp;s=light">Page Caret Up</a>
    /// </summary>
    public static Icon FileCaretUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PageCaretUp;
    private static Icon? Pagerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pager?f=classic&amp;s=light">Pager</a>
    /// </summary>
    public static Icon Pager => Pagerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pager", "f815");
    private static Icon? PaintRollerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paint-roller?f=classic&amp;s=light">Paint Roller</a>
    /// </summary>
    public static Icon PaintRoller => PaintRollerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paint-roller", "f5aa");
    private static Icon? Paintbrushf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush?f=classic&amp;s=light">Paintbrush</a>
    /// </summary>
    public static Icon Paintbrush => Paintbrushf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paintbrush", "f1fc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush?f=classic&amp;s=light">Paintbrush</a>
    /// </summary>
    public static Icon PaintBrush => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Paintbrush;
    private static Icon? PaintbrushFinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush-fine?f=classic&amp;s=light">Paintbrush Fine</a>
    /// </summary>
    public static Icon PaintbrushFine => PaintbrushFinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "paintbrush-fine", "f5a9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush-fine?f=classic&amp;s=light">Paintbrush Fine</a>
    /// </summary>
    public static Icon PaintBrushAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PaintbrushFine;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush-fine?f=classic&amp;s=light">Paintbrush Fine</a>
    /// </summary>
    public static Icon PaintBrushFine => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PaintbrushFine;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush-fine?f=classic&amp;s=light">Paintbrush Fine</a>
    /// </summary>
    public static Icon PaintbrushAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PaintbrushFine;
    private static Icon? PaintbrushPencilf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paintbrush-pencil?f=classic&amp;s=light">Paintbrush Pencil</a>
    /// </summary>
    public static Icon PaintbrushPencil => PaintbrushPencilf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paintbrush-pencil", "e206");
    private static Icon? Palettef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/palette?f=classic&amp;s=light">Palette</a>
    /// </summary>
    public static Icon Palette => Palettef ??= new Icon(IconFamily.Classic, IconStyle.Light, "palette", "f53f");
    private static Icon? Palletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pallet?f=classic&amp;s=light">Pallet</a>
    /// </summary>
    public static Icon Pallet => Palletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pallet", "f482");
    private static Icon? PalletBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pallet-box?f=classic&amp;s=light">Pallet Box</a>
    /// </summary>
    public static Icon PalletBox => PalletBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pallet-box", "e208");
    private static Icon? PalletBoxesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pallet-boxes?f=classic&amp;s=light">Pallet Boxes</a>
    /// </summary>
    public static Icon PalletBoxes => PalletBoxesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pallet-boxes", "f483");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pallet-boxes?f=classic&amp;s=light">Pallet Boxes</a>
    /// </summary>
    public static Icon PaletteBoxes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PalletBoxes;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pallet-boxes?f=classic&amp;s=light">Pallet Boxes</a>
    /// </summary>
    public static Icon PalletAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PalletBoxes;
    private static Icon? PanFoodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pan-food?f=classic&amp;s=light">Pan Food</a>
    /// </summary>
    public static Icon PanFood => PanFoodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pan-food", "e42b");
    private static Icon? PanFryingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pan-frying?f=classic&amp;s=light">Pan Frying</a>
    /// </summary>
    public static Icon PanFrying => PanFryingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pan-frying", "e42c");
    private static Icon? Pancakesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pancakes?f=classic&amp;s=light">Pancakes</a>
    /// </summary>
    public static Icon Pancakes => Pancakesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pancakes", "e42d");
    private static Icon? PanelEwsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/panel-ews?f=classic&amp;s=light">Panel Ews</a>
    /// </summary>
    public static Icon PanelEws => PanelEwsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "panel-ews", "e42e");
    private static Icon? PanelFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/panel-fire?f=classic&amp;s=light">Panel Fire</a>
    /// </summary>
    public static Icon PanelFire => PanelFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "panel-fire", "e42f");
    private static Icon? Panoramaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/panorama?f=classic&amp;s=light">Panorama</a>
    /// </summary>
    public static Icon Panorama => Panoramaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "panorama", "e209");
    private static Icon? PaperPlanef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paper-plane?f=classic&amp;s=light">Paper Plane</a>
    /// </summary>
    public static Icon PaperPlane => PaperPlanef ??= new Icon(IconFamily.Classic, IconStyle.Light, "paper-plane", "f1d8");
    private static Icon? PaperPlaneTopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paper-plane-top?f=classic&amp;s=light">Paper Plane Top</a>
    /// </summary>
    public static Icon PaperPlaneTop => PaperPlaneTopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paper-plane-top", "e20a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paper-plane-top?f=classic&amp;s=light">Paper Plane Top</a>
    /// </summary>
    public static Icon PaperPlaneAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PaperPlaneTop;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paper-plane-top?f=classic&amp;s=light">Paper Plane Top</a>
    /// </summary>
    public static Icon Send => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PaperPlaneTop;
    private static Icon? Paperclipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paperclip?f=classic&amp;s=light">Paperclip</a>
    /// </summary>
    public static Icon Paperclip => Paperclipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paperclip", "f0c6");
    private static Icon? PaperclipVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paperclip-vertical?f=classic&amp;s=light">Paperclip Vertical</a>
    /// </summary>
    public static Icon PaperclipVertical => PaperclipVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paperclip-vertical", "e3c2");
    private static Icon? ParachuteBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/parachute-box?f=classic&amp;s=light">Parachute Box</a>
    /// </summary>
    public static Icon ParachuteBox => ParachuteBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "parachute-box", "f4cd");
    private static Icon? Paragraphf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paragraph?f=classic&amp;s=light">Paragraph</a>
    /// </summary>
    public static Icon Paragraph => Paragraphf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paragraph", "f1dd");
    private static Icon? ParagraphLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paragraph-left?f=classic&amp;s=light">Paragraph Left</a>
    /// </summary>
    public static Icon ParagraphLeft => ParagraphLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paragraph-left", "f878");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paragraph-left?f=classic&amp;s=light">Paragraph Left</a>
    /// </summary>
    public static Icon ParagraphRtl => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ParagraphLeft;
    private static Icon? PartyBellf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/party-bell?f=classic&amp;s=light">Party Bell</a>
    /// </summary>
    public static Icon PartyBell => PartyBellf ??= new Icon(IconFamily.Classic, IconStyle.Light, "party-bell", "e31a");
    private static Icon? PartyHornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/party-horn?f=classic&amp;s=light">Party Horn</a>
    /// </summary>
    public static Icon PartyHorn => PartyHornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "party-horn", "e31b");
    private static Icon? Passportf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/passport?f=classic&amp;s=light">Passport</a>
    /// </summary>
    public static Icon Passport => Passportf ??= new Icon(IconFamily.Classic, IconStyle.Light, "passport", "f5ab");
    private static Icon? Pastef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paste?f=classic&amp;s=light">Paste</a>
    /// </summary>
    public static Icon Paste => Pastef ??= new Icon(IconFamily.Classic, IconStyle.Light, "paste", "f0ea");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paste?f=classic&amp;s=light">Paste</a>
    /// </summary>
    public static Icon FileClipboard => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Paste;
    private static Icon? Pausef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pause?f=classic&amp;s=light">Pause</a>
    /// </summary>
    public static Icon Pause => Pausef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pause", "f04c");
    private static Icon? Pawf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paw?f=classic&amp;s=light">Paw</a>
    /// </summary>
    public static Icon Paw => Pawf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paw", "f1b0");
    private static Icon? PawClawsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paw-claws?f=classic&amp;s=light">Paw Claws</a>
    /// </summary>
    public static Icon PawClaws => PawClawsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "paw-claws", "f702");
    private static Icon? PawSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paw-simple?f=classic&amp;s=light">Paw Simple</a>
    /// </summary>
    public static Icon PawSimple => PawSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "paw-simple", "f701");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/paw-simple?f=classic&amp;s=light">Paw Simple</a>
    /// </summary>
    public static Icon PawAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PawSimple;
    private static Icon? Peacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peace?f=classic&amp;s=light">Peace</a>
    /// </summary>
    public static Icon Peace => Peacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "peace", "f67c");
    private static Icon? Peachf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peach?f=classic&amp;s=light">Peach</a>
    /// </summary>
    public static Icon Peach => Peachf ??= new Icon(IconFamily.Classic, IconStyle.Light, "peach", "e20b");
    private static Icon? Peanutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peanut?f=classic&amp;s=light">Peanut</a>
    /// </summary>
    public static Icon Peanut => Peanutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "peanut", "e430");
    private static Icon? Peanutsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peanuts?f=classic&amp;s=light">Peanuts</a>
    /// </summary>
    public static Icon Peanuts => Peanutsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "peanuts", "e431");
    private static Icon? Peapodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peapod?f=classic&amp;s=light">Peapod</a>
    /// </summary>
    public static Icon Peapod => Peapodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "peapod", "e31c");
    private static Icon? Pearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pear?f=classic&amp;s=light">Pear</a>
    /// </summary>
    public static Icon Pear => Pearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pear", "e20c");
    private static Icon? Pedestalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pedestal?f=classic&amp;s=light">Pedestal</a>
    /// </summary>
    public static Icon Pedestal => Pedestalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pedestal", "e20d");
    private static Icon? Pegasusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pegasus?f=classic&amp;s=light">Pegasus</a>
    /// </summary>
    public static Icon Pegasus => Pegasusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pegasus", "f703");
    private static Icon? Penf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen?f=classic&amp;s=light">Pen</a>
    /// </summary>
    public static Icon Pen => Penf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen", "f304");
    private static Icon? PenCirclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-circle?f=classic&amp;s=light">Pen Circle</a>
    /// </summary>
    public static Icon PenCircle => PenCirclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-circle", "e20e");
    private static Icon? PenClipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-clip?f=classic&amp;s=light">Pen Clip</a>
    /// </summary>
    public static Icon PenClip => PenClipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-clip", "f305");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-clip?f=classic&amp;s=light">Pen Clip</a>
    /// </summary>
    public static Icon PenAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PenClip;
    private static Icon? PenClipSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-clip-slash?f=classic&amp;s=light">Pen Clip Slash</a>
    /// </summary>
    public static Icon PenClipSlash => PenClipSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-clip-slash", "e20f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-clip-slash?f=classic&amp;s=light">Pen Clip Slash</a>
    /// </summary>
    public static Icon PenAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PenClipSlash;
    private static Icon? PenFancyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-fancy?f=classic&amp;s=light">Pen Fancy</a>
    /// </summary>
    public static Icon PenFancy => PenFancyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-fancy", "f5ac");
    private static Icon? PenFancySlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-fancy-slash?f=classic&amp;s=light">Pen Fancy Slash</a>
    /// </summary>
    public static Icon PenFancySlash => PenFancySlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-fancy-slash", "e210");
    private static Icon? PenFieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-field?f=classic&amp;s=light">Pen Field</a>
    /// </summary>
    public static Icon PenField => PenFieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-field", "e211");
    private static Icon? PenLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-line?f=classic&amp;s=light">Pen Line</a>
    /// </summary>
    public static Icon PenLine => PenLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-line", "e212");
    private static Icon? PenNibf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-nib?f=classic&amp;s=light">Pen Nib</a>
    /// </summary>
    public static Icon PenNib => PenNibf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-nib", "f5ad");
    private static Icon? PenNibSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-nib-slash?f=classic&amp;s=light">Pen Nib Slash</a>
    /// </summary>
    public static Icon PenNibSlash => PenNibSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-nib-slash", "e4a1");
    private static Icon? PenPaintbrushf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-paintbrush?f=classic&amp;s=light">Pen Paintbrush</a>
    /// </summary>
    public static Icon PenPaintbrush => PenPaintbrushf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-paintbrush", "f618");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-paintbrush?f=classic&amp;s=light">Pen Paintbrush</a>
    /// </summary>
    public static Icon PencilPaintbrush => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PenPaintbrush;
    private static Icon? PenRulerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-ruler?f=classic&amp;s=light">Pen Ruler</a>
    /// </summary>
    public static Icon PenRuler => PenRulerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-ruler", "f5ae");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-ruler?f=classic&amp;s=light">Pen Ruler</a>
    /// </summary>
    public static Icon PencilRuler => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PenRuler;
    private static Icon? PenSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-slash?f=classic&amp;s=light">Pen Slash</a>
    /// </summary>
    public static Icon PenSlash => PenSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-slash", "e213");
    private static Icon? PenSwirlf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-swirl?f=classic&amp;s=light">Pen Swirl</a>
    /// </summary>
    public static Icon PenSwirl => PenSwirlf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-swirl", "e214");
    private static Icon? PenToSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-to-square?f=classic&amp;s=light">Pen To Square</a>
    /// </summary>
    public static Icon PenToSquare => PenToSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "pen-to-square", "f044");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pen-to-square?f=classic&amp;s=light">Pen To Square</a>
    /// </summary>
    public static Icon Edit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PenToSquare;
    private static Icon? Pencilf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pencil?f=classic&amp;s=light">Pencil</a>
    /// </summary>
    public static Icon Pencil => Pencilf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pencil", "f303");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pencil?f=classic&amp;s=light">Pencil</a>
    /// </summary>
    public static Icon PencilAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Pencil;
    private static Icon? PencilMechanicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pencil-mechanical?f=classic&amp;s=light">Pencil Mechanical</a>
    /// </summary>
    public static Icon PencilMechanical => PencilMechanicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pencil-mechanical", "e5ca");
    private static Icon? PencilSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pencil-slash?f=classic&amp;s=light">Pencil Slash</a>
    /// </summary>
    public static Icon PencilSlash => PencilSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pencil-slash", "e215");
    private static Icon? Peoplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people?f=classic&amp;s=light">People</a>
    /// </summary>
    public static Icon People => Peoplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "people", "e216");
    private static Icon? PeopleArrowsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-arrows?f=classic&amp;s=light">People Arrows</a>
    /// </summary>
    public static Icon PeopleArrows => PeopleArrowsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-arrows", "e068");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-arrows?f=classic&amp;s=light">People Arrows</a>
    /// </summary>
    public static Icon PeopleArrowsLeftRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PeopleArrows;
    private static Icon? PeopleCarryBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-carry-box?f=classic&amp;s=light">People Carry Box</a>
    /// </summary>
    public static Icon PeopleCarryBox => PeopleCarryBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-carry-box", "f4ce");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-carry-box?f=classic&amp;s=light">People Carry Box</a>
    /// </summary>
    public static Icon PeopleCarry => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PeopleCarryBox;
    private static Icon? PeopleDressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-dress?f=classic&amp;s=light">People Dress</a>
    /// </summary>
    public static Icon PeopleDress => PeopleDressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-dress", "e217");
    private static Icon? PeopleDressSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-dress-simple?f=classic&amp;s=light">People Dress Simple</a>
    /// </summary>
    public static Icon PeopleDressSimple => PeopleDressSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-dress-simple", "e218");
    private static Icon? PeopleGroupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-group?f=classic&amp;s=light">People Group</a>
    /// </summary>
    public static Icon PeopleGroup => PeopleGroupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-group", "e533");
    private static Icon? PeopleLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-line?f=classic&amp;s=light">People Line</a>
    /// </summary>
    public static Icon PeopleLine => PeopleLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-line", "e534");
    private static Icon? PeoplePantsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-pants?f=classic&amp;s=light">People Pants</a>
    /// </summary>
    public static Icon PeoplePants => PeoplePantsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-pants", "e219");
    private static Icon? PeoplePantsSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-pants-simple?f=classic&amp;s=light">People Pants Simple</a>
    /// </summary>
    public static Icon PeoplePantsSimple => PeoplePantsSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-pants-simple", "e21a");
    private static Icon? PeoplePullingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-pulling?f=classic&amp;s=light">People Pulling</a>
    /// </summary>
    public static Icon PeoplePulling => PeoplePullingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-pulling", "e535");
    private static Icon? PeopleRobberyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-robbery?f=classic&amp;s=light">People Robbery</a>
    /// </summary>
    public static Icon PeopleRobbery => PeopleRobberyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-robbery", "e536");
    private static Icon? PeopleRooff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-roof?f=classic&amp;s=light">People Roof</a>
    /// </summary>
    public static Icon PeopleRoof => PeopleRooff ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-roof", "e537");
    private static Icon? PeopleSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/people-simple?f=classic&amp;s=light">People Simple</a>
    /// </summary>
    public static Icon PeopleSimple => PeopleSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "people-simple", "e21b");
    private static Icon? Pepperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pepper?f=classic&amp;s=light">Pepper</a>
    /// </summary>
    public static Icon Pepper => Pepperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pepper", "e432");
    private static Icon? PepperHotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pepper-hot?f=classic&amp;s=light">Pepper Hot</a>
    /// </summary>
    public static Icon PepperHot => PepperHotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pepper-hot", "f816");
    private static Icon? Percentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/percent?f=classic&amp;s=light">Percent</a>
    /// </summary>
    public static Icon Percent => Percentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "percent", "25");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/percent?f=classic&amp;s=light">Percent</a>
    /// </summary>
    public static Icon Percentage => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Percent;
    private static Icon? Periodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/period?f=classic&amp;s=light">Period</a>
    /// </summary>
    public static Icon Period => Periodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "period", "2e");
    private static Icon? Personf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person?f=classic&amp;s=light">Person</a>
    /// </summary>
    public static Icon Person => Personf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person", "f183");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person?f=classic&amp;s=light">Person</a>
    /// </summary>
    public static Icon Male => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Person;
    private static Icon? PersonArrowDownToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-arrow-down-to-line?f=classic&amp;s=light">Person Arrow Down To Line</a>
    /// </summary>
    public static Icon PersonArrowDownToLine => PersonArrowDownToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-arrow-down-to-line", "e538");
    private static Icon? PersonArrowUpFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-arrow-up-from-line?f=classic&amp;s=light">Person Arrow Up From Line</a>
    /// </summary>
    public static Icon PersonArrowUpFromLine => PersonArrowUpFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-arrow-up-from-line", "e539");
    private static Icon? PersonBikingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-biking?f=classic&amp;s=light">Person Biking</a>
    /// </summary>
    public static Icon PersonBiking => PersonBikingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-biking", "f84a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-biking?f=classic&amp;s=light">Person Biking</a>
    /// </summary>
    public static Icon Biking => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonBiking;
    private static Icon? PersonBikingMountainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-biking-mountain?f=classic&amp;s=light">Person Biking Mountain</a>
    /// </summary>
    public static Icon PersonBikingMountain => PersonBikingMountainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-biking-mountain", "f84b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-biking-mountain?f=classic&amp;s=light">Person Biking Mountain</a>
    /// </summary>
    public static Icon BikingMountain => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonBikingMountain;
    private static Icon? PersonBoothf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-booth?f=classic&amp;s=light">Person Booth</a>
    /// </summary>
    public static Icon PersonBooth => PersonBoothf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-booth", "f756");
    private static Icon? PersonBreastfeedingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-breastfeeding?f=classic&amp;s=light">Person Breastfeeding</a>
    /// </summary>
    public static Icon PersonBreastfeeding => PersonBreastfeedingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-breastfeeding", "e53a");
    private static Icon? PersonBurstf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-burst?f=classic&amp;s=light">Person Burst</a>
    /// </summary>
    public static Icon PersonBurst => PersonBurstf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-burst", "e53b");
    private static Icon? PersonCanef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-cane?f=classic&amp;s=light">Person Cane</a>
    /// </summary>
    public static Icon PersonCane => PersonCanef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-cane", "e53c");
    private static Icon? PersonCarryBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-carry-box?f=classic&amp;s=light">Person Carry Box</a>
    /// </summary>
    public static Icon PersonCarryBox => PersonCarryBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-carry-box", "f4cf");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-carry-box?f=classic&amp;s=light">Person Carry Box</a>
    /// </summary>
    public static Icon PersonCarry => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonCarryBox;
    private static Icon? PersonChalkboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-chalkboard?f=classic&amp;s=light">Person Chalkboard</a>
    /// </summary>
    public static Icon PersonChalkboard => PersonChalkboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-chalkboard", "e53d");
    private static Icon? PersonCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-circle-check?f=classic&amp;s=light">Person Circle Check</a>
    /// </summary>
    public static Icon PersonCircleCheck => PersonCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-circle-check", "e53e");
    private static Icon? PersonCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-circle-exclamation?f=classic&amp;s=light">Person Circle Exclamation</a>
    /// </summary>
    public static Icon PersonCircleExclamation => PersonCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-circle-exclamation", "e53f");
    private static Icon? PersonCircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-circle-minus?f=classic&amp;s=light">Person Circle Minus</a>
    /// </summary>
    public static Icon PersonCircleMinus => PersonCircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-circle-minus", "e540");
    private static Icon? PersonCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-circle-plus?f=classic&amp;s=light">Person Circle Plus</a>
    /// </summary>
    public static Icon PersonCirclePlus => PersonCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-circle-plus", "e541");
    private static Icon? PersonCircleQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-circle-question?f=classic&amp;s=light">Person Circle Question</a>
    /// </summary>
    public static Icon PersonCircleQuestion => PersonCircleQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-circle-question", "e542");
    private static Icon? PersonCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-circle-xmark?f=classic&amp;s=light">Person Circle Xmark</a>
    /// </summary>
    public static Icon PersonCircleXmark => PersonCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-circle-xmark", "e543");
    private static Icon? PersonDiggingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-digging?f=classic&amp;s=light">Person Digging</a>
    /// </summary>
    public static Icon PersonDigging => PersonDiggingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-digging", "f85e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-digging?f=classic&amp;s=light">Person Digging</a>
    /// </summary>
    public static Icon Digging => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonDigging;
    private static Icon? PersonDollyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dolly?f=classic&amp;s=light">Person Dolly</a>
    /// </summary>
    public static Icon PersonDolly => PersonDollyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dolly", "f4d0");
    private static Icon? PersonDollyEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dolly-empty?f=classic&amp;s=light">Person Dolly Empty</a>
    /// </summary>
    public static Icon PersonDollyEmpty => PersonDollyEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dolly-empty", "f4d1");
    private static Icon? PersonDotsFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dots-from-line?f=classic&amp;s=light">Person Dots From Line</a>
    /// </summary>
    public static Icon PersonDotsFromLine => PersonDotsFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dots-from-line", "f470");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dots-from-line?f=classic&amp;s=light">Person Dots From Line</a>
    /// </summary>
    public static Icon Diagnoses => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonDotsFromLine;
    private static Icon? PersonDressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dress?f=classic&amp;s=light">Person Dress</a>
    /// </summary>
    public static Icon PersonDress => PersonDressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dress", "f182");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dress?f=classic&amp;s=light">Person Dress</a>
    /// </summary>
    public static Icon Female => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonDress;
    private static Icon? PersonDressBurstf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dress-burst?f=classic&amp;s=light">Person Dress Burst</a>
    /// </summary>
    public static Icon PersonDressBurst => PersonDressBurstf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dress-burst", "e544");
    private static Icon? PersonDressFairyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dress-fairy?f=classic&amp;s=light">Person Dress Fairy</a>
    /// </summary>
    public static Icon PersonDressFairy => PersonDressFairyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dress-fairy", "e607");
    private static Icon? PersonDressSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-dress-simple?f=classic&amp;s=light">Person Dress Simple</a>
    /// </summary>
    public static Icon PersonDressSimple => PersonDressSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-dress-simple", "e21c");
    private static Icon? PersonDrowningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-drowning?f=classic&amp;s=light">Person Drowning</a>
    /// </summary>
    public static Icon PersonDrowning => PersonDrowningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-drowning", "e545");
    private static Icon? PersonFairyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-fairy?f=classic&amp;s=light">Person Fairy</a>
    /// </summary>
    public static Icon PersonFairy => PersonFairyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-fairy", "e608");
    private static Icon? PersonFallingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-falling?f=classic&amp;s=light">Person Falling</a>
    /// </summary>
    public static Icon PersonFalling => PersonFallingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-falling", "e546");
    private static Icon? PersonFallingBurstf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-falling-burst?f=classic&amp;s=light">Person Falling Burst</a>
    /// </summary>
    public static Icon PersonFallingBurst => PersonFallingBurstf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-falling-burst", "e547");
    private static Icon? PersonFromPortalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-from-portal?f=classic&amp;s=light">Person From Portal</a>
    /// </summary>
    public static Icon PersonFromPortal => PersonFromPortalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-from-portal", "e023");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-from-portal?f=classic&amp;s=light">Person From Portal</a>
    /// </summary>
    public static Icon PortalExit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonFromPortal;
    private static Icon? PersonHalfDressf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-half-dress?f=classic&amp;s=light">Person Half Dress</a>
    /// </summary>
    public static Icon PersonHalfDress => PersonHalfDressf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-half-dress", "e548");
    private static Icon? PersonHarassingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-harassing?f=classic&amp;s=light">Person Harassing</a>
    /// </summary>
    public static Icon PersonHarassing => PersonHarassingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-harassing", "e549");
    private static Icon? PersonHikingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-hiking?f=classic&amp;s=light">Person Hiking</a>
    /// </summary>
    public static Icon PersonHiking => PersonHikingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-hiking", "f6ec");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-hiking?f=classic&amp;s=light">Person Hiking</a>
    /// </summary>
    public static Icon Hiking => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonHiking;
    private static Icon? PersonMilitaryPointingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-military-pointing?f=classic&amp;s=light">Person Military Pointing</a>
    /// </summary>
    public static Icon PersonMilitaryPointing => PersonMilitaryPointingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-military-pointing", "e54a");
    private static Icon? PersonMilitaryRiflef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-military-rifle?f=classic&amp;s=light">Person Military Rifle</a>
    /// </summary>
    public static Icon PersonMilitaryRifle => PersonMilitaryRiflef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-military-rifle", "e54b");
    private static Icon? PersonMilitaryToPersonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-military-to-person?f=classic&amp;s=light">Person Military To Person</a>
    /// </summary>
    public static Icon PersonMilitaryToPerson => PersonMilitaryToPersonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-military-to-person", "e54c");
    private static Icon? PersonPinballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-pinball?f=classic&amp;s=light">Person Pinball</a>
    /// </summary>
    public static Icon PersonPinball => PersonPinballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-pinball", "e21d");
    private static Icon? PersonPrayingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-praying?f=classic&amp;s=light">Person Praying</a>
    /// </summary>
    public static Icon PersonPraying => PersonPrayingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-praying", "f683");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-praying?f=classic&amp;s=light">Person Praying</a>
    /// </summary>
    public static Icon Pray => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonPraying;
    private static Icon? PersonPregnantf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-pregnant?f=classic&amp;s=light">Person Pregnant</a>
    /// </summary>
    public static Icon PersonPregnant => PersonPregnantf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-pregnant", "e31e");
    private static Icon? PersonRaysf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-rays?f=classic&amp;s=light">Person Rays</a>
    /// </summary>
    public static Icon PersonRays => PersonRaysf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-rays", "e54d");
    private static Icon? PersonRiflef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-rifle?f=classic&amp;s=light">Person Rifle</a>
    /// </summary>
    public static Icon PersonRifle => PersonRiflef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-rifle", "e54e");
    private static Icon? PersonRunningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-running?f=classic&amp;s=light">Person Running</a>
    /// </summary>
    public static Icon PersonRunning => PersonRunningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-running", "f70c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-running?f=classic&amp;s=light">Person Running</a>
    /// </summary>
    public static Icon Running => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonRunning;
    private static Icon? PersonRunningFastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-running-fast?f=classic&amp;s=light">Person Running Fast</a>
    /// </summary>
    public static Icon PersonRunningFast => PersonRunningFastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-running-fast", "e5ff");
    private static Icon? PersonSeatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-seat?f=classic&amp;s=light">Person Seat</a>
    /// </summary>
    public static Icon PersonSeat => PersonSeatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-seat", "e21e");
    private static Icon? PersonSeatReclinedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-seat-reclined?f=classic&amp;s=light">Person Seat Reclined</a>
    /// </summary>
    public static Icon PersonSeatReclined => PersonSeatReclinedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-seat-reclined", "e21f");
    private static Icon? PersonShelterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-shelter?f=classic&amp;s=light">Person Shelter</a>
    /// </summary>
    public static Icon PersonShelter => PersonShelterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-shelter", "e54f");
    private static Icon? PersonSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-sign?f=classic&amp;s=light">Person Sign</a>
    /// </summary>
    public static Icon PersonSign => PersonSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-sign", "f757");
    private static Icon? PersonSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-simple?f=classic&amp;s=light">Person Simple</a>
    /// </summary>
    public static Icon PersonSimple => PersonSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-simple", "e220");
    private static Icon? PersonSkatingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-skating?f=classic&amp;s=light">Person Skating</a>
    /// </summary>
    public static Icon PersonSkating => PersonSkatingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-skating", "f7c5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-skating?f=classic&amp;s=light">Person Skating</a>
    /// </summary>
    public static Icon Skating => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSkating;
    private static Icon? PersonSkiJumpingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-ski-jumping?f=classic&amp;s=light">Person Ski Jumping</a>
    /// </summary>
    public static Icon PersonSkiJumping => PersonSkiJumpingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-ski-jumping", "f7c7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-ski-jumping?f=classic&amp;s=light">Person Ski Jumping</a>
    /// </summary>
    public static Icon SkiJump => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSkiJumping;
    private static Icon? PersonSkiLiftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-ski-lift?f=classic&amp;s=light">Person Ski Lift</a>
    /// </summary>
    public static Icon PersonSkiLift => PersonSkiLiftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-ski-lift", "f7c8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-ski-lift?f=classic&amp;s=light">Person Ski Lift</a>
    /// </summary>
    public static Icon SkiLift => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSkiLift;
    private static Icon? PersonSkiingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-skiing?f=classic&amp;s=light">Person Skiing</a>
    /// </summary>
    public static Icon PersonSkiing => PersonSkiingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-skiing", "f7c9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-skiing?f=classic&amp;s=light">Person Skiing</a>
    /// </summary>
    public static Icon Skiing => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSkiing;
    private static Icon? PersonSkiingNordicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-skiing-nordic?f=classic&amp;s=light">Person Skiing Nordic</a>
    /// </summary>
    public static Icon PersonSkiingNordic => PersonSkiingNordicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-skiing-nordic", "f7ca");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-skiing-nordic?f=classic&amp;s=light">Person Skiing Nordic</a>
    /// </summary>
    public static Icon SkiingNordic => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSkiingNordic;
    private static Icon? PersonSleddingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-sledding?f=classic&amp;s=light">Person Sledding</a>
    /// </summary>
    public static Icon PersonSledding => PersonSleddingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-sledding", "f7cb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-sledding?f=classic&amp;s=light">Person Sledding</a>
    /// </summary>
    public static Icon Sledding => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSledding;
    private static Icon? PersonSnowboardingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-snowboarding?f=classic&amp;s=light">Person Snowboarding</a>
    /// </summary>
    public static Icon PersonSnowboarding => PersonSnowboardingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-snowboarding", "f7ce");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-snowboarding?f=classic&amp;s=light">Person Snowboarding</a>
    /// </summary>
    public static Icon Snowboarding => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSnowboarding;
    private static Icon? PersonSnowmobilingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-snowmobiling?f=classic&amp;s=light">Person Snowmobiling</a>
    /// </summary>
    public static Icon PersonSnowmobiling => PersonSnowmobilingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-snowmobiling", "f7d1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-snowmobiling?f=classic&amp;s=light">Person Snowmobiling</a>
    /// </summary>
    public static Icon Snowmobile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSnowmobiling;
    private static Icon? PersonSwimmingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-swimming?f=classic&amp;s=light">Person Swimming</a>
    /// </summary>
    public static Icon PersonSwimming => PersonSwimmingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-swimming", "f5c4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-swimming?f=classic&amp;s=light">Person Swimming</a>
    /// </summary>
    public static Icon Swimmer => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonSwimming;
    private static Icon? PersonThroughWindowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-through-window?f=classic&amp;s=light">Person Through Window</a>
    /// </summary>
    public static Icon PersonThroughWindow => PersonThroughWindowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-through-window", "e5a9");
    private static Icon? PersonToDoorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-to-door?f=classic&amp;s=light">Person To Door</a>
    /// </summary>
    public static Icon PersonToDoor => PersonToDoorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-to-door", "e433");
    private static Icon? PersonToPortalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-to-portal?f=classic&amp;s=light">Person To Portal</a>
    /// </summary>
    public static Icon PersonToPortal => PersonToPortalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-to-portal", "e022");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-to-portal?f=classic&amp;s=light">Person To Portal</a>
    /// </summary>
    public static Icon PortalEnter => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonToPortal;
    private static Icon? PersonWalkingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking?f=classic&amp;s=light">Person Walking</a>
    /// </summary>
    public static Icon PersonWalking => PersonWalkingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-walking", "f554");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking?f=classic&amp;s=light">Person Walking</a>
    /// </summary>
    public static Icon Walking => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonWalking;
    private static Icon? PersonWalkingArrowLoopLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking-arrow-loop-left?f=classic&amp;s=light">Person Walking Arrow Loop Left</a>
    /// </summary>
    public static Icon PersonWalkingArrowLoopLeft => PersonWalkingArrowLoopLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-walking-arrow-loop-left", "e551");
    private static Icon? PersonWalkingArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking-arrow-right?f=classic&amp;s=light">Person Walking Arrow Right</a>
    /// </summary>
    public static Icon PersonWalkingArrowRight => PersonWalkingArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-walking-arrow-right", "e552");
    private static Icon? PersonWalkingDashedLineArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking-dashed-line-arrow-right?f=classic&amp;s=light">Person Walking Dashed Line Arrow Right</a>
    /// </summary>
    public static Icon PersonWalkingDashedLineArrowRight => PersonWalkingDashedLineArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-walking-dashed-line-arrow-right", "e553");
    private static Icon? PersonWalkingLuggagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking-luggage?f=classic&amp;s=light">Person Walking Luggage</a>
    /// </summary>
    public static Icon PersonWalkingLuggage => PersonWalkingLuggagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-walking-luggage", "e554");
    private static Icon? PersonWalkingWithCanef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking-with-cane?f=classic&amp;s=light">Person Walking With Cane</a>
    /// </summary>
    public static Icon PersonWalkingWithCane => PersonWalkingWithCanef ??= new Icon(IconFamily.Classic, IconStyle.Light, "person-walking-with-cane", "f29d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/person-walking-with-cane?f=classic&amp;s=light">Person Walking With Cane</a>
    /// </summary>
    public static Icon Blind => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PersonWalkingWithCane;
    private static Icon? PesetaSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peseta-sign?f=classic&amp;s=light">Peseta Sign</a>
    /// </summary>
    public static Icon PesetaSign => PesetaSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "peseta-sign", "e221");
    private static Icon? PesoSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/peso-sign?f=classic&amp;s=light">Peso Sign</a>
    /// </summary>
    public static Icon PesoSign => PesoSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "peso-sign", "e222");
    private static Icon? Phonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone?f=classic&amp;s=light">Phone</a>
    /// </summary>
    public static Icon Phone => Phonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone", "f095");
    private static Icon? PhoneArrowDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-down-left?f=classic&amp;s=light">Phone Arrow Down Left</a>
    /// </summary>
    public static Icon PhoneArrowDownLeft => PhoneArrowDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-arrow-down-left", "e223");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-down-left?f=classic&amp;s=light">Phone Arrow Down Left</a>
    /// </summary>
    public static Icon PhoneArrowDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhoneArrowDownLeft;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-down-left?f=classic&amp;s=light">Phone Arrow Down Left</a>
    /// </summary>
    public static Icon PhoneIncoming => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhoneArrowDownLeft;
    private static Icon? PhoneArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-right?f=classic&amp;s=light">Phone Arrow Right</a>
    /// </summary>
    public static Icon PhoneArrowRight => PhoneArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-arrow-right", "e5be");
    private static Icon? PhoneArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-up-right?f=classic&amp;s=light">Phone Arrow Up Right</a>
    /// </summary>
    public static Icon PhoneArrowUpRight => PhoneArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-arrow-up-right", "e224");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-up-right?f=classic&amp;s=light">Phone Arrow Up Right</a>
    /// </summary>
    public static Icon PhoneArrowUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhoneArrowUpRight;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-arrow-up-right?f=classic&amp;s=light">Phone Arrow Up Right</a>
    /// </summary>
    public static Icon PhoneOutgoing => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhoneArrowUpRight;
    private static Icon? PhoneFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-flip?f=classic&amp;s=light">Phone Flip</a>
    /// </summary>
    public static Icon PhoneFlip => PhoneFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-flip", "f879");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-flip?f=classic&amp;s=light">Phone Flip</a>
    /// </summary>
    public static Icon PhoneAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhoneFlip;
    private static Icon? PhoneHangupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-hangup?f=classic&amp;s=light">Phone Hangup</a>
    /// </summary>
    public static Icon PhoneHangup => PhoneHangupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-hangup", "e225");
    private static Icon? PhoneIntercomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-intercom?f=classic&amp;s=light">Phone Intercom</a>
    /// </summary>
    public static Icon PhoneIntercom => PhoneIntercomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-intercom", "e434");
    private static Icon? PhoneMissedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-missed?f=classic&amp;s=light">Phone Missed</a>
    /// </summary>
    public static Icon PhoneMissed => PhoneMissedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-missed", "e226");
    private static Icon? PhoneOfficef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-office?f=classic&amp;s=light">Phone Office</a>
    /// </summary>
    public static Icon PhoneOffice => PhoneOfficef ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-office", "f67d");
    private static Icon? PhonePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-plus?f=classic&amp;s=light">Phone Plus</a>
    /// </summary>
    public static Icon PhonePlus => PhonePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-plus", "f4d2");
    private static Icon? PhoneRotaryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-rotary?f=classic&amp;s=light">Phone Rotary</a>
    /// </summary>
    public static Icon PhoneRotary => PhoneRotaryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-rotary", "f8d3");
    private static Icon? PhoneSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-slash?f=classic&amp;s=light">Phone Slash</a>
    /// </summary>
    public static Icon PhoneSlash => PhoneSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-slash", "f3dd");
    private static Icon? PhoneVolumef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-volume?f=classic&amp;s=light">Phone Volume</a>
    /// </summary>
    public static Icon PhoneVolume => PhoneVolumef ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-volume", "f2a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-volume?f=classic&amp;s=light">Phone Volume</a>
    /// </summary>
    public static Icon VolumeControlPhone => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhoneVolume;
    private static Icon? PhoneXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/phone-xmark?f=classic&amp;s=light">Phone Xmark</a>
    /// </summary>
    public static Icon PhoneXmark => PhoneXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "phone-xmark", "e227");
    private static Icon? PhotoFilmf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/photo-film?f=classic&amp;s=light">Photo Film</a>
    /// </summary>
    public static Icon PhotoFilm => PhotoFilmf ??= new Icon(IconFamily.Classic, IconStyle.Light, "photo-film", "f87c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/photo-film?f=classic&amp;s=light">Photo Film</a>
    /// </summary>
    public static Icon PhotoVideo => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PhotoFilm;
    private static Icon? PhotoFilmMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/photo-film-music?f=classic&amp;s=light">Photo Film Music</a>
    /// </summary>
    public static Icon PhotoFilmMusic => PhotoFilmMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "photo-film-music", "e228");
    private static Icon? Pif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pi?f=classic&amp;s=light">Pi</a>
    /// </summary>
    public static Icon Pi => Pif ??= new Icon(IconFamily.Classic, IconStyle.Light, "pi", "f67e");
    private static Icon? Pianof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/piano?f=classic&amp;s=light">Piano</a>
    /// </summary>
    public static Icon Piano => Pianof ??= new Icon(IconFamily.Classic, IconStyle.Light, "piano", "f8d4");
    private static Icon? PianoKeyboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/piano-keyboard?f=classic&amp;s=light">Piano Keyboard</a>
    /// </summary>
    public static Icon PianoKeyboard => PianoKeyboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "piano-keyboard", "f8d5");
    private static Icon? Pickaxef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pickaxe?f=classic&amp;s=light">Pickaxe</a>
    /// </summary>
    public static Icon Pickaxe => Pickaxef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pickaxe", "e5bf");
    private static Icon? Pickleballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pickleball?f=classic&amp;s=light">Pickleball</a>
    /// </summary>
    public static Icon Pickleball => Pickleballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pickleball", "e435");
    private static Icon? Pief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pie?f=classic&amp;s=light">Pie</a>
    /// </summary>
    public static Icon Pie => Pief ??= new Icon(IconFamily.Classic, IconStyle.Light, "pie", "f705");
    private static Icon? Pigf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pig?f=classic&amp;s=light">Pig</a>
    /// </summary>
    public static Icon Pig => Pigf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pig", "f706");
    private static Icon? PiggyBankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/piggy-bank?f=classic&amp;s=light">Piggy Bank</a>
    /// </summary>
    public static Icon PiggyBank => PiggyBankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "piggy-bank", "f4d3");
    private static Icon? Pillsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pills?f=classic&amp;s=light">Pills</a>
    /// </summary>
    public static Icon Pills => Pillsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pills", "f484");
    private static Icon? Pinataf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pinata?f=classic&amp;s=light">Pinata</a>
    /// </summary>
    public static Icon Pinata => Pinataf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pinata", "e3c3");
    private static Icon? Pinballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pinball?f=classic&amp;s=light">Pinball</a>
    /// </summary>
    public static Icon Pinball => Pinballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pinball", "e229");
    private static Icon? Pineapplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pineapple?f=classic&amp;s=light">Pineapple</a>
    /// </summary>
    public static Icon Pineapple => Pineapplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pineapple", "e31f");
    private static Icon? Pipef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pipe?f=classic&amp;s=light">Pipe</a>
    /// </summary>
    public static Icon Pipe => Pipef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pipe", "7c");
    private static Icon? PipeCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pipe-circle-check?f=classic&amp;s=light">Pipe Circle Check</a>
    /// </summary>
    public static Icon PipeCircleCheck => PipeCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pipe-circle-check", "e436");
    private static Icon? PipeCollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pipe-collar?f=classic&amp;s=light">Pipe Collar</a>
    /// </summary>
    public static Icon PipeCollar => PipeCollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pipe-collar", "e437");
    private static Icon? PipeSectionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pipe-section?f=classic&amp;s=light">Pipe Section</a>
    /// </summary>
    public static Icon PipeSection => PipeSectionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pipe-section", "e438");
    private static Icon? PipeSmokingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pipe-smoking?f=classic&amp;s=light">Pipe Smoking</a>
    /// </summary>
    public static Icon PipeSmoking => PipeSmokingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pipe-smoking", "e3c4");
    private static Icon? PipeValvef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pipe-valve?f=classic&amp;s=light">Pipe Valve</a>
    /// </summary>
    public static Icon PipeValve => PipeValvef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pipe-valve", "e439");
    private static Icon? Pizzaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pizza?f=classic&amp;s=light">Pizza</a>
    /// </summary>
    public static Icon Pizza => Pizzaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pizza", "f817");
    private static Icon? PizzaSlicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pizza-slice?f=classic&amp;s=light">Pizza Slice</a>
    /// </summary>
    public static Icon PizzaSlice => PizzaSlicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "pizza-slice", "f818");
    private static Icon? PlaceOfWorshipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/place-of-worship?f=classic&amp;s=light">Place Of Worship</a>
    /// </summary>
    public static Icon PlaceOfWorship => PlaceOfWorshipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "place-of-worship", "f67f");
    private static Icon? Planef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane?f=classic&amp;s=light">Plane</a>
    /// </summary>
    public static Icon Plane => Planef ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane", "f072");
    private static Icon? PlaneArrivalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-arrival?f=classic&amp;s=light">Plane Arrival</a>
    /// </summary>
    public static Icon PlaneArrival => PlaneArrivalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-arrival", "f5af");
    private static Icon? PlaneCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-circle-check?f=classic&amp;s=light">Plane Circle Check</a>
    /// </summary>
    public static Icon PlaneCircleCheck => PlaneCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-circle-check", "e555");
    private static Icon? PlaneCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-circle-exclamation?f=classic&amp;s=light">Plane Circle Exclamation</a>
    /// </summary>
    public static Icon PlaneCircleExclamation => PlaneCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-circle-exclamation", "e556");
    private static Icon? PlaneCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-circle-xmark?f=classic&amp;s=light">Plane Circle Xmark</a>
    /// </summary>
    public static Icon PlaneCircleXmark => PlaneCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-circle-xmark", "e557");
    private static Icon? PlaneDeparturef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-departure?f=classic&amp;s=light">Plane Departure</a>
    /// </summary>
    public static Icon PlaneDeparture => PlaneDeparturef ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-departure", "f5b0");
    private static Icon? PlaneEnginesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-engines?f=classic&amp;s=light">Plane Engines</a>
    /// </summary>
    public static Icon PlaneEngines => PlaneEnginesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-engines", "f3de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-engines?f=classic&amp;s=light">Plane Engines</a>
    /// </summary>
    public static Icon PlaneAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PlaneEngines;
    private static Icon? PlaneLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-lock?f=classic&amp;s=light">Plane Lock</a>
    /// </summary>
    public static Icon PlaneLock => PlaneLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-lock", "e558");
    private static Icon? PlanePropf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-prop?f=classic&amp;s=light">Plane Prop</a>
    /// </summary>
    public static Icon PlaneProp => PlanePropf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-prop", "e22b");
    private static Icon? PlaneSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-slash?f=classic&amp;s=light">Plane Slash</a>
    /// </summary>
    public static Icon PlaneSlash => PlaneSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-slash", "e069");
    private static Icon? PlaneTailf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-tail?f=classic&amp;s=light">Plane Tail</a>
    /// </summary>
    public static Icon PlaneTail => PlaneTailf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-tail", "e22c");
    private static Icon? PlaneUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-up?f=classic&amp;s=light">Plane Up</a>
    /// </summary>
    public static Icon PlaneUp => PlaneUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-up", "e22d");
    private static Icon? PlaneUpSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plane-up-slash?f=classic&amp;s=light">Plane Up Slash</a>
    /// </summary>
    public static Icon PlaneUpSlash => PlaneUpSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plane-up-slash", "e22e");
    private static Icon? PlanetMoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/planet-moon?f=classic&amp;s=light">Planet Moon</a>
    /// </summary>
    public static Icon PlanetMoon => PlanetMoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "planet-moon", "e01f");
    private static Icon? PlanetRingedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/planet-ringed?f=classic&amp;s=light">Planet Ringed</a>
    /// </summary>
    public static Icon PlanetRinged => PlanetRingedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "planet-ringed", "e020");
    private static Icon? PlantWiltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plant-wilt?f=classic&amp;s=light">Plant Wilt</a>
    /// </summary>
    public static Icon PlantWilt => PlantWiltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plant-wilt", "e5aa");
    private static Icon? PlateUtensilsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plate-utensils?f=classic&amp;s=light">Plate Utensils</a>
    /// </summary>
    public static Icon PlateUtensils => PlateUtensilsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plate-utensils", "e43b");
    private static Icon? PlateWheatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plate-wheat?f=classic&amp;s=light">Plate Wheat</a>
    /// </summary>
    public static Icon PlateWheat => PlateWheatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plate-wheat", "e55a");
    private static Icon? Playf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/play?f=classic&amp;s=light">Play</a>
    /// </summary>
    public static Icon Play => Playf ??= new Icon(IconFamily.Classic, IconStyle.Light, "play", "f04b");
    private static Icon? PlayPausef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/play-pause?f=classic&amp;s=light">Play Pause</a>
    /// </summary>
    public static Icon PlayPause => PlayPausef ??= new Icon(IconFamily.Classic, IconStyle.Light, "play-pause", "e22f");
    private static Icon? Plugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug?f=classic&amp;s=light">Plug</a>
    /// </summary>
    public static Icon Plug => Plugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug", "f1e6");
    private static Icon? PlugCircleBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug-circle-bolt?f=classic&amp;s=light">Plug Circle Bolt</a>
    /// </summary>
    public static Icon PlugCircleBolt => PlugCircleBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug-circle-bolt", "e55b");
    private static Icon? PlugCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug-circle-check?f=classic&amp;s=light">Plug Circle Check</a>
    /// </summary>
    public static Icon PlugCircleCheck => PlugCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug-circle-check", "e55c");
    private static Icon? PlugCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug-circle-exclamation?f=classic&amp;s=light">Plug Circle Exclamation</a>
    /// </summary>
    public static Icon PlugCircleExclamation => PlugCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug-circle-exclamation", "e55d");
    private static Icon? PlugCircleMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug-circle-minus?f=classic&amp;s=light">Plug Circle Minus</a>
    /// </summary>
    public static Icon PlugCircleMinus => PlugCircleMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug-circle-minus", "e55e");
    private static Icon? PlugCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug-circle-plus?f=classic&amp;s=light">Plug Circle Plus</a>
    /// </summary>
    public static Icon PlugCirclePlus => PlugCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug-circle-plus", "e55f");
    private static Icon? PlugCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plug-circle-xmark?f=classic&amp;s=light">Plug Circle Xmark</a>
    /// </summary>
    public static Icon PlugCircleXmark => PlugCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plug-circle-xmark", "e560");
    private static Icon? Plusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plus?f=classic&amp;s=light">Plus</a>
    /// </summary>
    public static Icon Plus => Plusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plus", "2b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plus?f=classic&amp;s=light">Plus</a>
    /// </summary>
    public static Icon Add => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Plus;
    private static Icon? PlusLargef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plus-large?f=classic&amp;s=light">Plus Large</a>
    /// </summary>
    public static Icon PlusLarge => PlusLargef ??= new Icon(IconFamily.Classic, IconStyle.Light, "plus-large", "e59e");
    private static Icon? PlusMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/plus-minus?f=classic&amp;s=light">Plus Minus</a>
    /// </summary>
    public static Icon PlusMinus => PlusMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "plus-minus", "e43c");
    private static Icon? Podcastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/podcast?f=classic&amp;s=light">Podcast</a>
    /// </summary>
    public static Icon Podcast => Podcastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "podcast", "f2ce");
    private static Icon? Podiumf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/podium?f=classic&amp;s=light">Podium</a>
    /// </summary>
    public static Icon Podium => Podiumf ??= new Icon(IconFamily.Classic, IconStyle.Light, "podium", "f680");
    private static Icon? PodiumStarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/podium-star?f=classic&amp;s=light">Podium Star</a>
    /// </summary>
    public static Icon PodiumStar => PodiumStarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "podium-star", "f758");
    private static Icon? PoliceBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/police-box?f=classic&amp;s=light">Police Box</a>
    /// </summary>
    public static Icon PoliceBox => PoliceBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "police-box", "e021");
    private static Icon? PollPeoplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/poll-people?f=classic&amp;s=light">Poll People</a>
    /// </summary>
    public static Icon PollPeople => PollPeoplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "poll-people", "f759");
    private static Icon? Pompebledf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pompebled?f=classic&amp;s=light">Pompebled</a>
    /// </summary>
    public static Icon Pompebled => Pompebledf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pompebled", "e43d");
    private static Icon? Poof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/poo?f=classic&amp;s=light">Poo</a>
    /// </summary>
    public static Icon Poo => Poof ??= new Icon(IconFamily.Classic, IconStyle.Light, "poo", "f2fe");
    private static Icon? PooStormf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/poo-storm?f=classic&amp;s=light">Poo Storm</a>
    /// </summary>
    public static Icon PooStorm => PooStormf ??= new Icon(IconFamily.Classic, IconStyle.Light, "poo-storm", "f75a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/poo-storm?f=classic&amp;s=light">Poo Storm</a>
    /// </summary>
    public static Icon PooBolt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PooStorm;
    private static Icon? Pool8Ballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pool-8-ball?f=classic&amp;s=light">Pool 8 Ball</a>
    /// </summary>
    public static Icon Pool8Ball => Pool8Ballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pool-8-ball", "e3c5");
    private static Icon? Poopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/poop?f=classic&amp;s=light">Poop</a>
    /// </summary>
    public static Icon Poop => Poopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "poop", "f619");
    private static Icon? Popcornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/popcorn?f=classic&amp;s=light">Popcorn</a>
    /// </summary>
    public static Icon Popcorn => Popcornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "popcorn", "f819");
    private static Icon? Popsiclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/popsicle?f=classic&amp;s=light">Popsicle</a>
    /// </summary>
    public static Icon Popsicle => Popsiclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "popsicle", "e43e");
    private static Icon? PotFoodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pot-food?f=classic&amp;s=light">Pot Food</a>
    /// </summary>
    public static Icon PotFood => PotFoodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pot-food", "e43f");
    private static Icon? Potatof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/potato?f=classic&amp;s=light">Potato</a>
    /// </summary>
    public static Icon Potato => Potatof ??= new Icon(IconFamily.Classic, IconStyle.Light, "potato", "e440");
    private static Icon? PowerOfff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/power-off?f=classic&amp;s=light">Power Off</a>
    /// </summary>
    public static Icon PowerOff => PowerOfff ??= new Icon(IconFamily.Classic, IconStyle.Light, "power-off", "f011");
    private static Icon? Prescriptionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/prescription?f=classic&amp;s=light">Prescription</a>
    /// </summary>
    public static Icon Prescription => Prescriptionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "prescription", "f5b1");
    private static Icon? PrescriptionBottlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/prescription-bottle?f=classic&amp;s=light">Prescription Bottle</a>
    /// </summary>
    public static Icon PrescriptionBottle => PrescriptionBottlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "prescription-bottle", "f485");
    private static Icon? PrescriptionBottleMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/prescription-bottle-medical?f=classic&amp;s=light">Prescription Bottle Medical</a>
    /// </summary>
    public static Icon PrescriptionBottleMedical => PrescriptionBottleMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "prescription-bottle-medical", "f486");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/prescription-bottle-medical?f=classic&amp;s=light">Prescription Bottle Medical</a>
    /// </summary>
    public static Icon PrescriptionBottleAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PrescriptionBottleMedical;
    private static Icon? PrescriptionBottlePillf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/prescription-bottle-pill?f=classic&amp;s=light">Prescription Bottle Pill</a>
    /// </summary>
    public static Icon PrescriptionBottlePill => PrescriptionBottlePillf ??= new Icon(IconFamily.Classic, IconStyle.Light, "prescription-bottle-pill", "e5c0");
    private static Icon? PresentationScreenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/presentation-screen?f=classic&amp;s=light">Presentation Screen</a>
    /// </summary>
    public static Icon PresentationScreen => PresentationScreenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "presentation-screen", "f685");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/presentation-screen?f=classic&amp;s=light">Presentation Screen</a>
    /// </summary>
    public static Icon Presentation => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PresentationScreen;
    private static Icon? Pretzelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pretzel?f=classic&amp;s=light">Pretzel</a>
    /// </summary>
    public static Icon Pretzel => Pretzelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pretzel", "e441");
    private static Icon? Printf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/print?f=classic&amp;s=light">Print</a>
    /// </summary>
    public static Icon Print => Printf ??= new Icon(IconFamily.Classic, IconStyle.Light, "print", "f02f");
    private static Icon? PrintMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/print-magnifying-glass?f=classic&amp;s=light">Print Magnifying Glass</a>
    /// </summary>
    public static Icon PrintMagnifyingGlass => PrintMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "print-magnifying-glass", "f81a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/print-magnifying-glass?f=classic&amp;s=light">Print Magnifying Glass</a>
    /// </summary>
    public static Icon PrintSearch => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PrintMagnifyingGlass;
    private static Icon? PrintSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/print-slash?f=classic&amp;s=light">Print Slash</a>
    /// </summary>
    public static Icon PrintSlash => PrintSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "print-slash", "f686");
    private static Icon? Projectorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/projector?f=classic&amp;s=light">Projector</a>
    /// </summary>
    public static Icon Projector => Projectorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "projector", "f8d6");
    private static Icon? Pumpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pump?f=classic&amp;s=light">Pump</a>
    /// </summary>
    public static Icon Pump => Pumpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pump", "e442");
    private static Icon? PumpMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pump-medical?f=classic&amp;s=light">Pump Medical</a>
    /// </summary>
    public static Icon PumpMedical => PumpMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pump-medical", "e06a");
    private static Icon? PumpSoapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pump-soap?f=classic&amp;s=light">Pump Soap</a>
    /// </summary>
    public static Icon PumpSoap => PumpSoapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pump-soap", "e06b");
    private static Icon? Pumpkinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/pumpkin?f=classic&amp;s=light">Pumpkin</a>
    /// </summary>
    public static Icon Pumpkin => Pumpkinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "pumpkin", "f707");
    private static Icon? Puzzlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/puzzle?f=classic&amp;s=light">Puzzle</a>
    /// </summary>
    public static Icon Puzzle => Puzzlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "puzzle", "e443");
    private static Icon? PuzzlePiecef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/puzzle-piece?f=classic&amp;s=light">Puzzle Piece</a>
    /// </summary>
    public static Icon PuzzlePiece => PuzzlePiecef ??= new Icon(IconFamily.Classic, IconStyle.Light, "puzzle-piece", "f12e");
    private static Icon? PuzzlePieceSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/puzzle-piece-simple?f=classic&amp;s=light">Puzzle Piece Simple</a>
    /// </summary>
    public static Icon PuzzlePieceSimple => PuzzlePieceSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "puzzle-piece-simple", "e231");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/puzzle-piece-simple?f=classic&amp;s=light">Puzzle Piece Simple</a>
    /// </summary>
    public static Icon PuzzlePieceAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.PuzzlePieceSimple;
    private static Icon? Qf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/q?f=classic&amp;s=light">Q</a>
    /// </summary>
    public static Icon Q => Qf ??= new Icon(IconFamily.Classic, IconStyle.Light, "q", "51");
    private static Icon? Qrcodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/qrcode?f=classic&amp;s=light">Qrcode</a>
    /// </summary>
    public static Icon Qrcode => Qrcodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "qrcode", "f029");
    private static Icon? Questionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/question?f=classic&amp;s=light">Question</a>
    /// </summary>
    public static Icon Question => Questionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "question", "3f");
    private static Icon? QuoteLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/quote-left?f=classic&amp;s=light">Quote Left</a>
    /// </summary>
    public static Icon QuoteLeft => QuoteLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "quote-left", "f10d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/quote-left?f=classic&amp;s=light">Quote Left</a>
    /// </summary>
    public static Icon QuoteLeftAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.QuoteLeft;
    private static Icon? QuoteRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/quote-right?f=classic&amp;s=light">Quote Right</a>
    /// </summary>
    public static Icon QuoteRight => QuoteRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "quote-right", "f10e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/quote-right?f=classic&amp;s=light">Quote Right</a>
    /// </summary>
    public static Icon QuoteRightAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.QuoteRight;
    private static Icon? Quotesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/quotes?f=classic&amp;s=light">Quotes</a>
    /// </summary>
    public static Icon Quotes => Quotesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "quotes", "e234");
    private static Icon? Rf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/r?f=classic&amp;s=light">R</a>
    /// </summary>
    public static Icon R => Rf ??= new Icon(IconFamily.Classic, IconStyle.Light, "r", "52");
    private static Icon? Rabbitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rabbit?f=classic&amp;s=light">Rabbit</a>
    /// </summary>
    public static Icon Rabbit => Rabbitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rabbit", "f708");
    private static Icon? RabbitRunningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rabbit-running?f=classic&amp;s=light">Rabbit Running</a>
    /// </summary>
    public static Icon RabbitRunning => RabbitRunningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rabbit-running", "f709");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rabbit-running?f=classic&amp;s=light">Rabbit Running</a>
    /// </summary>
    public static Icon RabbitFast => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RabbitRunning;
    private static Icon? Raccoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/raccoon?f=classic&amp;s=light">Raccoon</a>
    /// </summary>
    public static Icon Raccoon => Raccoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "raccoon", "e613");
    private static Icon? Racquetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/racquet?f=classic&amp;s=light">Racquet</a>
    /// </summary>
    public static Icon Racquet => Racquetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "racquet", "f45a");
    private static Icon? Radarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/radar?f=classic&amp;s=light">Radar</a>
    /// </summary>
    public static Icon Radar => Radarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "radar", "e024");
    private static Icon? Radiationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/radiation?f=classic&amp;s=light">Radiation</a>
    /// </summary>
    public static Icon Radiation => Radiationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "radiation", "f7b9");
    private static Icon? Radiof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/radio?f=classic&amp;s=light">Radio</a>
    /// </summary>
    public static Icon Radio => Radiof ??= new Icon(IconFamily.Classic, IconStyle.Light, "radio", "f8d7");
    private static Icon? RadioTunerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/radio-tuner?f=classic&amp;s=light">Radio Tuner</a>
    /// </summary>
    public static Icon RadioTuner => RadioTunerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "radio-tuner", "f8d8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/radio-tuner?f=classic&amp;s=light">Radio Tuner</a>
    /// </summary>
    public static Icon RadioAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RadioTuner;
    private static Icon? Rainbowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rainbow?f=classic&amp;s=light">Rainbow</a>
    /// </summary>
    public static Icon Rainbow => Rainbowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rainbow", "f75b");
    private static Icon? Raindropsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/raindrops?f=classic&amp;s=light">Raindrops</a>
    /// </summary>
    public static Icon Raindrops => Raindropsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "raindrops", "f75c");
    private static Icon? Ramf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ram?f=classic&amp;s=light">Ram</a>
    /// </summary>
    public static Icon Ram => Ramf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ram", "f70a");
    private static Icon? RampLoadingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ramp-loading?f=classic&amp;s=light">Ramp Loading</a>
    /// </summary>
    public static Icon RampLoading => RampLoadingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ramp-loading", "f4d4");
    private static Icon? RankingStarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ranking-star?f=classic&amp;s=light">Ranking Star</a>
    /// </summary>
    public static Icon RankingStar => RankingStarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ranking-star", "e561");
    private static Icon? Raygunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/raygun?f=classic&amp;s=light">Raygun</a>
    /// </summary>
    public static Icon Raygun => Raygunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "raygun", "e025");
    private static Icon? Receiptf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/receipt?f=classic&amp;s=light">Receipt</a>
    /// </summary>
    public static Icon Receipt => Receiptf ??= new Icon(IconFamily.Classic, IconStyle.Light, "receipt", "f543");
    private static Icon? RecordVinylf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/record-vinyl?f=classic&amp;s=light">Record Vinyl</a>
    /// </summary>
    public static Icon RecordVinyl => RecordVinylf ??= new Icon(IconFamily.Classic, IconStyle.Light, "record-vinyl", "f8d9");
    private static Icon? Rectanglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle?f=classic&amp;s=light">Rectangle</a>
    /// </summary>
    public static Icon Rectangle => Rectanglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle", "f2fa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle?f=classic&amp;s=light">Rectangle</a>
    /// </summary>
    public static Icon RectangleLandscape => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Rectangle;
    private static Icon? RectangleAdf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-ad?f=classic&amp;s=light">Rectangle Ad</a>
    /// </summary>
    public static Icon RectangleAd => RectangleAdf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-ad", "f641");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-ad?f=classic&amp;s=light">Rectangle Ad</a>
    /// </summary>
    public static Icon Ad => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleAd;
    private static Icon? RectangleBarcodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-barcode?f=classic&amp;s=light">Rectangle Barcode</a>
    /// </summary>
    public static Icon RectangleBarcode => RectangleBarcodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-barcode", "f463");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-barcode?f=classic&amp;s=light">Rectangle Barcode</a>
    /// </summary>
    public static Icon BarcodeAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleBarcode;
    private static Icon? RectangleCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-code?f=classic&amp;s=light">Rectangle Code</a>
    /// </summary>
    public static Icon RectangleCode => RectangleCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-code", "e322");
    private static Icon? RectangleHistoryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-history?f=classic&amp;s=light">Rectangle History</a>
    /// </summary>
    public static Icon RectangleHistory => RectangleHistoryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-history", "e4a2");
    private static Icon? RectangleHistoryCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-history-circle-plus?f=classic&amp;s=light">Rectangle History Circle Plus</a>
    /// </summary>
    public static Icon RectangleHistoryCirclePlus => RectangleHistoryCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-history-circle-plus", "e4a3");
    private static Icon? RectangleHistoryCircleUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-history-circle-user?f=classic&amp;s=light">Rectangle History Circle User</a>
    /// </summary>
    public static Icon RectangleHistoryCircleUser => RectangleHistoryCircleUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-history-circle-user", "e4a4");
    private static Icon? RectangleListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-list?f=classic&amp;s=light">Rectangle List</a>
    /// </summary>
    public static Icon RectangleList => RectangleListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-list", "f022");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-list?f=classic&amp;s=light">Rectangle List</a>
    /// </summary>
    public static Icon ListAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleList;
    private static Icon? RectangleProf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-pro?f=classic&amp;s=light">Rectangle Pro</a>
    /// </summary>
    public static Icon RectanglePro => RectangleProf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-pro", "e235");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-pro?f=classic&amp;s=light">Rectangle Pro</a>
    /// </summary>
    public static Icon Pro => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectanglePro;
    private static Icon? RectangleTerminalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-terminal?f=classic&amp;s=light">Rectangle Terminal</a>
    /// </summary>
    public static Icon RectangleTerminal => RectangleTerminalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-terminal", "e236");
    private static Icon? RectangleVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-vertical?f=classic&amp;s=light">Rectangle Vertical</a>
    /// </summary>
    public static Icon RectangleVertical => RectangleVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-vertical", "f2fb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-vertical?f=classic&amp;s=light">Rectangle Vertical</a>
    /// </summary>
    public static Icon RectanglePortrait => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleVertical;
    private static Icon? RectangleVerticalHistoryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-vertical-history?f=classic&amp;s=light">Rectangle Vertical History</a>
    /// </summary>
    public static Icon RectangleVerticalHistory => RectangleVerticalHistoryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-vertical-history", "e237");
    private static Icon? RectangleWidef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-wide?f=classic&amp;s=light">Rectangle Wide</a>
    /// </summary>
    public static Icon RectangleWide => RectangleWidef ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-wide", "f2fc");
    private static Icon? RectangleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-xmark?f=classic&amp;s=light">Rectangle Xmark</a>
    /// </summary>
    public static Icon RectangleXmark => RectangleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangle-xmark", "f410");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-xmark?f=classic&amp;s=light">Rectangle Xmark</a>
    /// </summary>
    public static Icon RectangleTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-xmark?f=classic&amp;s=light">Rectangle Xmark</a>
    /// </summary>
    public static Icon TimesRectangle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangle-xmark?f=classic&amp;s=light">Rectangle Xmark</a>
    /// </summary>
    public static Icon WindowClose => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RectangleXmark;
    private static Icon? RectanglesMixedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rectangles-mixed?f=classic&amp;s=light">Rectangles Mixed</a>
    /// </summary>
    public static Icon RectanglesMixed => RectanglesMixedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rectangles-mixed", "e323");
    private static Icon? Recyclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/recycle?f=classic&amp;s=light">Recycle</a>
    /// </summary>
    public static Icon Recycle => Recyclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "recycle", "f1b8");
    private static Icon? Reelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reel?f=classic&amp;s=light">Reel</a>
    /// </summary>
    public static Icon Reel => Reelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "reel", "e238");
    private static Icon? ReflectHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reflect-horizontal?f=classic&amp;s=light">Reflect Horizontal</a>
    /// </summary>
    public static Icon ReflectHorizontal => ReflectHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "reflect-horizontal", "e664");
    private static Icon? ReflectVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reflect-vertical?f=classic&amp;s=light">Reflect Vertical</a>
    /// </summary>
    public static Icon ReflectVertical => ReflectVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "reflect-vertical", "e665");
    private static Icon? Refrigeratorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/refrigerator?f=classic&amp;s=light">Refrigerator</a>
    /// </summary>
    public static Icon Refrigerator => Refrigeratorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "refrigerator", "e026");
    private static Icon? Registeredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/registered?f=classic&amp;s=light">Registered</a>
    /// </summary>
    public static Icon Registered => Registeredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "registered", "f25d");
    private static Icon? Repeatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/repeat?f=classic&amp;s=light">Repeat</a>
    /// </summary>
    public static Icon Repeat => Repeatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "repeat", "f363");
    private static Icon? Repeat1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/repeat-1?f=classic&amp;s=light">Repeat 1</a>
    /// </summary>
    public static Icon Repeat1 => Repeat1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "repeat-1", "f365");
    private static Icon? Replyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reply?f=classic&amp;s=light">Reply</a>
    /// </summary>
    public static Icon Reply => Replyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "reply", "f3e5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reply?f=classic&amp;s=light">Reply</a>
    /// </summary>
    public static Icon MailReply => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Reply;
    private static Icon? ReplyAllf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reply-all?f=classic&amp;s=light">Reply All</a>
    /// </summary>
    public static Icon ReplyAll => ReplyAllf ??= new Icon(IconFamily.Classic, IconStyle.Light, "reply-all", "f122");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reply-all?f=classic&amp;s=light">Reply All</a>
    /// </summary>
    public static Icon MailReplyAll => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ReplyAll;
    private static Icon? ReplyClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reply-clock?f=classic&amp;s=light">Reply Clock</a>
    /// </summary>
    public static Icon ReplyClock => ReplyClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "reply-clock", "e239");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/reply-clock?f=classic&amp;s=light">Reply Clock</a>
    /// </summary>
    public static Icon ReplyTime => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ReplyClock;
    private static Icon? Republicanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/republican?f=classic&amp;s=light">Republican</a>
    /// </summary>
    public static Icon Republican => Republicanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "republican", "f75e");
    private static Icon? Restroomf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/restroom?f=classic&amp;s=light">Restroom</a>
    /// </summary>
    public static Icon Restroom => Restroomf ??= new Icon(IconFamily.Classic, IconStyle.Light, "restroom", "f7bd");
    private static Icon? RestroomSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/restroom-simple?f=classic&amp;s=light">Restroom Simple</a>
    /// </summary>
    public static Icon RestroomSimple => RestroomSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "restroom-simple", "e23a");
    private static Icon? Retweetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/retweet?f=classic&amp;s=light">Retweet</a>
    /// </summary>
    public static Icon Retweet => Retweetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "retweet", "f079");
    private static Icon? Rhombusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rhombus?f=classic&amp;s=light">Rhombus</a>
    /// </summary>
    public static Icon Rhombus => Rhombusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rhombus", "e23b");
    private static Icon? Ribbonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ribbon?f=classic&amp;s=light">Ribbon</a>
    /// </summary>
    public static Icon Ribbon => Ribbonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ribbon", "f4d6");
    private static Icon? Rightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right?f=classic&amp;s=light">Right</a>
    /// </summary>
    public static Icon Right => Rightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "right", "f356");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right?f=classic&amp;s=light">Right</a>
    /// </summary>
    public static Icon ArrowAltRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Right;
    private static Icon? RightFromBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-from-bracket?f=classic&amp;s=light">Right From Bracket</a>
    /// </summary>
    public static Icon RightFromBracket => RightFromBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-from-bracket", "f2f5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-from-bracket?f=classic&amp;s=light">Right From Bracket</a>
    /// </summary>
    public static Icon SignOutAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RightFromBracket;
    private static Icon? RightFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-from-line?f=classic&amp;s=light">Right From Line</a>
    /// </summary>
    public static Icon RightFromLine => RightFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-from-line", "f347");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-from-line?f=classic&amp;s=light">Right From Line</a>
    /// </summary>
    public static Icon ArrowAltFromLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RightFromLine;
    private static Icon? RightLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-left?f=classic&amp;s=light">Right Left</a>
    /// </summary>
    public static Icon RightLeft => RightLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-left", "f362");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-left?f=classic&amp;s=light">Right Left</a>
    /// </summary>
    public static Icon ExchangeAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RightLeft;
    private static Icon? RightLeftLargef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-left-large?f=classic&amp;s=light">Right Left Large</a>
    /// </summary>
    public static Icon RightLeftLarge => RightLeftLargef ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-left-large", "e5e1");
    private static Icon? RightLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-long?f=classic&amp;s=light">Right Long</a>
    /// </summary>
    public static Icon RightLong => RightLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-long", "f30b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-long?f=classic&amp;s=light">Right Long</a>
    /// </summary>
    public static Icon LongArrowAltRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RightLong;
    private static Icon? RightLongToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-long-to-line?f=classic&amp;s=light">Right Long To Line</a>
    /// </summary>
    public static Icon RightLongToLine => RightLongToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-long-to-line", "e444");
    private static Icon? RightToBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-to-bracket?f=classic&amp;s=light">Right To Bracket</a>
    /// </summary>
    public static Icon RightToBracket => RightToBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-to-bracket", "f2f6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-to-bracket?f=classic&amp;s=light">Right To Bracket</a>
    /// </summary>
    public static Icon SignInAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RightToBracket;
    private static Icon? RightToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-to-line?f=classic&amp;s=light">Right To Line</a>
    /// </summary>
    public static Icon RightToLine => RightToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "right-to-line", "f34c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/right-to-line?f=classic&amp;s=light">Right To Line</a>
    /// </summary>
    public static Icon ArrowAltToRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RightToLine;
    private static Icon? Ringf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ring?f=classic&amp;s=light">Ring</a>
    /// </summary>
    public static Icon Ring => Ringf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ring", "f70b");
    private static Icon? RingDiamondf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ring-diamond?f=classic&amp;s=light">Ring Diamond</a>
    /// </summary>
    public static Icon RingDiamond => RingDiamondf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ring-diamond", "e5ab");
    private static Icon? RingsWeddingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rings-wedding?f=classic&amp;s=light">Rings Wedding</a>
    /// </summary>
    public static Icon RingsWedding => RingsWeddingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rings-wedding", "f81b");
    private static Icon? Roadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road?f=classic&amp;s=light">Road</a>
    /// </summary>
    public static Icon Road => Roadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road", "f018");
    private static Icon? RoadBarrierf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-barrier?f=classic&amp;s=light">Road Barrier</a>
    /// </summary>
    public static Icon RoadBarrier => RoadBarrierf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-barrier", "e562");
    private static Icon? RoadBridgef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-bridge?f=classic&amp;s=light">Road Bridge</a>
    /// </summary>
    public static Icon RoadBridge => RoadBridgef ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-bridge", "e563");
    private static Icon? RoadCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-circle-check?f=classic&amp;s=light">Road Circle Check</a>
    /// </summary>
    public static Icon RoadCircleCheck => RoadCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-circle-check", "e564");
    private static Icon? RoadCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-circle-exclamation?f=classic&amp;s=light">Road Circle Exclamation</a>
    /// </summary>
    public static Icon RoadCircleExclamation => RoadCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-circle-exclamation", "e565");
    private static Icon? RoadCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-circle-xmark?f=classic&amp;s=light">Road Circle Xmark</a>
    /// </summary>
    public static Icon RoadCircleXmark => RoadCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-circle-xmark", "e566");
    private static Icon? RoadLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-lock?f=classic&amp;s=light">Road Lock</a>
    /// </summary>
    public static Icon RoadLock => RoadLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-lock", "e567");
    private static Icon? RoadSpikesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/road-spikes?f=classic&amp;s=light">Road Spikes</a>
    /// </summary>
    public static Icon RoadSpikes => RoadSpikesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "road-spikes", "e568");
    private static Icon? Robotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/robot?f=classic&amp;s=light">Robot</a>
    /// </summary>
    public static Icon Robot => Robotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "robot", "f544");
    private static Icon? RobotAstromechf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/robot-astromech?f=classic&amp;s=light">Robot Astromech</a>
    /// </summary>
    public static Icon RobotAstromech => RobotAstromechf ??= new Icon(IconFamily.Classic, IconStyle.Light, "robot-astromech", "e2d2");
    private static Icon? Rocketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rocket?f=classic&amp;s=light">Rocket</a>
    /// </summary>
    public static Icon Rocket => Rocketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rocket", "f135");
    private static Icon? RocketLaunchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rocket-launch?f=classic&amp;s=light">Rocket Launch</a>
    /// </summary>
    public static Icon RocketLaunch => RocketLaunchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rocket-launch", "e027");
    private static Icon? RollerCoasterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/roller-coaster?f=classic&amp;s=light">Roller Coaster</a>
    /// </summary>
    public static Icon RollerCoaster => RollerCoasterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "roller-coaster", "e324");
    private static Icon? Rotatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate?f=classic&amp;s=light">Rotate</a>
    /// </summary>
    public static Icon Rotate => Rotatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "rotate", "f2f1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate?f=classic&amp;s=light">Rotate</a>
    /// </summary>
    public static Icon SyncAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Rotate;
    private static Icon? RotateExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-exclamation?f=classic&amp;s=light">Rotate Exclamation</a>
    /// </summary>
    public static Icon RotateExclamation => RotateExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rotate-exclamation", "e23c");
    private static Icon? RotateLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-left?f=classic&amp;s=light">Rotate Left</a>
    /// </summary>
    public static Icon RotateLeft => RotateLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rotate-left", "f2ea");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-left?f=classic&amp;s=light">Rotate Left</a>
    /// </summary>
    public static Icon RotateBack => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RotateLeft;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-left?f=classic&amp;s=light">Rotate Left</a>
    /// </summary>
    public static Icon RotateBackward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RotateLeft;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-left?f=classic&amp;s=light">Rotate Left</a>
    /// </summary>
    public static Icon UndoAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RotateLeft;
    private static Icon? RotateReversef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-reverse?f=classic&amp;s=light">Rotate Reverse</a>
    /// </summary>
    public static Icon RotateReverse => RotateReversef ??= new Icon(IconFamily.Classic, IconStyle.Light, "rotate-reverse", "e631");
    private static Icon? RotateRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-right?f=classic&amp;s=light">Rotate Right</a>
    /// </summary>
    public static Icon RotateRight => RotateRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rotate-right", "f2f9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-right?f=classic&amp;s=light">Rotate Right</a>
    /// </summary>
    public static Icon RedoAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RotateRight;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rotate-right?f=classic&amp;s=light">Rotate Right</a>
    /// </summary>
    public static Icon RotateForward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RotateRight;
    private static Icon? Routef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/route?f=classic&amp;s=light">Route</a>
    /// </summary>
    public static Icon Route => Routef ??= new Icon(IconFamily.Classic, IconStyle.Light, "route", "f4d7");
    private static Icon? RouteHighwayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/route-highway?f=classic&amp;s=light">Route Highway</a>
    /// </summary>
    public static Icon RouteHighway => RouteHighwayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "route-highway", "f61a");
    private static Icon? RouteInterstatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/route-interstate?f=classic&amp;s=light">Route Interstate</a>
    /// </summary>
    public static Icon RouteInterstate => RouteInterstatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "route-interstate", "f61b");
    private static Icon? Routerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/router?f=classic&amp;s=light">Router</a>
    /// </summary>
    public static Icon Router => Routerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "router", "f8da");
    private static Icon? Rssf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rss?f=classic&amp;s=light">Rss</a>
    /// </summary>
    public static Icon Rss => Rssf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rss", "f09e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rss?f=classic&amp;s=light">Rss</a>
    /// </summary>
    public static Icon Feed => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Rss;
    private static Icon? RubleSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruble-sign?f=classic&amp;s=light">Ruble Sign</a>
    /// </summary>
    public static Icon RubleSign => RubleSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ruble-sign", "f158");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruble-sign?f=classic&amp;s=light">Ruble Sign</a>
    /// </summary>
    public static Icon Rouble => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RubleSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruble-sign?f=classic&amp;s=light">Ruble Sign</a>
    /// </summary>
    public static Icon Rub => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RubleSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruble-sign?f=classic&amp;s=light">Ruble Sign</a>
    /// </summary>
    public static Icon Ruble => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RubleSign;
    private static Icon? Rugf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rug?f=classic&amp;s=light">Rug</a>
    /// </summary>
    public static Icon Rug => Rugf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rug", "e569");
    private static Icon? RugbyBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rugby-ball?f=classic&amp;s=light">Rugby Ball</a>
    /// </summary>
    public static Icon RugbyBall => RugbyBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rugby-ball", "e3c6");
    private static Icon? Rulerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruler?f=classic&amp;s=light">Ruler</a>
    /// </summary>
    public static Icon Ruler => Rulerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ruler", "f545");
    private static Icon? RulerCombinedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruler-combined?f=classic&amp;s=light">Ruler Combined</a>
    /// </summary>
    public static Icon RulerCombined => RulerCombinedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ruler-combined", "f546");
    private static Icon? RulerHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruler-horizontal?f=classic&amp;s=light">Ruler Horizontal</a>
    /// </summary>
    public static Icon RulerHorizontal => RulerHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ruler-horizontal", "f547");
    private static Icon? RulerTrianglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruler-triangle?f=classic&amp;s=light">Ruler Triangle</a>
    /// </summary>
    public static Icon RulerTriangle => RulerTrianglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "ruler-triangle", "f61c");
    private static Icon? RulerVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ruler-vertical?f=classic&amp;s=light">Ruler Vertical</a>
    /// </summary>
    public static Icon RulerVertical => RulerVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ruler-vertical", "f548");
    private static Icon? RupeeSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rupee-sign?f=classic&amp;s=light">Rupee Sign</a>
    /// </summary>
    public static Icon RupeeSign => RupeeSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rupee-sign", "f156");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rupee-sign?f=classic&amp;s=light">Rupee Sign</a>
    /// </summary>
    public static Icon Rupee => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.RupeeSign;
    private static Icon? RupiahSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rupiah-sign?f=classic&amp;s=light">Rupiah Sign</a>
    /// </summary>
    public static Icon RupiahSign => RupiahSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rupiah-sign", "e23d");
    private static Icon? Rvf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/rv?f=classic&amp;s=light">Rv</a>
    /// </summary>
    public static Icon Rv => Rvf ??= new Icon(IconFamily.Classic, IconStyle.Light, "rv", "f7be");
    private static Icon? Sf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/s?f=classic&amp;s=light">S</a>
    /// </summary>
    public static Icon S => Sf ??= new Icon(IconFamily.Classic, IconStyle.Light, "s", "53");
    private static Icon? Sackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sack?f=classic&amp;s=light">Sack</a>
    /// </summary>
    public static Icon Sack => Sackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sack", "f81c");
    private static Icon? SackDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sack-dollar?f=classic&amp;s=light">Sack Dollar</a>
    /// </summary>
    public static Icon SackDollar => SackDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sack-dollar", "f81d");
    private static Icon? SackXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sack-xmark?f=classic&amp;s=light">Sack Xmark</a>
    /// </summary>
    public static Icon SackXmark => SackXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sack-xmark", "e56a");
    private static Icon? Sailboatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sailboat?f=classic&amp;s=light">Sailboat</a>
    /// </summary>
    public static Icon Sailboat => Sailboatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sailboat", "e445");
    private static Icon? Saladf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/salad?f=classic&amp;s=light">Salad</a>
    /// </summary>
    public static Icon Salad => Saladf ??= new Icon(IconFamily.Classic, IconStyle.Light, "salad", "f81e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/salad?f=classic&amp;s=light">Salad</a>
    /// </summary>
    public static Icon BowlSalad => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Salad;
    private static Icon? SaltShakerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/salt-shaker?f=classic&amp;s=light">Salt Shaker</a>
    /// </summary>
    public static Icon SaltShaker => SaltShakerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "salt-shaker", "e446");
    private static Icon? Sandwichf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sandwich?f=classic&amp;s=light">Sandwich</a>
    /// </summary>
    public static Icon Sandwich => Sandwichf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sandwich", "f81f");
    private static Icon? Satellitef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/satellite?f=classic&amp;s=light">Satellite</a>
    /// </summary>
    public static Icon Satellite => Satellitef ??= new Icon(IconFamily.Classic, IconStyle.Light, "satellite", "f7bf");
    private static Icon? SatelliteDishf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/satellite-dish?f=classic&amp;s=light">Satellite Dish</a>
    /// </summary>
    public static Icon SatelliteDish => SatelliteDishf ??= new Icon(IconFamily.Classic, IconStyle.Light, "satellite-dish", "f7c0");
    private static Icon? Sausagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sausage?f=classic&amp;s=light">Sausage</a>
    /// </summary>
    public static Icon Sausage => Sausagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "sausage", "f820");
    private static Icon? Saxophonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/saxophone?f=classic&amp;s=light">Saxophone</a>
    /// </summary>
    public static Icon Saxophone => Saxophonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "saxophone", "f8dc");
    private static Icon? SaxophoneFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/saxophone-fire?f=classic&amp;s=light">Saxophone Fire</a>
    /// </summary>
    public static Icon SaxophoneFire => SaxophoneFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "saxophone-fire", "f8db");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/saxophone-fire?f=classic&amp;s=light">Saxophone Fire</a>
    /// </summary>
    public static Icon SaxHot => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SaxophoneFire;
    private static Icon? ScaleBalancedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scale-balanced?f=classic&amp;s=light">Scale Balanced</a>
    /// </summary>
    public static Icon ScaleBalanced => ScaleBalancedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scale-balanced", "f24e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scale-balanced?f=classic&amp;s=light">Scale Balanced</a>
    /// </summary>
    public static Icon BalanceScale => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScaleBalanced;
    private static Icon? ScaleUnbalancedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scale-unbalanced?f=classic&amp;s=light">Scale Unbalanced</a>
    /// </summary>
    public static Icon ScaleUnbalanced => ScaleUnbalancedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scale-unbalanced", "f515");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scale-unbalanced?f=classic&amp;s=light">Scale Unbalanced</a>
    /// </summary>
    public static Icon BalanceScaleLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScaleUnbalanced;
    private static Icon? ScaleUnbalancedFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scale-unbalanced-flip?f=classic&amp;s=light">Scale Unbalanced Flip</a>
    /// </summary>
    public static Icon ScaleUnbalancedFlip => ScaleUnbalancedFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scale-unbalanced-flip", "f516");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scale-unbalanced-flip?f=classic&amp;s=light">Scale Unbalanced Flip</a>
    /// </summary>
    public static Icon BalanceScaleRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScaleUnbalancedFlip;
    private static Icon? Scalpelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scalpel?f=classic&amp;s=light">Scalpel</a>
    /// </summary>
    public static Icon Scalpel => Scalpelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scalpel", "f61d");
    private static Icon? ScalpelLineDashedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scalpel-line-dashed?f=classic&amp;s=light">Scalpel Line Dashed</a>
    /// </summary>
    public static Icon ScalpelLineDashed => ScalpelLineDashedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scalpel-line-dashed", "f61e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scalpel-line-dashed?f=classic&amp;s=light">Scalpel Line Dashed</a>
    /// </summary>
    public static Icon ScalpelPath => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScalpelLineDashed;
    private static Icon? ScannerGunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scanner-gun?f=classic&amp;s=light">Scanner Gun</a>
    /// </summary>
    public static Icon ScannerGun => ScannerGunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scanner-gun", "f488");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scanner-gun?f=classic&amp;s=light">Scanner Gun</a>
    /// </summary>
    public static Icon Scanner => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScannerGun;
    private static Icon? ScannerImagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scanner-image?f=classic&amp;s=light">Scanner Image</a>
    /// </summary>
    public static Icon ScannerImage => ScannerImagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "scanner-image", "f8f3");
    private static Icon? ScannerKeyboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scanner-keyboard?f=classic&amp;s=light">Scanner Keyboard</a>
    /// </summary>
    public static Icon ScannerKeyboard => ScannerKeyboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scanner-keyboard", "f489");
    private static Icon? ScannerTouchscreenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scanner-touchscreen?f=classic&amp;s=light">Scanner Touchscreen</a>
    /// </summary>
    public static Icon ScannerTouchscreen => ScannerTouchscreenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scanner-touchscreen", "f48a");
    private static Icon? Scarecrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scarecrow?f=classic&amp;s=light">Scarecrow</a>
    /// </summary>
    public static Icon Scarecrow => Scarecrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scarecrow", "f70d");
    private static Icon? Scarff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scarf?f=classic&amp;s=light">Scarf</a>
    /// </summary>
    public static Icon Scarf => Scarff ??= new Icon(IconFamily.Classic, IconStyle.Light, "scarf", "f7c1");
    private static Icon? Schoolf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/school?f=classic&amp;s=light">School</a>
    /// </summary>
    public static Icon School => Schoolf ??= new Icon(IconFamily.Classic, IconStyle.Light, "school", "f549");
    private static Icon? SchoolCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/school-circle-check?f=classic&amp;s=light">School Circle Check</a>
    /// </summary>
    public static Icon SchoolCircleCheck => SchoolCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "school-circle-check", "e56b");
    private static Icon? SchoolCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/school-circle-exclamation?f=classic&amp;s=light">School Circle Exclamation</a>
    /// </summary>
    public static Icon SchoolCircleExclamation => SchoolCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "school-circle-exclamation", "e56c");
    private static Icon? SchoolCircleXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/school-circle-xmark?f=classic&amp;s=light">School Circle Xmark</a>
    /// </summary>
    public static Icon SchoolCircleXmark => SchoolCircleXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "school-circle-xmark", "e56d");
    private static Icon? SchoolFlagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/school-flag?f=classic&amp;s=light">School Flag</a>
    /// </summary>
    public static Icon SchoolFlag => SchoolFlagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "school-flag", "e56e");
    private static Icon? SchoolLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/school-lock?f=classic&amp;s=light">School Lock</a>
    /// </summary>
    public static Icon SchoolLock => SchoolLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "school-lock", "e56f");
    private static Icon? Scissorsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scissors?f=classic&amp;s=light">Scissors</a>
    /// </summary>
    public static Icon Scissors => Scissorsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scissors", "f0c4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scissors?f=classic&amp;s=light">Scissors</a>
    /// </summary>
    public static Icon Cut => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Scissors;
    private static Icon? ScreenUsersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/screen-users?f=classic&amp;s=light">Screen Users</a>
    /// </summary>
    public static Icon ScreenUsers => ScreenUsersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "screen-users", "f63d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/screen-users?f=classic&amp;s=light">Screen Users</a>
    /// </summary>
    public static Icon UsersClass => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScreenUsers;
    private static Icon? Screencastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/screencast?f=classic&amp;s=light">Screencast</a>
    /// </summary>
    public static Icon Screencast => Screencastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "screencast", "e23e");
    private static Icon? Screwdriverf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/screwdriver?f=classic&amp;s=light">Screwdriver</a>
    /// </summary>
    public static Icon Screwdriver => Screwdriverf ??= new Icon(IconFamily.Classic, IconStyle.Light, "screwdriver", "f54a");
    private static Icon? ScrewdriverWrenchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/screwdriver-wrench?f=classic&amp;s=light">Screwdriver Wrench</a>
    /// </summary>
    public static Icon ScrewdriverWrench => ScrewdriverWrenchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "screwdriver-wrench", "f7d9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/screwdriver-wrench?f=classic&amp;s=light">Screwdriver Wrench</a>
    /// </summary>
    public static Icon Tools => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScrewdriverWrench;
    private static Icon? Scribblef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scribble?f=classic&amp;s=light">Scribble</a>
    /// </summary>
    public static Icon Scribble => Scribblef ??= new Icon(IconFamily.Classic, IconStyle.Light, "scribble", "e23f");
    private static Icon? Scrollf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scroll?f=classic&amp;s=light">Scroll</a>
    /// </summary>
    public static Icon Scroll => Scrollf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scroll", "f70e");
    private static Icon? ScrollOldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scroll-old?f=classic&amp;s=light">Scroll Old</a>
    /// </summary>
    public static Icon ScrollOld => ScrollOldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scroll-old", "f70f");
    private static Icon? ScrollTorahf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scroll-torah?f=classic&amp;s=light">Scroll Torah</a>
    /// </summary>
    public static Icon ScrollTorah => ScrollTorahf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scroll-torah", "f6a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scroll-torah?f=classic&amp;s=light">Scroll Torah</a>
    /// </summary>
    public static Icon Torah => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ScrollTorah;
    private static Icon? Scrubberf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scrubber?f=classic&amp;s=light">Scrubber</a>
    /// </summary>
    public static Icon Scrubber => Scrubberf ??= new Icon(IconFamily.Classic, IconStyle.Light, "scrubber", "f2f8");
    private static Icon? Scythef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/scythe?f=classic&amp;s=light">Scythe</a>
    /// </summary>
    public static Icon Scythe => Scythef ??= new Icon(IconFamily.Classic, IconStyle.Light, "scythe", "f710");
    private static Icon? SdCardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sd-card?f=classic&amp;s=light">Sd Card</a>
    /// </summary>
    public static Icon SdCard => SdCardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sd-card", "f7c2");
    private static Icon? SdCardsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sd-cards?f=classic&amp;s=light">Sd Cards</a>
    /// </summary>
    public static Icon SdCards => SdCardsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sd-cards", "e240");
    private static Icon? Sealf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/seal?f=classic&amp;s=light">Seal</a>
    /// </summary>
    public static Icon Seal => Sealf ??= new Icon(IconFamily.Classic, IconStyle.Light, "seal", "e241");
    private static Icon? SealExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/seal-exclamation?f=classic&amp;s=light">Seal Exclamation</a>
    /// </summary>
    public static Icon SealExclamation => SealExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "seal-exclamation", "e242");
    private static Icon? SealQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/seal-question?f=classic&amp;s=light">Seal Question</a>
    /// </summary>
    public static Icon SealQuestion => SealQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "seal-question", "e243");
    private static Icon? SeatAirlinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/seat-airline?f=classic&amp;s=light">Seat Airline</a>
    /// </summary>
    public static Icon SeatAirline => SeatAirlinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "seat-airline", "e244");
    private static Icon? Sectionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/section?f=classic&amp;s=light">Section</a>
    /// </summary>
    public static Icon Section => Sectionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "section", "e447");
    private static Icon? Seedlingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/seedling?f=classic&amp;s=light">Seedling</a>
    /// </summary>
    public static Icon Seedling => Seedlingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "seedling", "f4d8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/seedling?f=classic&amp;s=light">Seedling</a>
    /// </summary>
    public static Icon Sprout => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Seedling;
    private static Icon? Semicolonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/semicolon?f=classic&amp;s=light">Semicolon</a>
    /// </summary>
    public static Icon Semicolon => Semicolonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "semicolon", "3b");
    private static Icon? SendBackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/send-back?f=classic&amp;s=light">Send Back</a>
    /// </summary>
    public static Icon SendBack => SendBackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "send-back", "f87e");
    private static Icon? SendBackwardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/send-backward?f=classic&amp;s=light">Send Backward</a>
    /// </summary>
    public static Icon SendBackward => SendBackwardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "send-backward", "f87f");
    private static Icon? Sensorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor?f=classic&amp;s=light">Sensor</a>
    /// </summary>
    public static Icon Sensor => Sensorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sensor", "e028");
    private static Icon? SensorCloudf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor-cloud?f=classic&amp;s=light">Sensor Cloud</a>
    /// </summary>
    public static Icon SensorCloud => SensorCloudf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sensor-cloud", "e02c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor-cloud?f=classic&amp;s=light">Sensor Cloud</a>
    /// </summary>
    public static Icon SensorSmoke => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SensorCloud;
    private static Icon? SensorFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor-fire?f=classic&amp;s=light">Sensor Fire</a>
    /// </summary>
    public static Icon SensorFire => SensorFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "sensor-fire", "e02a");
    private static Icon? SensorOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor-on?f=classic&amp;s=light">Sensor On</a>
    /// </summary>
    public static Icon SensorOn => SensorOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sensor-on", "e02b");
    private static Icon? SensorTriangleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor-triangle-exclamation?f=classic&amp;s=light">Sensor Triangle Exclamation</a>
    /// </summary>
    public static Icon SensorTriangleExclamation => SensorTriangleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sensor-triangle-exclamation", "e029");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sensor-triangle-exclamation?f=classic&amp;s=light">Sensor Triangle Exclamation</a>
    /// </summary>
    public static Icon SensorAlert => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SensorTriangleExclamation;
    private static Icon? Serverf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/server?f=classic&amp;s=light">Server</a>
    /// </summary>
    public static Icon Server => Serverf ??= new Icon(IconFamily.Classic, IconStyle.Light, "server", "f233");
    private static Icon? Shapesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shapes?f=classic&amp;s=light">Shapes</a>
    /// </summary>
    public static Icon Shapes => Shapesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shapes", "f61f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shapes?f=classic&amp;s=light">Shapes</a>
    /// </summary>
    public static Icon TriangleCircleSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shapes;
    private static Icon? Sharef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share?f=classic&amp;s=light">Share</a>
    /// </summary>
    public static Icon Share => Sharef ??= new Icon(IconFamily.Classic, IconStyle.Light, "share", "f064");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share?f=classic&amp;s=light">Share</a>
    /// </summary>
    public static Icon MailForward => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Share;
    private static Icon? ShareAllf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share-all?f=classic&amp;s=light">Share All</a>
    /// </summary>
    public static Icon ShareAll => ShareAllf ??= new Icon(IconFamily.Classic, IconStyle.Light, "share-all", "f367");
    private static Icon? ShareFromSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share-from-square?f=classic&amp;s=light">Share From Square</a>
    /// </summary>
    public static Icon ShareFromSquare => ShareFromSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "share-from-square", "f14d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share-from-square?f=classic&amp;s=light">Share From Square</a>
    /// </summary>
    public static Icon ShareSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShareFromSquare;
    private static Icon? ShareNodesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share-nodes?f=classic&amp;s=light">Share Nodes</a>
    /// </summary>
    public static Icon ShareNodes => ShareNodesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "share-nodes", "f1e0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/share-nodes?f=classic&amp;s=light">Share Nodes</a>
    /// </summary>
    public static Icon ShareAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShareNodes;
    private static Icon? Sheepf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sheep?f=classic&amp;s=light">Sheep</a>
    /// </summary>
    public static Icon Sheep => Sheepf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sheep", "f711");
    private static Icon? SheetPlasticf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sheet-plastic?f=classic&amp;s=light">Sheet Plastic</a>
    /// </summary>
    public static Icon SheetPlastic => SheetPlasticf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sheet-plastic", "e571");
    private static Icon? ShekelSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shekel-sign?f=classic&amp;s=light">Shekel Sign</a>
    /// </summary>
    public static Icon ShekelSign => ShekelSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shekel-sign", "f20b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shekel-sign?f=classic&amp;s=light">Shekel Sign</a>
    /// </summary>
    public static Icon Ils => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShekelSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shekel-sign?f=classic&amp;s=light">Shekel Sign</a>
    /// </summary>
    public static Icon Shekel => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShekelSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shekel-sign?f=classic&amp;s=light">Shekel Sign</a>
    /// </summary>
    public static Icon Sheqel => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShekelSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shekel-sign?f=classic&amp;s=light">Shekel Sign</a>
    /// </summary>
    public static Icon SheqelSign => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShekelSign;
    private static Icon? Shelvesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shelves?f=classic&amp;s=light">Shelves</a>
    /// </summary>
    public static Icon Shelves => Shelvesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shelves", "f480");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shelves?f=classic&amp;s=light">Shelves</a>
    /// </summary>
    public static Icon Inventory => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shelves;
    private static Icon? ShelvesEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shelves-empty?f=classic&amp;s=light">Shelves Empty</a>
    /// </summary>
    public static Icon ShelvesEmpty => ShelvesEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shelves-empty", "e246");
    private static Icon? Shieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield?f=classic&amp;s=light">Shield</a>
    /// </summary>
    public static Icon Shield => Shieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield", "f132");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield?f=classic&amp;s=light">Shield</a>
    /// </summary>
    public static Icon ShieldBlank => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shield;
    private static Icon? ShieldCatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-cat?f=classic&amp;s=light">Shield Cat</a>
    /// </summary>
    public static Icon ShieldCat => ShieldCatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-cat", "e572");
    private static Icon? ShieldCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-check?f=classic&amp;s=light">Shield Check</a>
    /// </summary>
    public static Icon ShieldCheck => ShieldCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-check", "f2f7");
    private static Icon? ShieldCrossf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-cross?f=classic&amp;s=light">Shield Cross</a>
    /// </summary>
    public static Icon ShieldCross => ShieldCrossf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-cross", "f712");
    private static Icon? ShieldDogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-dog?f=classic&amp;s=light">Shield Dog</a>
    /// </summary>
    public static Icon ShieldDog => ShieldDogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-dog", "e573");
    private static Icon? ShieldExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-exclamation?f=classic&amp;s=light">Shield Exclamation</a>
    /// </summary>
    public static Icon ShieldExclamation => ShieldExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-exclamation", "e247");
    private static Icon? ShieldHalvedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-halved?f=classic&amp;s=light">Shield Halved</a>
    /// </summary>
    public static Icon ShieldHalved => ShieldHalvedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-halved", "f3ed");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-halved?f=classic&amp;s=light">Shield Halved</a>
    /// </summary>
    public static Icon ShieldAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShieldHalved;
    private static Icon? ShieldHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-heart?f=classic&amp;s=light">Shield Heart</a>
    /// </summary>
    public static Icon ShieldHeart => ShieldHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-heart", "e574");
    private static Icon? ShieldKeyholef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-keyhole?f=classic&amp;s=light">Shield Keyhole</a>
    /// </summary>
    public static Icon ShieldKeyhole => ShieldKeyholef ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-keyhole", "e248");
    private static Icon? ShieldMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-minus?f=classic&amp;s=light">Shield Minus</a>
    /// </summary>
    public static Icon ShieldMinus => ShieldMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-minus", "e249");
    private static Icon? ShieldPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-plus?f=classic&amp;s=light">Shield Plus</a>
    /// </summary>
    public static Icon ShieldPlus => ShieldPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-plus", "e24a");
    private static Icon? ShieldQuarteredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-quartered?f=classic&amp;s=light">Shield Quartered</a>
    /// </summary>
    public static Icon ShieldQuartered => ShieldQuarteredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-quartered", "e575");
    private static Icon? ShieldSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-slash?f=classic&amp;s=light">Shield Slash</a>
    /// </summary>
    public static Icon ShieldSlash => ShieldSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-slash", "e24b");
    private static Icon? ShieldVirusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-virus?f=classic&amp;s=light">Shield Virus</a>
    /// </summary>
    public static Icon ShieldVirus => ShieldVirusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-virus", "e06c");
    private static Icon? ShieldXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-xmark?f=classic&amp;s=light">Shield Xmark</a>
    /// </summary>
    public static Icon ShieldXmark => ShieldXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shield-xmark", "e24c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shield-xmark?f=classic&amp;s=light">Shield Xmark</a>
    /// </summary>
    public static Icon ShieldTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShieldXmark;
    private static Icon? Shipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ship?f=classic&amp;s=light">Ship</a>
    /// </summary>
    public static Icon Ship => Shipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ship", "f21a");
    private static Icon? Shirtf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shirt?f=classic&amp;s=light">Shirt</a>
    /// </summary>
    public static Icon Shirt => Shirtf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shirt", "f553");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shirt?f=classic&amp;s=light">Shirt</a>
    /// </summary>
    public static Icon TShirt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shirt;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shirt?f=classic&amp;s=light">Shirt</a>
    /// </summary>
    public static Icon Tshirt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shirt;
    private static Icon? ShirtLongSleevef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shirt-long-sleeve?f=classic&amp;s=light">Shirt Long Sleeve</a>
    /// </summary>
    public static Icon ShirtLongSleeve => ShirtLongSleevef ??= new Icon(IconFamily.Classic, IconStyle.Light, "shirt-long-sleeve", "e3c7");
    private static Icon? ShirtRunningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shirt-running?f=classic&amp;s=light">Shirt Running</a>
    /// </summary>
    public static Icon ShirtRunning => ShirtRunningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shirt-running", "e3c8");
    private static Icon? ShirtTankTopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shirt-tank-top?f=classic&amp;s=light">Shirt Tank Top</a>
    /// </summary>
    public static Icon ShirtTankTop => ShirtTankTopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shirt-tank-top", "e3c9");
    private static Icon? ShishKebabf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shish-kebab?f=classic&amp;s=light">Shish Kebab</a>
    /// </summary>
    public static Icon ShishKebab => ShishKebabf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shish-kebab", "f821");
    private static Icon? ShoePrintsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shoe-prints?f=classic&amp;s=light">Shoe Prints</a>
    /// </summary>
    public static Icon ShoePrints => ShoePrintsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shoe-prints", "f54b");
    private static Icon? Shopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shop?f=classic&amp;s=light">Shop</a>
    /// </summary>
    public static Icon Shop => Shopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shop", "f54f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shop?f=classic&amp;s=light">Shop</a>
    /// </summary>
    public static Icon StoreAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shop;
    private static Icon? ShopLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shop-lock?f=classic&amp;s=light">Shop Lock</a>
    /// </summary>
    public static Icon ShopLock => ShopLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shop-lock", "e4a5");
    private static Icon? ShopSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shop-slash?f=classic&amp;s=light">Shop Slash</a>
    /// </summary>
    public static Icon ShopSlash => ShopSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shop-slash", "e070");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shop-slash?f=classic&amp;s=light">Shop Slash</a>
    /// </summary>
    public static Icon StoreAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShopSlash;
    private static Icon? Shovelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shovel?f=classic&amp;s=light">Shovel</a>
    /// </summary>
    public static Icon Shovel => Shovelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shovel", "f713");
    private static Icon? ShovelSnowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shovel-snow?f=classic&amp;s=light">Shovel Snow</a>
    /// </summary>
    public static Icon ShovelSnow => ShovelSnowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shovel-snow", "f7c3");
    private static Icon? Showerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shower?f=classic&amp;s=light">Shower</a>
    /// </summary>
    public static Icon Shower => Showerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shower", "f2cc");
    private static Icon? ShowerDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shower-down?f=classic&amp;s=light">Shower Down</a>
    /// </summary>
    public static Icon ShowerDown => ShowerDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shower-down", "e24d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shower-down?f=classic&amp;s=light">Shower Down</a>
    /// </summary>
    public static Icon ShowerAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShowerDown;
    private static Icon? Shredderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shredder?f=classic&amp;s=light">Shredder</a>
    /// </summary>
    public static Icon Shredder => Shredderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shredder", "f68a");
    private static Icon? Shrimpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shrimp?f=classic&amp;s=light">Shrimp</a>
    /// </summary>
    public static Icon Shrimp => Shrimpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shrimp", "e448");
    private static Icon? Shufflef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shuffle?f=classic&amp;s=light">Shuffle</a>
    /// </summary>
    public static Icon Shuffle => Shufflef ??= new Icon(IconFamily.Classic, IconStyle.Light, "shuffle", "f074");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shuffle?f=classic&amp;s=light">Shuffle</a>
    /// </summary>
    public static Icon Random => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Shuffle;
    private static Icon? Shuttersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shutters?f=classic&amp;s=light">Shutters</a>
    /// </summary>
    public static Icon Shutters => Shuttersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shutters", "e449");
    private static Icon? ShuttleSpacef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shuttle-space?f=classic&amp;s=light">Shuttle Space</a>
    /// </summary>
    public static Icon ShuttleSpace => ShuttleSpacef ??= new Icon(IconFamily.Classic, IconStyle.Light, "shuttle-space", "f197");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shuttle-space?f=classic&amp;s=light">Shuttle Space</a>
    /// </summary>
    public static Icon SpaceShuttle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ShuttleSpace;
    private static Icon? Shuttlecockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/shuttlecock?f=classic&amp;s=light">Shuttlecock</a>
    /// </summary>
    public static Icon Shuttlecock => Shuttlecockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "shuttlecock", "f45b");
    private static Icon? Sicklef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sickle?f=classic&amp;s=light">Sickle</a>
    /// </summary>
    public static Icon Sickle => Sicklef ??= new Icon(IconFamily.Classic, IconStyle.Light, "sickle", "f822");
    private static Icon? Sidebarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sidebar?f=classic&amp;s=light">Sidebar</a>
    /// </summary>
    public static Icon Sidebar => Sidebarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sidebar", "e24e");
    private static Icon? SidebarFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sidebar-flip?f=classic&amp;s=light">Sidebar Flip</a>
    /// </summary>
    public static Icon SidebarFlip => SidebarFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sidebar-flip", "e24f");
    private static Icon? Sigmaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sigma?f=classic&amp;s=light">Sigma</a>
    /// </summary>
    public static Icon Sigma => Sigmaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sigma", "f68b");
    private static Icon? SignHangingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sign-hanging?f=classic&amp;s=light">Sign Hanging</a>
    /// </summary>
    public static Icon SignHanging => SignHangingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sign-hanging", "f4d9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sign-hanging?f=classic&amp;s=light">Sign Hanging</a>
    /// </summary>
    public static Icon Sign => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignHanging;
    private static Icon? SignPostf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sign-post?f=classic&amp;s=light">Sign Post</a>
    /// </summary>
    public static Icon SignPost => SignPostf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sign-post", "e624");
    private static Icon? SignPostsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sign-posts?f=classic&amp;s=light">Sign Posts</a>
    /// </summary>
    public static Icon SignPosts => SignPostsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sign-posts", "e625");
    private static Icon? SignPostsWrenchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sign-posts-wrench?f=classic&amp;s=light">Sign Posts Wrench</a>
    /// </summary>
    public static Icon SignPostsWrench => SignPostsWrenchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sign-posts-wrench", "e626");
    private static Icon? Signalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal?f=classic&amp;s=light">Signal</a>
    /// </summary>
    public static Icon Signal => Signalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal", "f012");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal?f=classic&amp;s=light">Signal</a>
    /// </summary>
    public static Icon Signal5 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Signal;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal?f=classic&amp;s=light">Signal</a>
    /// </summary>
    public static Icon SignalPerfect => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Signal;
    private static Icon? SignalBarsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars?f=classic&amp;s=light">Signal Bars</a>
    /// </summary>
    public static Icon SignalBars => SignalBarsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-bars", "f690");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars?f=classic&amp;s=light">Signal Bars</a>
    /// </summary>
    public static Icon SignalAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBars;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars?f=classic&amp;s=light">Signal Bars</a>
    /// </summary>
    public static Icon SignalAlt4 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBars;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars?f=classic&amp;s=light">Signal Bars</a>
    /// </summary>
    public static Icon SignalBarsStrong => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBars;
    private static Icon? SignalBarsFairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-fair?f=classic&amp;s=light">Signal Bars Fair</a>
    /// </summary>
    public static Icon SignalBarsFair => SignalBarsFairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-bars-fair", "f692");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-fair?f=classic&amp;s=light">Signal Bars Fair</a>
    /// </summary>
    public static Icon SignalAlt2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBarsFair;
    private static Icon? SignalBarsGoodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-good?f=classic&amp;s=light">Signal Bars Good</a>
    /// </summary>
    public static Icon SignalBarsGood => SignalBarsGoodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-bars-good", "f693");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-good?f=classic&amp;s=light">Signal Bars Good</a>
    /// </summary>
    public static Icon SignalAlt3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBarsGood;
    private static Icon? SignalBarsSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-slash?f=classic&amp;s=light">Signal Bars Slash</a>
    /// </summary>
    public static Icon SignalBarsSlash => SignalBarsSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-bars-slash", "f694");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-slash?f=classic&amp;s=light">Signal Bars Slash</a>
    /// </summary>
    public static Icon SignalAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBarsSlash;
    private static Icon? SignalBarsWeakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-weak?f=classic&amp;s=light">Signal Bars Weak</a>
    /// </summary>
    public static Icon SignalBarsWeak => SignalBarsWeakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-bars-weak", "f691");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-bars-weak?f=classic&amp;s=light">Signal Bars Weak</a>
    /// </summary>
    public static Icon SignalAlt1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalBarsWeak;
    private static Icon? SignalFairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-fair?f=classic&amp;s=light">Signal Fair</a>
    /// </summary>
    public static Icon SignalFair => SignalFairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-fair", "f68d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-fair?f=classic&amp;s=light">Signal Fair</a>
    /// </summary>
    public static Icon Signal2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalFair;
    private static Icon? SignalGoodf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-good?f=classic&amp;s=light">Signal Good</a>
    /// </summary>
    public static Icon SignalGood => SignalGoodf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-good", "f68e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-good?f=classic&amp;s=light">Signal Good</a>
    /// </summary>
    public static Icon Signal3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalGood;
    private static Icon? SignalSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-slash?f=classic&amp;s=light">Signal Slash</a>
    /// </summary>
    public static Icon SignalSlash => SignalSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-slash", "f695");
    private static Icon? SignalStreamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-stream?f=classic&amp;s=light">Signal Stream</a>
    /// </summary>
    public static Icon SignalStream => SignalStreamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-stream", "f8dd");
    private static Icon? SignalStreamSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-stream-slash?f=classic&amp;s=light">Signal Stream Slash</a>
    /// </summary>
    public static Icon SignalStreamSlash => SignalStreamSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-stream-slash", "e250");
    private static Icon? SignalStrongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-strong?f=classic&amp;s=light">Signal Strong</a>
    /// </summary>
    public static Icon SignalStrong => SignalStrongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-strong", "f68f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-strong?f=classic&amp;s=light">Signal Strong</a>
    /// </summary>
    public static Icon Signal4 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalStrong;
    private static Icon? SignalWeakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-weak?f=classic&amp;s=light">Signal Weak</a>
    /// </summary>
    public static Icon SignalWeak => SignalWeakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signal-weak", "f68c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signal-weak?f=classic&amp;s=light">Signal Weak</a>
    /// </summary>
    public static Icon Signal1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignalWeak;
    private static Icon? Signaturef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signature?f=classic&amp;s=light">Signature</a>
    /// </summary>
    public static Icon Signature => Signaturef ??= new Icon(IconFamily.Classic, IconStyle.Light, "signature", "f5b7");
    private static Icon? SignatureLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signature-lock?f=classic&amp;s=light">Signature Lock</a>
    /// </summary>
    public static Icon SignatureLock => SignatureLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signature-lock", "e3ca");
    private static Icon? SignatureSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signature-slash?f=classic&amp;s=light">Signature Slash</a>
    /// </summary>
    public static Icon SignatureSlash => SignatureSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signature-slash", "e3cb");
    private static Icon? SignsPostf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signs-post?f=classic&amp;s=light">Signs Post</a>
    /// </summary>
    public static Icon SignsPost => SignsPostf ??= new Icon(IconFamily.Classic, IconStyle.Light, "signs-post", "f277");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/signs-post?f=classic&amp;s=light">Signs Post</a>
    /// </summary>
    public static Icon MapSigns => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SignsPost;
    private static Icon? SimCardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sim-card?f=classic&amp;s=light">Sim Card</a>
    /// </summary>
    public static Icon SimCard => SimCardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sim-card", "f7c4");
    private static Icon? SimCardsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sim-cards?f=classic&amp;s=light">Sim Cards</a>
    /// </summary>
    public static Icon SimCards => SimCardsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sim-cards", "e251");
    private static Icon? Sinkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sink?f=classic&amp;s=light">Sink</a>
    /// </summary>
    public static Icon Sink => Sinkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sink", "e06d");
    private static Icon? Sirenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/siren?f=classic&amp;s=light">Siren</a>
    /// </summary>
    public static Icon Siren => Sirenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "siren", "e02d");
    private static Icon? SirenOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/siren-on?f=classic&amp;s=light">Siren On</a>
    /// </summary>
    public static Icon SirenOn => SirenOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "siren-on", "e02e");
    private static Icon? Sitemapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sitemap?f=classic&amp;s=light">Sitemap</a>
    /// </summary>
    public static Icon Sitemap => Sitemapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sitemap", "f0e8");
    private static Icon? Skeletonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/skeleton?f=classic&amp;s=light">Skeleton</a>
    /// </summary>
    public static Icon Skeleton => Skeletonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "skeleton", "f620");
    private static Icon? SkeletonRibsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/skeleton-ribs?f=classic&amp;s=light">Skeleton Ribs</a>
    /// </summary>
    public static Icon SkeletonRibs => SkeletonRibsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "skeleton-ribs", "e5cb");
    private static Icon? SkiBootf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ski-boot?f=classic&amp;s=light">Ski Boot</a>
    /// </summary>
    public static Icon SkiBoot => SkiBootf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ski-boot", "e3cc");
    private static Icon? SkiBootSkif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ski-boot-ski?f=classic&amp;s=light">Ski Boot Ski</a>
    /// </summary>
    public static Icon SkiBootSki => SkiBootSkif ??= new Icon(IconFamily.Classic, IconStyle.Light, "ski-boot-ski", "e3cd");
    private static Icon? Skullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/skull?f=classic&amp;s=light">Skull</a>
    /// </summary>
    public static Icon Skull => Skullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "skull", "f54c");
    private static Icon? SkullCowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/skull-cow?f=classic&amp;s=light">Skull Cow</a>
    /// </summary>
    public static Icon SkullCow => SkullCowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "skull-cow", "f8de");
    private static Icon? SkullCrossbonesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/skull-crossbones?f=classic&amp;s=light">Skull Crossbones</a>
    /// </summary>
    public static Icon SkullCrossbones => SkullCrossbonesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "skull-crossbones", "f714");
    private static Icon? Slashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/slash?f=classic&amp;s=light">Slash</a>
    /// </summary>
    public static Icon Slash => Slashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "slash", "f715");
    private static Icon? SlashBackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/slash-back?f=classic&amp;s=light">Slash Back</a>
    /// </summary>
    public static Icon SlashBack => SlashBackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "slash-back", "5c");
    private static Icon? SlashForwardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/slash-forward?f=classic&amp;s=light">Slash Forward</a>
    /// </summary>
    public static Icon SlashForward => SlashForwardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "slash-forward", "2f");
    private static Icon? Sleighf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sleigh?f=classic&amp;s=light">Sleigh</a>
    /// </summary>
    public static Icon Sleigh => Sleighf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sleigh", "f7cc");
    private static Icon? Sliderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/slider?f=classic&amp;s=light">Slider</a>
    /// </summary>
    public static Icon Slider => Sliderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "slider", "e252");
    private static Icon? Slidersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sliders?f=classic&amp;s=light">Sliders</a>
    /// </summary>
    public static Icon Sliders => Slidersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sliders", "f1de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sliders?f=classic&amp;s=light">Sliders</a>
    /// </summary>
    public static Icon SlidersH => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Sliders;
    private static Icon? SlidersSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sliders-simple?f=classic&amp;s=light">Sliders Simple</a>
    /// </summary>
    public static Icon SlidersSimple => SlidersSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "sliders-simple", "e253");
    private static Icon? SlidersUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sliders-up?f=classic&amp;s=light">Sliders Up</a>
    /// </summary>
    public static Icon SlidersUp => SlidersUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sliders-up", "f3f1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sliders-up?f=classic&amp;s=light">Sliders Up</a>
    /// </summary>
    public static Icon SlidersV => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SlidersUp;
    private static Icon? SlotMachinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/slot-machine?f=classic&amp;s=light">Slot Machine</a>
    /// </summary>
    public static Icon SlotMachine => SlotMachinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "slot-machine", "e3ce");
    private static Icon? Smogf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/smog?f=classic&amp;s=light">Smog</a>
    /// </summary>
    public static Icon Smog => Smogf ??= new Icon(IconFamily.Classic, IconStyle.Light, "smog", "f75f");
    private static Icon? Smokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/smoke?f=classic&amp;s=light">Smoke</a>
    /// </summary>
    public static Icon Smoke => Smokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "smoke", "f760");
    private static Icon? Smokingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/smoking?f=classic&amp;s=light">Smoking</a>
    /// </summary>
    public static Icon Smoking => Smokingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "smoking", "f48d");
    private static Icon? Snakef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snake?f=classic&amp;s=light">Snake</a>
    /// </summary>
    public static Icon Snake => Snakef ??= new Icon(IconFamily.Classic, IconStyle.Light, "snake", "f716");
    private static Icon? Snoozef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snooze?f=classic&amp;s=light">Snooze</a>
    /// </summary>
    public static Icon Snooze => Snoozef ??= new Icon(IconFamily.Classic, IconStyle.Light, "snooze", "f880");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snooze?f=classic&amp;s=light">Snooze</a>
    /// </summary>
    public static Icon Zzz => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Snooze;
    private static Icon? SnowBlowingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snow-blowing?f=classic&amp;s=light">Snow Blowing</a>
    /// </summary>
    public static Icon SnowBlowing => SnowBlowingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "snow-blowing", "f761");
    private static Icon? Snowflakef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowflake?f=classic&amp;s=light">Snowflake</a>
    /// </summary>
    public static Icon Snowflake => Snowflakef ??= new Icon(IconFamily.Classic, IconStyle.Light, "snowflake", "f2dc");
    private static Icon? SnowflakeDropletsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowflake-droplets?f=classic&amp;s=light">Snowflake Droplets</a>
    /// </summary>
    public static Icon SnowflakeDroplets => SnowflakeDropletsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "snowflake-droplets", "e5c1");
    private static Icon? Snowflakesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowflakes?f=classic&amp;s=light">Snowflakes</a>
    /// </summary>
    public static Icon Snowflakes => Snowflakesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "snowflakes", "f7cf");
    private static Icon? Snowmanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowman?f=classic&amp;s=light">Snowman</a>
    /// </summary>
    public static Icon Snowman => Snowmanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "snowman", "f7d0");
    private static Icon? SnowmanHeadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowman-head?f=classic&amp;s=light">Snowman Head</a>
    /// </summary>
    public static Icon SnowmanHead => SnowmanHeadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "snowman-head", "f79b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowman-head?f=classic&amp;s=light">Snowman Head</a>
    /// </summary>
    public static Icon FrostyHead => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SnowmanHead;
    private static Icon? Snowplowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/snowplow?f=classic&amp;s=light">Snowplow</a>
    /// </summary>
    public static Icon Snowplow => Snowplowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "snowplow", "f7d2");
    private static Icon? Soapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/soap?f=classic&amp;s=light">Soap</a>
    /// </summary>
    public static Icon Soap => Soapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "soap", "e06e");
    private static Icon? Socksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/socks?f=classic&amp;s=light">Socks</a>
    /// </summary>
    public static Icon Socks => Socksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "socks", "f696");
    private static Icon? SoftServef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/soft-serve?f=classic&amp;s=light">Soft Serve</a>
    /// </summary>
    public static Icon SoftServe => SoftServef ??= new Icon(IconFamily.Classic, IconStyle.Light, "soft-serve", "e400");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/soft-serve?f=classic&amp;s=light">Soft Serve</a>
    /// </summary>
    public static Icon Creemee => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SoftServe;
    private static Icon? SolarPanelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/solar-panel?f=classic&amp;s=light">Solar Panel</a>
    /// </summary>
    public static Icon SolarPanel => SolarPanelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "solar-panel", "f5ba");
    private static Icon? SolarSystemf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/solar-system?f=classic&amp;s=light">Solar System</a>
    /// </summary>
    public static Icon SolarSystem => SolarSystemf ??= new Icon(IconFamily.Classic, IconStyle.Light, "solar-system", "e02f");
    private static Icon? Sortf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sort?f=classic&amp;s=light">Sort</a>
    /// </summary>
    public static Icon Sort => Sortf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sort", "f0dc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sort?f=classic&amp;s=light">Sort</a>
    /// </summary>
    public static Icon Unsorted => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Sort;
    private static Icon? SortDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sort-down?f=classic&amp;s=light">Sort Down</a>
    /// </summary>
    public static Icon SortDown => SortDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sort-down", "f0dd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sort-down?f=classic&amp;s=light">Sort Down</a>
    /// </summary>
    public static Icon SortDesc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SortDown;
    private static Icon? SortUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sort-up?f=classic&amp;s=light">Sort Up</a>
    /// </summary>
    public static Icon SortUp => SortUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sort-up", "f0de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sort-up?f=classic&amp;s=light">Sort Up</a>
    /// </summary>
    public static Icon SortAsc => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SortUp;
    private static Icon? Spaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spa?f=classic&amp;s=light">Spa</a>
    /// </summary>
    public static Icon Spa => Spaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spa", "f5bb");
    private static Icon? SpaceStationMoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/space-station-moon?f=classic&amp;s=light">Space Station Moon</a>
    /// </summary>
    public static Icon SpaceStationMoon => SpaceStationMoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "space-station-moon", "e033");
    private static Icon? SpaceStationMoonConstructionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/space-station-moon-construction?f=classic&amp;s=light">Space Station Moon Construction</a>
    /// </summary>
    public static Icon SpaceStationMoonConstruction => SpaceStationMoonConstructionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "space-station-moon-construction", "e034");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/space-station-moon-construction?f=classic&amp;s=light">Space Station Moon Construction</a>
    /// </summary>
    public static Icon SpaceStationMoonAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SpaceStationMoonConstruction;
    private static Icon? Spadef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spade?f=classic&amp;s=light">Spade</a>
    /// </summary>
    public static Icon Spade => Spadef ??= new Icon(IconFamily.Classic, IconStyle.Light, "spade", "f2f4");
    private static Icon? SpaghettiMonsterFlyingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spaghetti-monster-flying?f=classic&amp;s=light">Spaghetti Monster Flying</a>
    /// </summary>
    public static Icon SpaghettiMonsterFlying => SpaghettiMonsterFlyingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spaghetti-monster-flying", "f67b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spaghetti-monster-flying?f=classic&amp;s=light">Spaghetti Monster Flying</a>
    /// </summary>
    public static Icon Pastafarianism => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SpaghettiMonsterFlying;
    private static Icon? Sparklef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sparkle?f=classic&amp;s=light">Sparkle</a>
    /// </summary>
    public static Icon Sparkle => Sparklef ??= new Icon(IconFamily.Classic, IconStyle.Light, "sparkle", "e5d6");
    private static Icon? Sparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sparkles?f=classic&amp;s=light">Sparkles</a>
    /// </summary>
    public static Icon Sparkles => Sparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sparkles", "f890");
    private static Icon? Speakerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/speaker?f=classic&amp;s=light">Speaker</a>
    /// </summary>
    public static Icon Speaker => Speakerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "speaker", "f8df");
    private static Icon? Speakersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/speakers?f=classic&amp;s=light">Speakers</a>
    /// </summary>
    public static Icon Speakers => Speakersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "speakers", "f8e0");
    private static Icon? SpellCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spell-check?f=classic&amp;s=light">Spell Check</a>
    /// </summary>
    public static Icon SpellCheck => SpellCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spell-check", "f891");
    private static Icon? Spiderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spider?f=classic&amp;s=light">Spider</a>
    /// </summary>
    public static Icon Spider => Spiderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spider", "f717");
    private static Icon? SpiderBlackWidowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spider-black-widow?f=classic&amp;s=light">Spider Black Widow</a>
    /// </summary>
    public static Icon SpiderBlackWidow => SpiderBlackWidowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spider-black-widow", "f718");
    private static Icon? SpiderWebf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spider-web?f=classic&amp;s=light">Spider Web</a>
    /// </summary>
    public static Icon SpiderWeb => SpiderWebf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spider-web", "f719");
    private static Icon? Spinnerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spinner?f=classic&amp;s=light">Spinner</a>
    /// </summary>
    public static Icon Spinner => Spinnerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spinner", "f110");
    private static Icon? SpinnerScalef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spinner-scale?f=classic&amp;s=light">Spinner Scale</a>
    /// </summary>
    public static Icon SpinnerScale => SpinnerScalef ??= new Icon(IconFamily.Classic, IconStyle.Light, "spinner-scale", "e62a");
    private static Icon? SpinnerThirdf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spinner-third?f=classic&amp;s=light">Spinner Third</a>
    /// </summary>
    public static Icon SpinnerThird => SpinnerThirdf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spinner-third", "f3f4");
    private static Icon? Splitf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/split?f=classic&amp;s=light">Split</a>
    /// </summary>
    public static Icon Split => Splitf ??= new Icon(IconFamily.Classic, IconStyle.Light, "split", "e254");
    private static Icon? Splotchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/splotch?f=classic&amp;s=light">Splotch</a>
    /// </summary>
    public static Icon Splotch => Splotchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "splotch", "f5bc");
    private static Icon? Spoonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spoon?f=classic&amp;s=light">Spoon</a>
    /// </summary>
    public static Icon Spoon => Spoonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spoon", "f2e5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spoon?f=classic&amp;s=light">Spoon</a>
    /// </summary>
    public static Icon UtensilSpoon => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Spoon;
    private static Icon? Sportsballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sportsball?f=classic&amp;s=light">Sportsball</a>
    /// </summary>
    public static Icon Sportsball => Sportsballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sportsball", "e44b");
    private static Icon? SprayCanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spray-can?f=classic&amp;s=light">Spray Can</a>
    /// </summary>
    public static Icon SprayCan => SprayCanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spray-can", "f5bd");
    private static Icon? SprayCanSparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spray-can-sparkles?f=classic&amp;s=light">Spray Can Sparkles</a>
    /// </summary>
    public static Icon SprayCanSparkles => SprayCanSparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "spray-can-sparkles", "f5d0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/spray-can-sparkles?f=classic&amp;s=light">Spray Can Sparkles</a>
    /// </summary>
    public static Icon AirFreshener => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SprayCanSparkles;
    private static Icon? Sprinklerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sprinkler?f=classic&amp;s=light">Sprinkler</a>
    /// </summary>
    public static Icon Sprinkler => Sprinklerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sprinkler", "e035");
    private static Icon? SprinklerCeilingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sprinkler-ceiling?f=classic&amp;s=light">Sprinkler Ceiling</a>
    /// </summary>
    public static Icon SprinklerCeiling => SprinklerCeilingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sprinkler-ceiling", "e44c");
    private static Icon? Squaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square?f=classic&amp;s=light">Square</a>
    /// </summary>
    public static Icon Square => Squaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "square", "f0c8");
    private static Icon? Square0f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-0?f=classic&amp;s=light">Square 0</a>
    /// </summary>
    public static Icon Square0 => Square0f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-0", "e255");
    private static Icon? Square1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-1?f=classic&amp;s=light">Square 1</a>
    /// </summary>
    public static Icon Square1 => Square1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-1", "e256");
    private static Icon? Square2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-2?f=classic&amp;s=light">Square 2</a>
    /// </summary>
    public static Icon Square2 => Square2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-2", "e257");
    private static Icon? Square3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-3?f=classic&amp;s=light">Square 3</a>
    /// </summary>
    public static Icon Square3 => Square3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-3", "e258");
    private static Icon? Square4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-4?f=classic&amp;s=light">Square 4</a>
    /// </summary>
    public static Icon Square4 => Square4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-4", "e259");
    private static Icon? Square5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-5?f=classic&amp;s=light">Square 5</a>
    /// </summary>
    public static Icon Square5 => Square5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-5", "e25a");
    private static Icon? Square6f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-6?f=classic&amp;s=light">Square 6</a>
    /// </summary>
    public static Icon Square6 => Square6f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-6", "e25b");
    private static Icon? Square7f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-7?f=classic&amp;s=light">Square 7</a>
    /// </summary>
    public static Icon Square7 => Square7f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-7", "e25c");
    private static Icon? Square8f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-8?f=classic&amp;s=light">Square 8</a>
    /// </summary>
    public static Icon Square8 => Square8f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-8", "e25d");
    private static Icon? Square9f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-9?f=classic&amp;s=light">Square 9</a>
    /// </summary>
    public static Icon Square9 => Square9f ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-9", "e25e");
    private static Icon? SquareAf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-a?f=classic&amp;s=light">Square A</a>
    /// </summary>
    public static Icon SquareA => SquareAf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-a", "e25f");
    private static Icon? SquareALockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-a-lock?f=classic&amp;s=light">Square A Lock</a>
    /// </summary>
    public static Icon SquareALock => SquareALockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-a-lock", "e44d");
    private static Icon? SquareAmpersandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-ampersand?f=classic&amp;s=light">Square Ampersand</a>
    /// </summary>
    public static Icon SquareAmpersand => SquareAmpersandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-ampersand", "e260");
    private static Icon? SquareArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-down?f=classic&amp;s=light">Square Arrow Down</a>
    /// </summary>
    public static Icon SquareArrowDown => SquareArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-down", "f339");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-down?f=classic&amp;s=light">Square Arrow Down</a>
    /// </summary>
    public static Icon ArrowSquareDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareArrowDown;
    private static Icon? SquareArrowDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-down-left?f=classic&amp;s=light">Square Arrow Down Left</a>
    /// </summary>
    public static Icon SquareArrowDownLeft => SquareArrowDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-down-left", "e261");
    private static Icon? SquareArrowDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-down-right?f=classic&amp;s=light">Square Arrow Down Right</a>
    /// </summary>
    public static Icon SquareArrowDownRight => SquareArrowDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-down-right", "e262");
    private static Icon? SquareArrowLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-left?f=classic&amp;s=light">Square Arrow Left</a>
    /// </summary>
    public static Icon SquareArrowLeft => SquareArrowLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-left", "f33a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-left?f=classic&amp;s=light">Square Arrow Left</a>
    /// </summary>
    public static Icon ArrowSquareLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareArrowLeft;
    private static Icon? SquareArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-right?f=classic&amp;s=light">Square Arrow Right</a>
    /// </summary>
    public static Icon SquareArrowRight => SquareArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-right", "f33b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-right?f=classic&amp;s=light">Square Arrow Right</a>
    /// </summary>
    public static Icon ArrowSquareRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareArrowRight;
    private static Icon? SquareArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-up?f=classic&amp;s=light">Square Arrow Up</a>
    /// </summary>
    public static Icon SquareArrowUp => SquareArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-up", "f33c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-up?f=classic&amp;s=light">Square Arrow Up</a>
    /// </summary>
    public static Icon ArrowSquareUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareArrowUp;
    private static Icon? SquareArrowUpLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-up-left?f=classic&amp;s=light">Square Arrow Up Left</a>
    /// </summary>
    public static Icon SquareArrowUpLeft => SquareArrowUpLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-up-left", "e263");
    private static Icon? SquareArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-up-right?f=classic&amp;s=light">Square Arrow Up Right</a>
    /// </summary>
    public static Icon SquareArrowUpRight => SquareArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-arrow-up-right", "f14c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-arrow-up-right?f=classic&amp;s=light">Square Arrow Up Right</a>
    /// </summary>
    public static Icon ExternalLinkSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareArrowUpRight;
    private static Icon? SquareBf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-b?f=classic&amp;s=light">Square B</a>
    /// </summary>
    public static Icon SquareB => SquareBf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-b", "e264");
    private static Icon? SquareBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-bolt?f=classic&amp;s=light">Square Bolt</a>
    /// </summary>
    public static Icon SquareBolt => SquareBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-bolt", "e265");
    private static Icon? SquareCf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-c?f=classic&amp;s=light">Square C</a>
    /// </summary>
    public static Icon SquareC => SquareCf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-c", "e266");
    private static Icon? SquareCaretDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-down?f=classic&amp;s=light">Square Caret Down</a>
    /// </summary>
    public static Icon SquareCaretDown => SquareCaretDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-caret-down", "f150");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-down?f=classic&amp;s=light">Square Caret Down</a>
    /// </summary>
    public static Icon CaretSquareDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareCaretDown;
    private static Icon? SquareCaretLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-left?f=classic&amp;s=light">Square Caret Left</a>
    /// </summary>
    public static Icon SquareCaretLeft => SquareCaretLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-caret-left", "f191");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-left?f=classic&amp;s=light">Square Caret Left</a>
    /// </summary>
    public static Icon CaretSquareLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareCaretLeft;
    private static Icon? SquareCaretRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-right?f=classic&amp;s=light">Square Caret Right</a>
    /// </summary>
    public static Icon SquareCaretRight => SquareCaretRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-caret-right", "f152");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-right?f=classic&amp;s=light">Square Caret Right</a>
    /// </summary>
    public static Icon CaretSquareRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareCaretRight;
    private static Icon? SquareCaretUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-up?f=classic&amp;s=light">Square Caret Up</a>
    /// </summary>
    public static Icon SquareCaretUp => SquareCaretUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-caret-up", "f151");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-caret-up?f=classic&amp;s=light">Square Caret Up</a>
    /// </summary>
    public static Icon CaretSquareUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareCaretUp;
    private static Icon? SquareCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-check?f=classic&amp;s=light">Square Check</a>
    /// </summary>
    public static Icon SquareCheck => SquareCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-check", "f14a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-check?f=classic&amp;s=light">Square Check</a>
    /// </summary>
    public static Icon CheckSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareCheck;
    private static Icon? SquareChevronDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-down?f=classic&amp;s=light">Square Chevron Down</a>
    /// </summary>
    public static Icon SquareChevronDown => SquareChevronDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-chevron-down", "f329");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-down?f=classic&amp;s=light">Square Chevron Down</a>
    /// </summary>
    public static Icon ChevronSquareDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareChevronDown;
    private static Icon? SquareChevronLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-left?f=classic&amp;s=light">Square Chevron Left</a>
    /// </summary>
    public static Icon SquareChevronLeft => SquareChevronLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-chevron-left", "f32a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-left?f=classic&amp;s=light">Square Chevron Left</a>
    /// </summary>
    public static Icon ChevronSquareLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareChevronLeft;
    private static Icon? SquareChevronRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-right?f=classic&amp;s=light">Square Chevron Right</a>
    /// </summary>
    public static Icon SquareChevronRight => SquareChevronRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-chevron-right", "f32b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-right?f=classic&amp;s=light">Square Chevron Right</a>
    /// </summary>
    public static Icon ChevronSquareRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareChevronRight;
    private static Icon? SquareChevronUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-up?f=classic&amp;s=light">Square Chevron Up</a>
    /// </summary>
    public static Icon SquareChevronUp => SquareChevronUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-chevron-up", "f32c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-chevron-up?f=classic&amp;s=light">Square Chevron Up</a>
    /// </summary>
    public static Icon ChevronSquareUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareChevronUp;
    private static Icon? SquareCodef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-code?f=classic&amp;s=light">Square Code</a>
    /// </summary>
    public static Icon SquareCode => SquareCodef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-code", "e267");
    private static Icon? SquareDf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-d?f=classic&amp;s=light">Square D</a>
    /// </summary>
    public static Icon SquareD => SquareDf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-d", "e268");
    private static Icon? SquareDashedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-dashed?f=classic&amp;s=light">Square Dashed</a>
    /// </summary>
    public static Icon SquareDashed => SquareDashedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-dashed", "e269");
    private static Icon? SquareDashedCirclePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-dashed-circle-plus?f=classic&amp;s=light">Square Dashed Circle Plus</a>
    /// </summary>
    public static Icon SquareDashedCirclePlus => SquareDashedCirclePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-dashed-circle-plus", "e5c2");
    private static Icon? SquareDividef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-divide?f=classic&amp;s=light">Square Divide</a>
    /// </summary>
    public static Icon SquareDivide => SquareDividef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-divide", "e26a");
    private static Icon? SquareDollarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-dollar?f=classic&amp;s=light">Square Dollar</a>
    /// </summary>
    public static Icon SquareDollar => SquareDollarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-dollar", "f2e9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-dollar?f=classic&amp;s=light">Square Dollar</a>
    /// </summary>
    public static Icon DollarSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareDollar;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-dollar?f=classic&amp;s=light">Square Dollar</a>
    /// </summary>
    public static Icon UsdSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareDollar;
    private static Icon? SquareDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-down?f=classic&amp;s=light">Square Down</a>
    /// </summary>
    public static Icon SquareDown => SquareDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-down", "f350");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-down?f=classic&amp;s=light">Square Down</a>
    /// </summary>
    public static Icon ArrowAltSquareDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareDown;
    private static Icon? SquareDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-down-left?f=classic&amp;s=light">Square Down Left</a>
    /// </summary>
    public static Icon SquareDownLeft => SquareDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-down-left", "e26b");
    private static Icon? SquareDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-down-right?f=classic&amp;s=light">Square Down Right</a>
    /// </summary>
    public static Icon SquareDownRight => SquareDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-down-right", "e26c");
    private static Icon? SquareEf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-e?f=classic&amp;s=light">Square E</a>
    /// </summary>
    public static Icon SquareE => SquareEf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-e", "e26d");
    private static Icon? SquareEllipsisf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-ellipsis?f=classic&amp;s=light">Square Ellipsis</a>
    /// </summary>
    public static Icon SquareEllipsis => SquareEllipsisf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-ellipsis", "e26e");
    private static Icon? SquareEllipsisVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-ellipsis-vertical?f=classic&amp;s=light">Square Ellipsis Vertical</a>
    /// </summary>
    public static Icon SquareEllipsisVertical => SquareEllipsisVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-ellipsis-vertical", "e26f");
    private static Icon? SquareEnvelopef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-envelope?f=classic&amp;s=light">Square Envelope</a>
    /// </summary>
    public static Icon SquareEnvelope => SquareEnvelopef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-envelope", "f199");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-envelope?f=classic&amp;s=light">Square Envelope</a>
    /// </summary>
    public static Icon EnvelopeSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareEnvelope;
    private static Icon? SquareExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-exclamation?f=classic&amp;s=light">Square Exclamation</a>
    /// </summary>
    public static Icon SquareExclamation => SquareExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-exclamation", "f321");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-exclamation?f=classic&amp;s=light">Square Exclamation</a>
    /// </summary>
    public static Icon ExclamationSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareExclamation;
    private static Icon? SquareFf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-f?f=classic&amp;s=light">Square F</a>
    /// </summary>
    public static Icon SquareF => SquareFf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-f", "e270");
    private static Icon? SquareFragilef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-fragile?f=classic&amp;s=light">Square Fragile</a>
    /// </summary>
    public static Icon SquareFragile => SquareFragilef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-fragile", "f49b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-fragile?f=classic&amp;s=light">Square Fragile</a>
    /// </summary>
    public static Icon BoxFragile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareFragile;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-fragile?f=classic&amp;s=light">Square Fragile</a>
    /// </summary>
    public static Icon SquareWineGlassCrack => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareFragile;
    private static Icon? SquareFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-full?f=classic&amp;s=light">Square Full</a>
    /// </summary>
    public static Icon SquareFull => SquareFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-full", "f45c");
    private static Icon? SquareGf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-g?f=classic&amp;s=light">Square G</a>
    /// </summary>
    public static Icon SquareG => SquareGf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-g", "e271");
    private static Icon? SquareHf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-h?f=classic&amp;s=light">Square H</a>
    /// </summary>
    public static Icon SquareH => SquareHf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-h", "f0fd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-h?f=classic&amp;s=light">Square H</a>
    /// </summary>
    public static Icon HSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareH;
    private static Icon? SquareHeartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-heart?f=classic&amp;s=light">Square Heart</a>
    /// </summary>
    public static Icon SquareHeart => SquareHeartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-heart", "f4c8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-heart?f=classic&amp;s=light">Square Heart</a>
    /// </summary>
    public static Icon HeartSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareHeart;
    private static Icon? SquareIf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-i?f=classic&amp;s=light">Square I</a>
    /// </summary>
    public static Icon SquareI => SquareIf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-i", "e272");
    private static Icon? SquareInfof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-info?f=classic&amp;s=light">Square Info</a>
    /// </summary>
    public static Icon SquareInfo => SquareInfof ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-info", "f30f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-info?f=classic&amp;s=light">Square Info</a>
    /// </summary>
    public static Icon InfoSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareInfo;
    private static Icon? SquareJf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-j?f=classic&amp;s=light">Square J</a>
    /// </summary>
    public static Icon SquareJ => SquareJf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-j", "e273");
    private static Icon? SquareKf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-k?f=classic&amp;s=light">Square K</a>
    /// </summary>
    public static Icon SquareK => SquareKf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-k", "e274");
    private static Icon? SquareKanbanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-kanban?f=classic&amp;s=light">Square Kanban</a>
    /// </summary>
    public static Icon SquareKanban => SquareKanbanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-kanban", "e488");
    private static Icon? SquareLf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-l?f=classic&amp;s=light">Square L</a>
    /// </summary>
    public static Icon SquareL => SquareLf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-l", "e275");
    private static Icon? SquareLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-left?f=classic&amp;s=light">Square Left</a>
    /// </summary>
    public static Icon SquareLeft => SquareLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-left", "f351");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-left?f=classic&amp;s=light">Square Left</a>
    /// </summary>
    public static Icon ArrowAltSquareLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareLeft;
    private static Icon? SquareListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-list?f=classic&amp;s=light">Square List</a>
    /// </summary>
    public static Icon SquareList => SquareListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-list", "e489");
    private static Icon? SquareMf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-m?f=classic&amp;s=light">Square M</a>
    /// </summary>
    public static Icon SquareM => SquareMf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-m", "e276");
    private static Icon? SquareMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-minus?f=classic&amp;s=light">Square Minus</a>
    /// </summary>
    public static Icon SquareMinus => SquareMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-minus", "f146");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-minus?f=classic&amp;s=light">Square Minus</a>
    /// </summary>
    public static Icon MinusSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareMinus;
    private static Icon? SquareNf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-n?f=classic&amp;s=light">Square N</a>
    /// </summary>
    public static Icon SquareN => SquareNf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-n", "e277");
    private static Icon? SquareNfif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-nfi?f=classic&amp;s=light">Square Nfi</a>
    /// </summary>
    public static Icon SquareNfi => SquareNfif ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-nfi", "e576");
    private static Icon? SquareOf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-o?f=classic&amp;s=light">Square O</a>
    /// </summary>
    public static Icon SquareO => SquareOf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-o", "e278");
    private static Icon? SquarePf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-p?f=classic&amp;s=light">Square P</a>
    /// </summary>
    public static Icon SquareP => SquarePf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-p", "e279");
    private static Icon? SquareParkingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-parking?f=classic&amp;s=light">Square Parking</a>
    /// </summary>
    public static Icon SquareParking => SquareParkingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-parking", "f540");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-parking?f=classic&amp;s=light">Square Parking</a>
    /// </summary>
    public static Icon Parking => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareParking;
    private static Icon? SquareParkingSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-parking-slash?f=classic&amp;s=light">Square Parking Slash</a>
    /// </summary>
    public static Icon SquareParkingSlash => SquareParkingSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-parking-slash", "f617");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-parking-slash?f=classic&amp;s=light">Square Parking Slash</a>
    /// </summary>
    public static Icon ParkingSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareParkingSlash;
    private static Icon? SquarePenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-pen?f=classic&amp;s=light">Square Pen</a>
    /// </summary>
    public static Icon SquarePen => SquarePenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-pen", "f14b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-pen?f=classic&amp;s=light">Square Pen</a>
    /// </summary>
    public static Icon PenSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePen;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-pen?f=classic&amp;s=light">Square Pen</a>
    /// </summary>
    public static Icon PencilSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePen;
    private static Icon? SquarePersonConfinedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-person-confined?f=classic&amp;s=light">Square Person Confined</a>
    /// </summary>
    public static Icon SquarePersonConfined => SquarePersonConfinedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-person-confined", "e577");
    private static Icon? SquarePhonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-phone?f=classic&amp;s=light">Square Phone</a>
    /// </summary>
    public static Icon SquarePhone => SquarePhonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-phone", "f098");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-phone?f=classic&amp;s=light">Square Phone</a>
    /// </summary>
    public static Icon PhoneSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePhone;
    private static Icon? SquarePhoneFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-phone-flip?f=classic&amp;s=light">Square Phone Flip</a>
    /// </summary>
    public static Icon SquarePhoneFlip => SquarePhoneFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-phone-flip", "f87b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-phone-flip?f=classic&amp;s=light">Square Phone Flip</a>
    /// </summary>
    public static Icon PhoneSquareAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePhoneFlip;
    private static Icon? SquarePhoneHangupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-phone-hangup?f=classic&amp;s=light">Square Phone Hangup</a>
    /// </summary>
    public static Icon SquarePhoneHangup => SquarePhoneHangupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-phone-hangup", "e27a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-phone-hangup?f=classic&amp;s=light">Square Phone Hangup</a>
    /// </summary>
    public static Icon PhoneSquareDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePhoneHangup;
    private static Icon? SquarePlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-plus?f=classic&amp;s=light">Square Plus</a>
    /// </summary>
    public static Icon SquarePlus => SquarePlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-plus", "f0fe");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-plus?f=classic&amp;s=light">Square Plus</a>
    /// </summary>
    public static Icon PlusSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePlus;
    private static Icon? SquarePollHorizontalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-poll-horizontal?f=classic&amp;s=light">Square Poll Horizontal</a>
    /// </summary>
    public static Icon SquarePollHorizontal => SquarePollHorizontalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-poll-horizontal", "f682");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-poll-horizontal?f=classic&amp;s=light">Square Poll Horizontal</a>
    /// </summary>
    public static Icon PollH => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePollHorizontal;
    private static Icon? SquarePollVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-poll-vertical?f=classic&amp;s=light">Square Poll Vertical</a>
    /// </summary>
    public static Icon SquarePollVertical => SquarePollVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-poll-vertical", "f681");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-poll-vertical?f=classic&amp;s=light">Square Poll Vertical</a>
    /// </summary>
    public static Icon Poll => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquarePollVertical;
    private static Icon? SquareQf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-q?f=classic&amp;s=light">Square Q</a>
    /// </summary>
    public static Icon SquareQ => SquareQf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-q", "e27b");
    private static Icon? SquareQuartersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-quarters?f=classic&amp;s=light">Square Quarters</a>
    /// </summary>
    public static Icon SquareQuarters => SquareQuartersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-quarters", "e44e");
    private static Icon? SquareQuestionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-question?f=classic&amp;s=light">Square Question</a>
    /// </summary>
    public static Icon SquareQuestion => SquareQuestionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-question", "f2fd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-question?f=classic&amp;s=light">Square Question</a>
    /// </summary>
    public static Icon QuestionSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareQuestion;
    private static Icon? SquareQuotef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-quote?f=classic&amp;s=light">Square Quote</a>
    /// </summary>
    public static Icon SquareQuote => SquareQuotef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-quote", "e329");
    private static Icon? SquareRf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-r?f=classic&amp;s=light">Square R</a>
    /// </summary>
    public static Icon SquareR => SquareRf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-r", "e27c");
    private static Icon? SquareRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-right?f=classic&amp;s=light">Square Right</a>
    /// </summary>
    public static Icon SquareRight => SquareRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-right", "f352");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-right?f=classic&amp;s=light">Square Right</a>
    /// </summary>
    public static Icon ArrowAltSquareRight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareRight;
    private static Icon? SquareRingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-ring?f=classic&amp;s=light">Square Ring</a>
    /// </summary>
    public static Icon SquareRing => SquareRingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-ring", "e44f");
    private static Icon? SquareRootf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-root?f=classic&amp;s=light">Square Root</a>
    /// </summary>
    public static Icon SquareRoot => SquareRootf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-root", "f697");
    private static Icon? SquareRootVariablef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-root-variable?f=classic&amp;s=light">Square Root Variable</a>
    /// </summary>
    public static Icon SquareRootVariable => SquareRootVariablef ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-root-variable", "f698");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-root-variable?f=classic&amp;s=light">Square Root Variable</a>
    /// </summary>
    public static Icon SquareRootAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareRootVariable;
    private static Icon? SquareRssf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-rss?f=classic&amp;s=light">Square Rss</a>
    /// </summary>
    public static Icon SquareRss => SquareRssf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-rss", "f143");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-rss?f=classic&amp;s=light">Square Rss</a>
    /// </summary>
    public static Icon RssSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareRss;
    private static Icon? SquareSf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-s?f=classic&amp;s=light">Square S</a>
    /// </summary>
    public static Icon SquareS => SquareSf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-s", "e27d");
    private static Icon? SquareShareNodesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-share-nodes?f=classic&amp;s=light">Square Share Nodes</a>
    /// </summary>
    public static Icon SquareShareNodes => SquareShareNodesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-share-nodes", "f1e1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-share-nodes?f=classic&amp;s=light">Square Share Nodes</a>
    /// </summary>
    public static Icon ShareAltSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareShareNodes;
    private static Icon? SquareSlidersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-sliders?f=classic&amp;s=light">Square Sliders</a>
    /// </summary>
    public static Icon SquareSliders => SquareSlidersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-sliders", "f3f0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-sliders?f=classic&amp;s=light">Square Sliders</a>
    /// </summary>
    public static Icon SlidersHSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareSliders;
    private static Icon? SquareSlidersVerticalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-sliders-vertical?f=classic&amp;s=light">Square Sliders Vertical</a>
    /// </summary>
    public static Icon SquareSlidersVertical => SquareSlidersVerticalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-sliders-vertical", "f3f2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-sliders-vertical?f=classic&amp;s=light">Square Sliders Vertical</a>
    /// </summary>
    public static Icon SlidersVSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareSlidersVertical;
    private static Icon? SquareSmallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-small?f=classic&amp;s=light">Square Small</a>
    /// </summary>
    public static Icon SquareSmall => SquareSmallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-small", "e27e");
    private static Icon? SquareStarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-star?f=classic&amp;s=light">Square Star</a>
    /// </summary>
    public static Icon SquareStar => SquareStarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-star", "e27f");
    private static Icon? SquareTf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-t?f=classic&amp;s=light">Square T</a>
    /// </summary>
    public static Icon SquareT => SquareTf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-t", "e280");
    private static Icon? SquareTerminalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-terminal?f=classic&amp;s=light">Square Terminal</a>
    /// </summary>
    public static Icon SquareTerminal => SquareTerminalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-terminal", "e32a");
    private static Icon? SquareThisWayUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-this-way-up?f=classic&amp;s=light">Square This Way Up</a>
    /// </summary>
    public static Icon SquareThisWayUp => SquareThisWayUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-this-way-up", "f49f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-this-way-up?f=classic&amp;s=light">Square This Way Up</a>
    /// </summary>
    public static Icon BoxUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareThisWayUp;
    private static Icon? SquareUf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-u?f=classic&amp;s=light">Square U</a>
    /// </summary>
    public static Icon SquareU => SquareUf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-u", "e281");
    private static Icon? SquareUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-up?f=classic&amp;s=light">Square Up</a>
    /// </summary>
    public static Icon SquareUp => SquareUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-up", "f353");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-up?f=classic&amp;s=light">Square Up</a>
    /// </summary>
    public static Icon ArrowAltSquareUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareUp;
    private static Icon? SquareUpLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-up-left?f=classic&amp;s=light">Square Up Left</a>
    /// </summary>
    public static Icon SquareUpLeft => SquareUpLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-up-left", "e282");
    private static Icon? SquareUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-up-right?f=classic&amp;s=light">Square Up Right</a>
    /// </summary>
    public static Icon SquareUpRight => SquareUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-up-right", "f360");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-up-right?f=classic&amp;s=light">Square Up Right</a>
    /// </summary>
    public static Icon ExternalLinkSquareAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareUpRight;
    private static Icon? SquareUserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-user?f=classic&amp;s=light">Square User</a>
    /// </summary>
    public static Icon SquareUser => SquareUserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-user", "e283");
    private static Icon? SquareVf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-v?f=classic&amp;s=light">Square V</a>
    /// </summary>
    public static Icon SquareV => SquareVf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-v", "e284");
    private static Icon? SquareVirusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-virus?f=classic&amp;s=light">Square Virus</a>
    /// </summary>
    public static Icon SquareVirus => SquareVirusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-virus", "e578");
    private static Icon? SquareWf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-w?f=classic&amp;s=light">Square W</a>
    /// </summary>
    public static Icon SquareW => SquareWf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-w", "e285");
    private static Icon? SquareXf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-x?f=classic&amp;s=light">Square X</a>
    /// </summary>
    public static Icon SquareX => SquareXf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-x", "e286");
    private static Icon? SquareXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-xmark?f=classic&amp;s=light">Square Xmark</a>
    /// </summary>
    public static Icon SquareXmark => SquareXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-xmark", "f2d3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-xmark?f=classic&amp;s=light">Square Xmark</a>
    /// </summary>
    public static Icon TimesSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-xmark?f=classic&amp;s=light">Square Xmark</a>
    /// </summary>
    public static Icon XmarkSquare => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SquareXmark;
    private static Icon? SquareYf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-y?f=classic&amp;s=light">Square Y</a>
    /// </summary>
    public static Icon SquareY => SquareYf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-y", "e287");
    private static Icon? SquareZf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/square-z?f=classic&amp;s=light">Square Z</a>
    /// </summary>
    public static Icon SquareZ => SquareZf ??= new Icon(IconFamily.Classic, IconStyle.Light, "square-z", "e288");
    private static Icon? Squidf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/squid?f=classic&amp;s=light">Squid</a>
    /// </summary>
    public static Icon Squid => Squidf ??= new Icon(IconFamily.Classic, IconStyle.Light, "squid", "e450");
    private static Icon? Squirrelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/squirrel?f=classic&amp;s=light">Squirrel</a>
    /// </summary>
    public static Icon Squirrel => Squirrelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "squirrel", "f71a");
    private static Icon? Stafff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/staff?f=classic&amp;s=light">Staff</a>
    /// </summary>
    public static Icon Staff => Stafff ??= new Icon(IconFamily.Classic, IconStyle.Light, "staff", "f71b");
    private static Icon? StaffSnakef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/staff-snake?f=classic&amp;s=light">Staff Snake</a>
    /// </summary>
    public static Icon StaffSnake => StaffSnakef ??= new Icon(IconFamily.Classic, IconStyle.Light, "staff-snake", "e579");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/staff-snake?f=classic&amp;s=light">Staff Snake</a>
    /// </summary>
    public static Icon RodAsclepius => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StaffSnake;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/staff-snake?f=classic&amp;s=light">Staff Snake</a>
    /// </summary>
    public static Icon RodSnake => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StaffSnake;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/staff-snake?f=classic&amp;s=light">Staff Snake</a>
    /// </summary>
    public static Icon StaffAesculapius => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StaffSnake;
    private static Icon? Stairsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stairs?f=classic&amp;s=light">Stairs</a>
    /// </summary>
    public static Icon Stairs => Stairsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stairs", "e289");
    private static Icon? Stampf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stamp?f=classic&amp;s=light">Stamp</a>
    /// </summary>
    public static Icon Stamp => Stampf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stamp", "f5bf");
    private static Icon? StandardDefinitionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/standard-definition?f=classic&amp;s=light">Standard Definition</a>
    /// </summary>
    public static Icon StandardDefinition => StandardDefinitionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "standard-definition", "e28a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/standard-definition?f=classic&amp;s=light">Standard Definition</a>
    /// </summary>
    public static Icon RectangleSd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StandardDefinition;
    private static Icon? Staplerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stapler?f=classic&amp;s=light">Stapler</a>
    /// </summary>
    public static Icon Stapler => Staplerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stapler", "e5af");
    private static Icon? Starf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star?f=classic&amp;s=light">Star</a>
    /// </summary>
    public static Icon Star => Starf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star", "f005");
    private static Icon? StarAndCrescentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-and-crescent?f=classic&amp;s=light">Star And Crescent</a>
    /// </summary>
    public static Icon StarAndCrescent => StarAndCrescentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-and-crescent", "f699");
    private static Icon? StarChristmasf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-christmas?f=classic&amp;s=light">Star Christmas</a>
    /// </summary>
    public static Icon StarChristmas => StarChristmasf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-christmas", "f7d4");
    private static Icon? StarExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-exclamation?f=classic&amp;s=light">Star Exclamation</a>
    /// </summary>
    public static Icon StarExclamation => StarExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-exclamation", "f2f3");
    private static Icon? StarHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-half?f=classic&amp;s=light">Star Half</a>
    /// </summary>
    public static Icon StarHalf => StarHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-half", "f089");
    private static Icon? StarHalfStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-half-stroke?f=classic&amp;s=light">Star Half Stroke</a>
    /// </summary>
    public static Icon StarHalfStroke => StarHalfStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-half-stroke", "f5c0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-half-stroke?f=classic&amp;s=light">Star Half Stroke</a>
    /// </summary>
    public static Icon StarHalfAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StarHalfStroke;
    private static Icon? StarOfDavidf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-of-david?f=classic&amp;s=light">Star Of David</a>
    /// </summary>
    public static Icon StarOfDavid => StarOfDavidf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-of-david", "f69a");
    private static Icon? StarOfLifef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-of-life?f=classic&amp;s=light">Star Of Life</a>
    /// </summary>
    public static Icon StarOfLife => StarOfLifef ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-of-life", "f621");
    private static Icon? StarSharpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-sharp?f=classic&amp;s=light">Star Sharp</a>
    /// </summary>
    public static Icon StarSharp => StarSharpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-sharp", "e28b");
    private static Icon? StarSharpHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-sharp-half?f=classic&amp;s=light">Star Sharp Half</a>
    /// </summary>
    public static Icon StarSharpHalf => StarSharpHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-sharp-half", "e28c");
    private static Icon? StarSharpHalfStrokef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-sharp-half-stroke?f=classic&amp;s=light">Star Sharp Half Stroke</a>
    /// </summary>
    public static Icon StarSharpHalfStroke => StarSharpHalfStrokef ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-sharp-half-stroke", "e28d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-sharp-half-stroke?f=classic&amp;s=light">Star Sharp Half Stroke</a>
    /// </summary>
    public static Icon StarSharpHalfAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StarSharpHalfStroke;
    private static Icon? StarShootingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/star-shooting?f=classic&amp;s=light">Star Shooting</a>
    /// </summary>
    public static Icon StarShooting => StarShootingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "star-shooting", "e036");
    private static Icon? Starfighterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starfighter?f=classic&amp;s=light">Starfighter</a>
    /// </summary>
    public static Icon Starfighter => Starfighterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "starfighter", "e037");
    private static Icon? StarfighterTwinIonEnginef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starfighter-twin-ion-engine?f=classic&amp;s=light">Starfighter Twin Ion Engine</a>
    /// </summary>
    public static Icon StarfighterTwinIonEngine => StarfighterTwinIonEnginef ??= new Icon(IconFamily.Classic, IconStyle.Light, "starfighter-twin-ion-engine", "e038");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starfighter-twin-ion-engine?f=classic&amp;s=light">Starfighter Twin Ion Engine</a>
    /// </summary>
    public static Icon StarfighterAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StarfighterTwinIonEngine;
    private static Icon? StarfighterTwinIonEngineAdvancedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starfighter-twin-ion-engine-advanced?f=classic&amp;s=light">Starfighter Twin Ion Engine Advanced</a>
    /// </summary>
    public static Icon StarfighterTwinIonEngineAdvanced => StarfighterTwinIonEngineAdvancedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "starfighter-twin-ion-engine-advanced", "e28e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starfighter-twin-ion-engine-advanced?f=classic&amp;s=light">Starfighter Twin Ion Engine Advanced</a>
    /// </summary>
    public static Icon StarfighterAltAdvanced => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.StarfighterTwinIonEngineAdvanced;
    private static Icon? Starsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stars?f=classic&amp;s=light">Stars</a>
    /// </summary>
    public static Icon Stars => Starsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stars", "f762");
    private static Icon? Starshipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starship?f=classic&amp;s=light">Starship</a>
    /// </summary>
    public static Icon Starship => Starshipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "starship", "e039");
    private static Icon? StarshipFreighterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/starship-freighter?f=classic&amp;s=light">Starship Freighter</a>
    /// </summary>
    public static Icon StarshipFreighter => StarshipFreighterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "starship-freighter", "e03a");
    private static Icon? Steakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/steak?f=classic&amp;s=light">Steak</a>
    /// </summary>
    public static Icon Steak => Steakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "steak", "f824");
    private static Icon? SteeringWheelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/steering-wheel?f=classic&amp;s=light">Steering Wheel</a>
    /// </summary>
    public static Icon SteeringWheel => SteeringWheelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "steering-wheel", "f622");
    private static Icon? SterlingSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sterling-sign?f=classic&amp;s=light">Sterling Sign</a>
    /// </summary>
    public static Icon SterlingSign => SterlingSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sterling-sign", "f154");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sterling-sign?f=classic&amp;s=light">Sterling Sign</a>
    /// </summary>
    public static Icon Gbp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SterlingSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sterling-sign?f=classic&amp;s=light">Sterling Sign</a>
    /// </summary>
    public static Icon PoundSign => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SterlingSign;
    private static Icon? Stethoscopef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stethoscope?f=classic&amp;s=light">Stethoscope</a>
    /// </summary>
    public static Icon Stethoscope => Stethoscopef ??= new Icon(IconFamily.Classic, IconStyle.Light, "stethoscope", "f0f1");
    private static Icon? Stockingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stocking?f=classic&amp;s=light">Stocking</a>
    /// </summary>
    public static Icon Stocking => Stockingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stocking", "f7d5");
    private static Icon? Stomachf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stomach?f=classic&amp;s=light">Stomach</a>
    /// </summary>
    public static Icon Stomach => Stomachf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stomach", "f623");
    private static Icon? Stopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stop?f=classic&amp;s=light">Stop</a>
    /// </summary>
    public static Icon Stop => Stopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stop", "f04d");
    private static Icon? Stopwatchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stopwatch?f=classic&amp;s=light">Stopwatch</a>
    /// </summary>
    public static Icon Stopwatch => Stopwatchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stopwatch", "f2f2");
    private static Icon? Stopwatch20f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stopwatch-20?f=classic&amp;s=light">Stopwatch 20</a>
    /// </summary>
    public static Icon Stopwatch20 => Stopwatch20f ??= new Icon(IconFamily.Classic, IconStyle.Light, "stopwatch-20", "e06f");
    private static Icon? Storef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/store?f=classic&amp;s=light">Store</a>
    /// </summary>
    public static Icon Store => Storef ??= new Icon(IconFamily.Classic, IconStyle.Light, "store", "f54e");
    private static Icon? StoreLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/store-lock?f=classic&amp;s=light">Store Lock</a>
    /// </summary>
    public static Icon StoreLock => StoreLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "store-lock", "e4a6");
    private static Icon? StoreSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/store-slash?f=classic&amp;s=light">Store Slash</a>
    /// </summary>
    public static Icon StoreSlash => StoreSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "store-slash", "e071");
    private static Icon? Strawberryf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/strawberry?f=classic&amp;s=light">Strawberry</a>
    /// </summary>
    public static Icon Strawberry => Strawberryf ??= new Icon(IconFamily.Classic, IconStyle.Light, "strawberry", "e32b");
    private static Icon? StreetViewf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/street-view?f=classic&amp;s=light">Street View</a>
    /// </summary>
    public static Icon StreetView => StreetViewf ??= new Icon(IconFamily.Classic, IconStyle.Light, "street-view", "f21d");
    private static Icon? Stretcherf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stretcher?f=classic&amp;s=light">Stretcher</a>
    /// </summary>
    public static Icon Stretcher => Stretcherf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stretcher", "f825");
    private static Icon? Strikethroughf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/strikethrough?f=classic&amp;s=light">Strikethrough</a>
    /// </summary>
    public static Icon Strikethrough => Strikethroughf ??= new Icon(IconFamily.Classic, IconStyle.Light, "strikethrough", "f0cc");
    private static Icon? Stroopwafelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/stroopwafel?f=classic&amp;s=light">Stroopwafel</a>
    /// </summary>
    public static Icon Stroopwafel => Stroopwafelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "stroopwafel", "f551");
    private static Icon? Subscriptf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/subscript?f=classic&amp;s=light">Subscript</a>
    /// </summary>
    public static Icon Subscript => Subscriptf ??= new Icon(IconFamily.Classic, IconStyle.Light, "subscript", "f12c");
    private static Icon? Subtitlesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/subtitles?f=classic&amp;s=light">Subtitles</a>
    /// </summary>
    public static Icon Subtitles => Subtitlesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "subtitles", "e60f");
    private static Icon? SubtitlesSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/subtitles-slash?f=classic&amp;s=light">Subtitles Slash</a>
    /// </summary>
    public static Icon SubtitlesSlash => SubtitlesSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "subtitles-slash", "e610");
    private static Icon? Suitcasef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/suitcase?f=classic&amp;s=light">Suitcase</a>
    /// </summary>
    public static Icon Suitcase => Suitcasef ??= new Icon(IconFamily.Classic, IconStyle.Light, "suitcase", "f0f2");
    private static Icon? SuitcaseMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/suitcase-medical?f=classic&amp;s=light">Suitcase Medical</a>
    /// </summary>
    public static Icon SuitcaseMedical => SuitcaseMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "suitcase-medical", "f0fa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/suitcase-medical?f=classic&amp;s=light">Suitcase Medical</a>
    /// </summary>
    public static Icon Medkit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SuitcaseMedical;
    private static Icon? SuitcaseRollingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/suitcase-rolling?f=classic&amp;s=light">Suitcase Rolling</a>
    /// </summary>
    public static Icon SuitcaseRolling => SuitcaseRollingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "suitcase-rolling", "f5c1");
    private static Icon? Sunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun?f=classic&amp;s=light">Sun</a>
    /// </summary>
    public static Icon Sun => Sunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sun", "f185");
    private static Icon? SunBrightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun-bright?f=classic&amp;s=light">Sun Bright</a>
    /// </summary>
    public static Icon SunBright => SunBrightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sun-bright", "e28f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun-bright?f=classic&amp;s=light">Sun Bright</a>
    /// </summary>
    public static Icon SunAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SunBright;
    private static Icon? SunCloudf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun-cloud?f=classic&amp;s=light">Sun Cloud</a>
    /// </summary>
    public static Icon SunCloud => SunCloudf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sun-cloud", "f763");
    private static Icon? SunDustf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun-dust?f=classic&amp;s=light">Sun Dust</a>
    /// </summary>
    public static Icon SunDust => SunDustf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sun-dust", "f764");
    private static Icon? SunHazef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun-haze?f=classic&amp;s=light">Sun Haze</a>
    /// </summary>
    public static Icon SunHaze => SunHazef ??= new Icon(IconFamily.Classic, IconStyle.Light, "sun-haze", "f765");
    private static Icon? SunPlantWiltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sun-plant-wilt?f=classic&amp;s=light">Sun Plant Wilt</a>
    /// </summary>
    public static Icon SunPlantWilt => SunPlantWiltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sun-plant-wilt", "e57a");
    private static Icon? Sunglassesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sunglasses?f=classic&amp;s=light">Sunglasses</a>
    /// </summary>
    public static Icon Sunglasses => Sunglassesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sunglasses", "f892");
    private static Icon? Sunrisef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sunrise?f=classic&amp;s=light">Sunrise</a>
    /// </summary>
    public static Icon Sunrise => Sunrisef ??= new Icon(IconFamily.Classic, IconStyle.Light, "sunrise", "f766");
    private static Icon? Sunsetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sunset?f=classic&amp;s=light">Sunset</a>
    /// </summary>
    public static Icon Sunset => Sunsetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sunset", "f767");
    private static Icon? Superscriptf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/superscript?f=classic&amp;s=light">Superscript</a>
    /// </summary>
    public static Icon Superscript => Superscriptf ??= new Icon(IconFamily.Classic, IconStyle.Light, "superscript", "f12b");
    private static Icon? Sushif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sushi?f=classic&amp;s=light">Sushi</a>
    /// </summary>
    public static Icon Sushi => Sushif ??= new Icon(IconFamily.Classic, IconStyle.Light, "sushi", "e48a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sushi?f=classic&amp;s=light">Sushi</a>
    /// </summary>
    public static Icon Nigiri => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Sushi;
    private static Icon? SushiRollf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sushi-roll?f=classic&amp;s=light">Sushi Roll</a>
    /// </summary>
    public static Icon SushiRoll => SushiRollf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sushi-roll", "e48b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sushi-roll?f=classic&amp;s=light">Sushi Roll</a>
    /// </summary>
    public static Icon MakiRoll => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SushiRoll;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sushi-roll?f=classic&amp;s=light">Sushi Roll</a>
    /// </summary>
    public static Icon Makizushi => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.SushiRoll;
    private static Icon? Swapf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/swap?f=classic&amp;s=light">Swap</a>
    /// </summary>
    public static Icon Swap => Swapf ??= new Icon(IconFamily.Classic, IconStyle.Light, "swap", "e609");
    private static Icon? SwapArrowsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/swap-arrows?f=classic&amp;s=light">Swap Arrows</a>
    /// </summary>
    public static Icon SwapArrows => SwapArrowsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "swap-arrows", "e60a");
    private static Icon? Swatchbookf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/swatchbook?f=classic&amp;s=light">Swatchbook</a>
    /// </summary>
    public static Icon Swatchbook => Swatchbookf ??= new Icon(IconFamily.Classic, IconStyle.Light, "swatchbook", "f5c3");
    private static Icon? Swordf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sword?f=classic&amp;s=light">Sword</a>
    /// </summary>
    public static Icon Sword => Swordf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sword", "f71c");
    private static Icon? SwordLaserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sword-laser?f=classic&amp;s=light">Sword Laser</a>
    /// </summary>
    public static Icon SwordLaser => SwordLaserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sword-laser", "e03b");
    private static Icon? SwordLaserAltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/sword-laser-alt?f=classic&amp;s=light">Sword Laser Alt</a>
    /// </summary>
    public static Icon SwordLaserAlt => SwordLaserAltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "sword-laser-alt", "e03c");
    private static Icon? Swordsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/swords?f=classic&amp;s=light">Swords</a>
    /// </summary>
    public static Icon Swords => Swordsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "swords", "f71d");
    private static Icon? SwordsLaserf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/swords-laser?f=classic&amp;s=light">Swords Laser</a>
    /// </summary>
    public static Icon SwordsLaser => SwordsLaserf ??= new Icon(IconFamily.Classic, IconStyle.Light, "swords-laser", "e03d");
    private static Icon? Symbolsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/symbols?f=classic&amp;s=light">Symbols</a>
    /// </summary>
    public static Icon Symbols => Symbolsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "symbols", "f86e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/symbols?f=classic&amp;s=light">Symbols</a>
    /// </summary>
    public static Icon IconsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Symbols;
    private static Icon? Synagoguef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/synagogue?f=classic&amp;s=light">Synagogue</a>
    /// </summary>
    public static Icon Synagogue => Synagoguef ??= new Icon(IconFamily.Classic, IconStyle.Light, "synagogue", "f69b");
    private static Icon? Syringef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/syringe?f=classic&amp;s=light">Syringe</a>
    /// </summary>
    public static Icon Syringe => Syringef ??= new Icon(IconFamily.Classic, IconStyle.Light, "syringe", "f48e");
    private static Icon? Tf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/t?f=classic&amp;s=light">T</a>
    /// </summary>
    public static Icon T => Tf ??= new Icon(IconFamily.Classic, IconStyle.Light, "t", "54");
    private static Icon? TRexf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/t-rex?f=classic&amp;s=light">T Rex</a>
    /// </summary>
    public static Icon TRex => TRexf ??= new Icon(IconFamily.Classic, IconStyle.Light, "t-rex", "e629");
    private static Icon? Tablef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table?f=classic&amp;s=light">Table</a>
    /// </summary>
    public static Icon Table => Tablef ??= new Icon(IconFamily.Classic, IconStyle.Light, "table", "f0ce");
    private static Icon? TableCellsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-cells?f=classic&amp;s=light">Table Cells</a>
    /// </summary>
    public static Icon TableCells => TableCellsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-cells", "f00a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-cells?f=classic&amp;s=light">Table Cells</a>
    /// </summary>
    public static Icon Th => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableCells;
    private static Icon? TableCellsLargef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-cells-large?f=classic&amp;s=light">Table Cells Large</a>
    /// </summary>
    public static Icon TableCellsLarge => TableCellsLargef ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-cells-large", "f009");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-cells-large?f=classic&amp;s=light">Table Cells Large</a>
    /// </summary>
    public static Icon ThLarge => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableCellsLarge;
    private static Icon? TableColumnsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-columns?f=classic&amp;s=light">Table Columns</a>
    /// </summary>
    public static Icon TableColumns => TableColumnsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-columns", "f0db");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-columns?f=classic&amp;s=light">Table Columns</a>
    /// </summary>
    public static Icon Columns => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableColumns;
    private static Icon? TableLayoutf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-layout?f=classic&amp;s=light">Table Layout</a>
    /// </summary>
    public static Icon TableLayout => TableLayoutf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-layout", "e290");
    private static Icon? TableListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-list?f=classic&amp;s=light">Table List</a>
    /// </summary>
    public static Icon TableList => TableListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-list", "f00b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-list?f=classic&amp;s=light">Table List</a>
    /// </summary>
    public static Icon ThList => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableList;
    private static Icon? TablePicnicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-picnic?f=classic&amp;s=light">Table Picnic</a>
    /// </summary>
    public static Icon TablePicnic => TablePicnicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-picnic", "e32d");
    private static Icon? TablePivotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-pivot?f=classic&amp;s=light">Table Pivot</a>
    /// </summary>
    public static Icon TablePivot => TablePivotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-pivot", "e291");
    private static Icon? TableRowsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-rows?f=classic&amp;s=light">Table Rows</a>
    /// </summary>
    public static Icon TableRows => TableRowsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-rows", "e292");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-rows?f=classic&amp;s=light">Table Rows</a>
    /// </summary>
    public static Icon Rows => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableRows;
    private static Icon? TableTennisPaddleBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-tennis-paddle-ball?f=classic&amp;s=light">Table Tennis Paddle Ball</a>
    /// </summary>
    public static Icon TableTennisPaddleBall => TableTennisPaddleBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-tennis-paddle-ball", "f45d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-tennis-paddle-ball?f=classic&amp;s=light">Table Tennis Paddle Ball</a>
    /// </summary>
    public static Icon PingPongPaddleBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableTennisPaddleBall;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-tennis-paddle-ball?f=classic&amp;s=light">Table Tennis Paddle Ball</a>
    /// </summary>
    public static Icon TableTennis => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TableTennisPaddleBall;
    private static Icon? TableTreef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/table-tree?f=classic&amp;s=light">Table Tree</a>
    /// </summary>
    public static Icon TableTree => TableTreef ??= new Icon(IconFamily.Classic, IconStyle.Light, "table-tree", "e293");
    private static Icon? Tabletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet?f=classic&amp;s=light">Tablet</a>
    /// </summary>
    public static Icon Tablet => Tabletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tablet", "f3fb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet?f=classic&amp;s=light">Tablet</a>
    /// </summary>
    public static Icon TabletAndroid => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Tablet;
    private static Icon? TabletButtonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet-button?f=classic&amp;s=light">Tablet Button</a>
    /// </summary>
    public static Icon TabletButton => TabletButtonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tablet-button", "f10a");
    private static Icon? TabletRuggedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet-rugged?f=classic&amp;s=light">Tablet Rugged</a>
    /// </summary>
    public static Icon TabletRugged => TabletRuggedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tablet-rugged", "f48f");
    private static Icon? TabletScreenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet-screen?f=classic&amp;s=light">Tablet Screen</a>
    /// </summary>
    public static Icon TabletScreen => TabletScreenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tablet-screen", "f3fc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet-screen?f=classic&amp;s=light">Tablet Screen</a>
    /// </summary>
    public static Icon TabletAndroidAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TabletScreen;
    private static Icon? TabletScreenButtonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet-screen-button?f=classic&amp;s=light">Tablet Screen Button</a>
    /// </summary>
    public static Icon TabletScreenButton => TabletScreenButtonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tablet-screen-button", "f3fa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablet-screen-button?f=classic&amp;s=light">Tablet Screen Button</a>
    /// </summary>
    public static Icon TabletAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TabletScreenButton;
    private static Icon? Tabletsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tablets?f=classic&amp;s=light">Tablets</a>
    /// </summary>
    public static Icon Tablets => Tabletsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tablets", "f490");
    private static Icon? TachographDigitalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tachograph-digital?f=classic&amp;s=light">Tachograph Digital</a>
    /// </summary>
    public static Icon TachographDigital => TachographDigitalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tachograph-digital", "f566");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tachograph-digital?f=classic&amp;s=light">Tachograph Digital</a>
    /// </summary>
    public static Icon DigitalTachograph => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TachographDigital;
    private static Icon? Tacof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/taco?f=classic&amp;s=light">Taco</a>
    /// </summary>
    public static Icon Taco => Tacof ??= new Icon(IconFamily.Classic, IconStyle.Light, "taco", "f826");
    private static Icon? Tagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tag?f=classic&amp;s=light">Tag</a>
    /// </summary>
    public static Icon Tag => Tagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tag", "f02b");
    private static Icon? Tagsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tags?f=classic&amp;s=light">Tags</a>
    /// </summary>
    public static Icon Tags => Tagsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tags", "f02c");
    private static Icon? Tallyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tally?f=classic&amp;s=light">Tally</a>
    /// </summary>
    public static Icon Tally => Tallyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tally", "f69c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tally?f=classic&amp;s=light">Tally</a>
    /// </summary>
    public static Icon Tally5 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Tally;
    private static Icon? Tally1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tally-1?f=classic&amp;s=light">Tally 1</a>
    /// </summary>
    public static Icon Tally1 => Tally1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "tally-1", "e294");
    private static Icon? Tally2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tally-2?f=classic&amp;s=light">Tally 2</a>
    /// </summary>
    public static Icon Tally2 => Tally2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "tally-2", "e295");
    private static Icon? Tally3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tally-3?f=classic&amp;s=light">Tally 3</a>
    /// </summary>
    public static Icon Tally3 => Tally3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "tally-3", "e296");
    private static Icon? Tally4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tally-4?f=classic&amp;s=light">Tally 4</a>
    /// </summary>
    public static Icon Tally4 => Tally4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "tally-4", "e297");
    private static Icon? Tamalef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tamale?f=classic&amp;s=light">Tamale</a>
    /// </summary>
    public static Icon Tamale => Tamalef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tamale", "e451");
    private static Icon? TankWaterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tank-water?f=classic&amp;s=light">Tank Water</a>
    /// </summary>
    public static Icon TankWater => TankWaterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tank-water", "e452");
    private static Icon? Tapef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tape?f=classic&amp;s=light">Tape</a>
    /// </summary>
    public static Icon Tape => Tapef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tape", "f4db");
    private static Icon? Tarpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tarp?f=classic&amp;s=light">Tarp</a>
    /// </summary>
    public static Icon Tarp => Tarpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tarp", "e57b");
    private static Icon? TarpDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tarp-droplet?f=classic&amp;s=light">Tarp Droplet</a>
    /// </summary>
    public static Icon TarpDroplet => TarpDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tarp-droplet", "e57c");
    private static Icon? Taxif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/taxi?f=classic&amp;s=light">Taxi</a>
    /// </summary>
    public static Icon Taxi => Taxif ??= new Icon(IconFamily.Classic, IconStyle.Light, "taxi", "f1ba");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/taxi?f=classic&amp;s=light">Taxi</a>
    /// </summary>
    public static Icon Cab => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Taxi;
    private static Icon? TaxiBusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/taxi-bus?f=classic&amp;s=light">Taxi Bus</a>
    /// </summary>
    public static Icon TaxiBus => TaxiBusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "taxi-bus", "e298");
    private static Icon? TeddyBearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/teddy-bear?f=classic&amp;s=light">Teddy Bear</a>
    /// </summary>
    public static Icon TeddyBear => TeddyBearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "teddy-bear", "e3cf");
    private static Icon? Teethf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/teeth?f=classic&amp;s=light">Teeth</a>
    /// </summary>
    public static Icon Teeth => Teethf ??= new Icon(IconFamily.Classic, IconStyle.Light, "teeth", "f62e");
    private static Icon? TeethOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/teeth-open?f=classic&amp;s=light">Teeth Open</a>
    /// </summary>
    public static Icon TeethOpen => TeethOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "teeth-open", "f62f");
    private static Icon? Telescopef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/telescope?f=classic&amp;s=light">Telescope</a>
    /// </summary>
    public static Icon Telescope => Telescopef ??= new Icon(IconFamily.Classic, IconStyle.Light, "telescope", "e03e");
    private static Icon? TemperatureArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-arrow-down?f=classic&amp;s=light">Temperature Arrow Down</a>
    /// </summary>
    public static Icon TemperatureArrowDown => TemperatureArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-arrow-down", "e03f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-arrow-down?f=classic&amp;s=light">Temperature Arrow Down</a>
    /// </summary>
    public static Icon TemperatureDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureArrowDown;
    private static Icon? TemperatureArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-arrow-up?f=classic&amp;s=light">Temperature Arrow Up</a>
    /// </summary>
    public static Icon TemperatureArrowUp => TemperatureArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-arrow-up", "e040");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-arrow-up?f=classic&amp;s=light">Temperature Arrow Up</a>
    /// </summary>
    public static Icon TemperatureUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureArrowUp;
    private static Icon? TemperatureEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-empty?f=classic&amp;s=light">Temperature Empty</a>
    /// </summary>
    public static Icon TemperatureEmpty => TemperatureEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-empty", "f2cb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-empty?f=classic&amp;s=light">Temperature Empty</a>
    /// </summary>
    public static Icon Temperature0 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureEmpty;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-empty?f=classic&amp;s=light">Temperature Empty</a>
    /// </summary>
    public static Icon Thermometer0 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureEmpty;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-empty?f=classic&amp;s=light">Temperature Empty</a>
    /// </summary>
    public static Icon ThermometerEmpty => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureEmpty;
    private static Icon? TemperatureFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-full?f=classic&amp;s=light">Temperature Full</a>
    /// </summary>
    public static Icon TemperatureFull => TemperatureFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-full", "f2c7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-full?f=classic&amp;s=light">Temperature Full</a>
    /// </summary>
    public static Icon Temperature4 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureFull;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-full?f=classic&amp;s=light">Temperature Full</a>
    /// </summary>
    public static Icon Thermometer4 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureFull;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-full?f=classic&amp;s=light">Temperature Full</a>
    /// </summary>
    public static Icon ThermometerFull => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureFull;
    private static Icon? TemperatureHalff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-half?f=classic&amp;s=light">Temperature Half</a>
    /// </summary>
    public static Icon TemperatureHalf => TemperatureHalff ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-half", "f2c9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-half?f=classic&amp;s=light">Temperature Half</a>
    /// </summary>
    public static Icon Temperature2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureHalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-half?f=classic&amp;s=light">Temperature Half</a>
    /// </summary>
    public static Icon Thermometer2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureHalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-half?f=classic&amp;s=light">Temperature Half</a>
    /// </summary>
    public static Icon ThermometerHalf => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureHalf;
    private static Icon? TemperatureHighf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-high?f=classic&amp;s=light">Temperature High</a>
    /// </summary>
    public static Icon TemperatureHigh => TemperatureHighf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-high", "f769");
    private static Icon? TemperatureListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-list?f=classic&amp;s=light">Temperature List</a>
    /// </summary>
    public static Icon TemperatureList => TemperatureListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-list", "e299");
    private static Icon? TemperatureLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-low?f=classic&amp;s=light">Temperature Low</a>
    /// </summary>
    public static Icon TemperatureLow => TemperatureLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-low", "f76b");
    private static Icon? TemperatureQuarterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-quarter?f=classic&amp;s=light">Temperature Quarter</a>
    /// </summary>
    public static Icon TemperatureQuarter => TemperatureQuarterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-quarter", "f2ca");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-quarter?f=classic&amp;s=light">Temperature Quarter</a>
    /// </summary>
    public static Icon Temperature1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureQuarter;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-quarter?f=classic&amp;s=light">Temperature Quarter</a>
    /// </summary>
    public static Icon Thermometer1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureQuarter;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-quarter?f=classic&amp;s=light">Temperature Quarter</a>
    /// </summary>
    public static Icon ThermometerQuarter => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureQuarter;
    private static Icon? TemperatureSnowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-snow?f=classic&amp;s=light">Temperature Snow</a>
    /// </summary>
    public static Icon TemperatureSnow => TemperatureSnowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-snow", "f768");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-snow?f=classic&amp;s=light">Temperature Snow</a>
    /// </summary>
    public static Icon TemperatureFrigid => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureSnow;
    private static Icon? TemperatureSunf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-sun?f=classic&amp;s=light">Temperature Sun</a>
    /// </summary>
    public static Icon TemperatureSun => TemperatureSunf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-sun", "f76a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-sun?f=classic&amp;s=light">Temperature Sun</a>
    /// </summary>
    public static Icon TemperatureHot => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureSun;
    private static Icon? TemperatureThreeQuartersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-three-quarters?f=classic&amp;s=light">Temperature Three Quarters</a>
    /// </summary>
    public static Icon TemperatureThreeQuarters => TemperatureThreeQuartersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "temperature-three-quarters", "f2c8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-three-quarters?f=classic&amp;s=light">Temperature Three Quarters</a>
    /// </summary>
    public static Icon Temperature3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureThreeQuarters;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-three-quarters?f=classic&amp;s=light">Temperature Three Quarters</a>
    /// </summary>
    public static Icon Thermometer3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureThreeQuarters;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/temperature-three-quarters?f=classic&amp;s=light">Temperature Three Quarters</a>
    /// </summary>
    public static Icon ThermometerThreeQuarters => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TemperatureThreeQuarters;
    private static Icon? TengeSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tenge-sign?f=classic&amp;s=light">Tenge Sign</a>
    /// </summary>
    public static Icon TengeSign => TengeSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tenge-sign", "f7d7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tenge-sign?f=classic&amp;s=light">Tenge Sign</a>
    /// </summary>
    public static Icon Tenge => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TengeSign;
    private static Icon? TennisBallf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tennis-ball?f=classic&amp;s=light">Tennis Ball</a>
    /// </summary>
    public static Icon TennisBall => TennisBallf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tennis-ball", "f45e");
    private static Icon? Tentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tent?f=classic&amp;s=light">Tent</a>
    /// </summary>
    public static Icon Tent => Tentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tent", "e57d");
    private static Icon? TentArrowDownToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tent-arrow-down-to-line?f=classic&amp;s=light">Tent Arrow Down To Line</a>
    /// </summary>
    public static Icon TentArrowDownToLine => TentArrowDownToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tent-arrow-down-to-line", "e57e");
    private static Icon? TentArrowLeftRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tent-arrow-left-right?f=classic&amp;s=light">Tent Arrow Left Right</a>
    /// </summary>
    public static Icon TentArrowLeftRight => TentArrowLeftRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tent-arrow-left-right", "e57f");
    private static Icon? TentArrowTurnLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tent-arrow-turn-left?f=classic&amp;s=light">Tent Arrow Turn Left</a>
    /// </summary>
    public static Icon TentArrowTurnLeft => TentArrowTurnLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tent-arrow-turn-left", "e580");
    private static Icon? TentArrowsDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tent-arrows-down?f=classic&amp;s=light">Tent Arrows Down</a>
    /// </summary>
    public static Icon TentArrowsDown => TentArrowsDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tent-arrows-down", "e581");
    private static Icon? TentDoublePeakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tent-double-peak?f=classic&amp;s=light">Tent Double Peak</a>
    /// </summary>
    public static Icon TentDoublePeak => TentDoublePeakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tent-double-peak", "e627");
    private static Icon? Tentsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tents?f=classic&amp;s=light">Tents</a>
    /// </summary>
    public static Icon Tents => Tentsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tents", "e582");
    private static Icon? Terminalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/terminal?f=classic&amp;s=light">Terminal</a>
    /// </summary>
    public static Icon Terminal => Terminalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "terminal", "f120");
    private static Icon? Textf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/text?f=classic&amp;s=light">Text</a>
    /// </summary>
    public static Icon Text => Textf ??= new Icon(IconFamily.Classic, IconStyle.Light, "text", "f893");
    private static Icon? TextHeightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/text-height?f=classic&amp;s=light">Text Height</a>
    /// </summary>
    public static Icon TextHeight => TextHeightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "text-height", "f034");
    private static Icon? TextSizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/text-size?f=classic&amp;s=light">Text Size</a>
    /// </summary>
    public static Icon TextSize => TextSizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "text-size", "f894");
    private static Icon? TextSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/text-slash?f=classic&amp;s=light">Text Slash</a>
    /// </summary>
    public static Icon TextSlash => TextSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "text-slash", "f87d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/text-slash?f=classic&amp;s=light">Text Slash</a>
    /// </summary>
    public static Icon RemoveFormat => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TextSlash;
    private static Icon? TextWidthf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/text-width?f=classic&amp;s=light">Text Width</a>
    /// </summary>
    public static Icon TextWidth => TextWidthf ??= new Icon(IconFamily.Classic, IconStyle.Light, "text-width", "f035");
    private static Icon? Thermometerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/thermometer?f=classic&amp;s=light">Thermometer</a>
    /// </summary>
    public static Icon Thermometer => Thermometerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "thermometer", "f491");
    private static Icon? Thetaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/theta?f=classic&amp;s=light">Theta</a>
    /// </summary>
    public static Icon Theta => Thetaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "theta", "f69e");
    private static Icon? ThoughtBubblef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/thought-bubble?f=classic&amp;s=light">Thought Bubble</a>
    /// </summary>
    public static Icon ThoughtBubble => ThoughtBubblef ??= new Icon(IconFamily.Classic, IconStyle.Light, "thought-bubble", "e32e");
    private static Icon? ThumbsDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/thumbs-down?f=classic&amp;s=light">Thumbs Down</a>
    /// </summary>
    public static Icon ThumbsDown => ThumbsDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "thumbs-down", "f165");
    private static Icon? ThumbsUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/thumbs-up?f=classic&amp;s=light">Thumbs Up</a>
    /// </summary>
    public static Icon ThumbsUp => ThumbsUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "thumbs-up", "f164");
    private static Icon? Thumbtackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/thumbtack?f=classic&amp;s=light">Thumbtack</a>
    /// </summary>
    public static Icon Thumbtack => Thumbtackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "thumbtack", "f08d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/thumbtack?f=classic&amp;s=light">Thumbtack</a>
    /// </summary>
    public static Icon ThumbTack => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Thumbtack;
    private static Icon? Tickf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tick?f=classic&amp;s=light">Tick</a>
    /// </summary>
    public static Icon Tick => Tickf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tick", "e32f");
    private static Icon? Ticketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket?f=classic&amp;s=light">Ticket</a>
    /// </summary>
    public static Icon Ticket => Ticketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ticket", "f145");
    private static Icon? TicketAirlinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket-airline?f=classic&amp;s=light">Ticket Airline</a>
    /// </summary>
    public static Icon TicketAirline => TicketAirlinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "ticket-airline", "e29a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket-airline?f=classic&amp;s=light">Ticket Airline</a>
    /// </summary>
    public static Icon TicketPerforatedPlane => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TicketAirline;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket-airline?f=classic&amp;s=light">Ticket Airline</a>
    /// </summary>
    public static Icon TicketPlane => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TicketAirline;
    private static Icon? TicketPerforatedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket-perforated?f=classic&amp;s=light">Ticket Perforated</a>
    /// </summary>
    public static Icon TicketPerforated => TicketPerforatedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ticket-perforated", "e63e");
    private static Icon? TicketSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket-simple?f=classic&amp;s=light">Ticket Simple</a>
    /// </summary>
    public static Icon TicketSimple => TicketSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "ticket-simple", "f3ff");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ticket-simple?f=classic&amp;s=light">Ticket Simple</a>
    /// </summary>
    public static Icon TicketAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TicketSimple;
    private static Icon? Ticketsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tickets?f=classic&amp;s=light">Tickets</a>
    /// </summary>
    public static Icon Tickets => Ticketsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tickets", "e658");
    private static Icon? TicketsAirlinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tickets-airline?f=classic&amp;s=light">Tickets Airline</a>
    /// </summary>
    public static Icon TicketsAirline => TicketsAirlinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tickets-airline", "e29b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tickets-airline?f=classic&amp;s=light">Tickets Airline</a>
    /// </summary>
    public static Icon TicketsPerforatedPlane => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TicketsAirline;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tickets-airline?f=classic&amp;s=light">Tickets Airline</a>
    /// </summary>
    public static Icon TicketsPlane => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TicketsAirline;
    private static Icon? TicketsPerforatedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tickets-perforated?f=classic&amp;s=light">Tickets Perforated</a>
    /// </summary>
    public static Icon TicketsPerforated => TicketsPerforatedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tickets-perforated", "e63f");
    private static Icon? TicketsSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tickets-simple?f=classic&amp;s=light">Tickets Simple</a>
    /// </summary>
    public static Icon TicketsSimple => TicketsSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tickets-simple", "e659");
    private static Icon? Tildef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tilde?f=classic&amp;s=light">Tilde</a>
    /// </summary>
    public static Icon Tilde => Tildef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tilde", "7e");
    private static Icon? Timelinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/timeline?f=classic&amp;s=light">Timeline</a>
    /// </summary>
    public static Icon Timeline => Timelinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "timeline", "e29c");
    private static Icon? TimelineArrowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/timeline-arrow?f=classic&amp;s=light">Timeline Arrow</a>
    /// </summary>
    public static Icon TimelineArrow => TimelineArrowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "timeline-arrow", "e29d");
    private static Icon? Timerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/timer?f=classic&amp;s=light">Timer</a>
    /// </summary>
    public static Icon Timer => Timerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "timer", "e29e");
    private static Icon? Tiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tire?f=classic&amp;s=light">Tire</a>
    /// </summary>
    public static Icon Tire => Tiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "tire", "f631");
    private static Icon? TireFlatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tire-flat?f=classic&amp;s=light">Tire Flat</a>
    /// </summary>
    public static Icon TireFlat => TireFlatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tire-flat", "f632");
    private static Icon? TirePressureWarningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tire-pressure-warning?f=classic&amp;s=light">Tire Pressure Warning</a>
    /// </summary>
    public static Icon TirePressureWarning => TirePressureWarningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tire-pressure-warning", "f633");
    private static Icon? TireRuggedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tire-rugged?f=classic&amp;s=light">Tire Rugged</a>
    /// </summary>
    public static Icon TireRugged => TireRuggedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tire-rugged", "f634");
    private static Icon? ToggleLargeOfff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toggle-large-off?f=classic&amp;s=light">Toggle Large Off</a>
    /// </summary>
    public static Icon ToggleLargeOff => ToggleLargeOfff ??= new Icon(IconFamily.Classic, IconStyle.Light, "toggle-large-off", "e5b0");
    private static Icon? ToggleLargeOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toggle-large-on?f=classic&amp;s=light">Toggle Large On</a>
    /// </summary>
    public static Icon ToggleLargeOn => ToggleLargeOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toggle-large-on", "e5b1");
    private static Icon? ToggleOfff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toggle-off?f=classic&amp;s=light">Toggle Off</a>
    /// </summary>
    public static Icon ToggleOff => ToggleOfff ??= new Icon(IconFamily.Classic, IconStyle.Light, "toggle-off", "f204");
    private static Icon? ToggleOnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toggle-on?f=classic&amp;s=light">Toggle On</a>
    /// </summary>
    public static Icon ToggleOn => ToggleOnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toggle-on", "f205");
    private static Icon? Toiletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet?f=classic&amp;s=light">Toilet</a>
    /// </summary>
    public static Icon Toilet => Toiletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet", "f7d8");
    private static Icon? ToiletPaperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper?f=classic&amp;s=light">Toilet Paper</a>
    /// </summary>
    public static Icon ToiletPaper => ToiletPaperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper", "f71e");
    private static Icon? ToiletPaperBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-blank?f=classic&amp;s=light">Toilet Paper Blank</a>
    /// </summary>
    public static Icon ToiletPaperBlank => ToiletPaperBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-blank", "f71f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-blank?f=classic&amp;s=light">Toilet Paper Blank</a>
    /// </summary>
    public static Icon ToiletPaperAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ToiletPaperBlank;
    private static Icon? ToiletPaperBlankUnderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-blank-under?f=classic&amp;s=light">Toilet Paper Blank Under</a>
    /// </summary>
    public static Icon ToiletPaperBlankUnder => ToiletPaperBlankUnderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-blank-under", "e29f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-blank-under?f=classic&amp;s=light">Toilet Paper Blank Under</a>
    /// </summary>
    public static Icon ToiletPaperReverseAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ToiletPaperBlankUnder;
    private static Icon? ToiletPaperCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-check?f=classic&amp;s=light">Toilet Paper Check</a>
    /// </summary>
    public static Icon ToiletPaperCheck => ToiletPaperCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-check", "e5b2");
    private static Icon? ToiletPaperSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-slash?f=classic&amp;s=light">Toilet Paper Slash</a>
    /// </summary>
    public static Icon ToiletPaperSlash => ToiletPaperSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-slash", "e072");
    private static Icon? ToiletPaperUnderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-under?f=classic&amp;s=light">Toilet Paper Under</a>
    /// </summary>
    public static Icon ToiletPaperUnder => ToiletPaperUnderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-under", "e2a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-under?f=classic&amp;s=light">Toilet Paper Under</a>
    /// </summary>
    public static Icon ToiletPaperReverse => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ToiletPaperUnder;
    private static Icon? ToiletPaperUnderSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-under-slash?f=classic&amp;s=light">Toilet Paper Under Slash</a>
    /// </summary>
    public static Icon ToiletPaperUnderSlash => ToiletPaperUnderSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-under-slash", "e2a1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-under-slash?f=classic&amp;s=light">Toilet Paper Under Slash</a>
    /// </summary>
    public static Icon ToiletPaperReverseSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.ToiletPaperUnderSlash;
    private static Icon? ToiletPaperXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-paper-xmark?f=classic&amp;s=light">Toilet Paper Xmark</a>
    /// </summary>
    public static Icon ToiletPaperXmark => ToiletPaperXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-paper-xmark", "e5b3");
    private static Icon? ToiletPortablef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilet-portable?f=classic&amp;s=light">Toilet Portable</a>
    /// </summary>
    public static Icon ToiletPortable => ToiletPortablef ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilet-portable", "e583");
    private static Icon? ToiletsPortablef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toilets-portable?f=classic&amp;s=light">Toilets Portable</a>
    /// </summary>
    public static Icon ToiletsPortable => ToiletsPortablef ??= new Icon(IconFamily.Classic, IconStyle.Light, "toilets-portable", "e584");
    private static Icon? Tomatof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tomato?f=classic&amp;s=light">Tomato</a>
    /// </summary>
    public static Icon Tomato => Tomatof ??= new Icon(IconFamily.Classic, IconStyle.Light, "tomato", "e330");
    private static Icon? Tombstonef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tombstone?f=classic&amp;s=light">Tombstone</a>
    /// </summary>
    public static Icon Tombstone => Tombstonef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tombstone", "f720");
    private static Icon? TombstoneBlankf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tombstone-blank?f=classic&amp;s=light">Tombstone Blank</a>
    /// </summary>
    public static Icon TombstoneBlank => TombstoneBlankf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tombstone-blank", "f721");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tombstone-blank?f=classic&amp;s=light">Tombstone Blank</a>
    /// </summary>
    public static Icon TombstoneAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TombstoneBlank;
    private static Icon? Toolboxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toolbox?f=classic&amp;s=light">Toolbox</a>
    /// </summary>
    public static Icon Toolbox => Toolboxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toolbox", "f552");
    private static Icon? Toothf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tooth?f=classic&amp;s=light">Tooth</a>
    /// </summary>
    public static Icon Tooth => Toothf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tooth", "f5c9");
    private static Icon? Toothbrushf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/toothbrush?f=classic&amp;s=light">Toothbrush</a>
    /// </summary>
    public static Icon Toothbrush => Toothbrushf ??= new Icon(IconFamily.Classic, IconStyle.Light, "toothbrush", "f635");
    private static Icon? ToriiGatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/torii-gate?f=classic&amp;s=light">Torii Gate</a>
    /// </summary>
    public static Icon ToriiGate => ToriiGatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "torii-gate", "f6a1");
    private static Icon? Tornadof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tornado?f=classic&amp;s=light">Tornado</a>
    /// </summary>
    public static Icon Tornado => Tornadof ??= new Icon(IconFamily.Classic, IconStyle.Light, "tornado", "f76f");
    private static Icon? TowerBroadcastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tower-broadcast?f=classic&amp;s=light">Tower Broadcast</a>
    /// </summary>
    public static Icon TowerBroadcast => TowerBroadcastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tower-broadcast", "f519");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tower-broadcast?f=classic&amp;s=light">Tower Broadcast</a>
    /// </summary>
    public static Icon BroadcastTower => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TowerBroadcast;
    private static Icon? TowerCellf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tower-cell?f=classic&amp;s=light">Tower Cell</a>
    /// </summary>
    public static Icon TowerCell => TowerCellf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tower-cell", "e585");
    private static Icon? TowerControlf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tower-control?f=classic&amp;s=light">Tower Control</a>
    /// </summary>
    public static Icon TowerControl => TowerControlf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tower-control", "e2a2");
    private static Icon? TowerObservationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tower-observation?f=classic&amp;s=light">Tower Observation</a>
    /// </summary>
    public static Icon TowerObservation => TowerObservationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tower-observation", "e586");
    private static Icon? Tractorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tractor?f=classic&amp;s=light">Tractor</a>
    /// </summary>
    public static Icon Tractor => Tractorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tractor", "f722");
    private static Icon? Trademarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trademark?f=classic&amp;s=light">Trademark</a>
    /// </summary>
    public static Icon Trademark => Trademarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trademark", "f25c");
    private static Icon? TrafficConef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/traffic-cone?f=classic&amp;s=light">Traffic Cone</a>
    /// </summary>
    public static Icon TrafficCone => TrafficConef ??= new Icon(IconFamily.Classic, IconStyle.Light, "traffic-cone", "f636");
    private static Icon? TrafficLightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/traffic-light?f=classic&amp;s=light">Traffic Light</a>
    /// </summary>
    public static Icon TrafficLight => TrafficLightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "traffic-light", "f637");
    private static Icon? TrafficLightGof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/traffic-light-go?f=classic&amp;s=light">Traffic Light Go</a>
    /// </summary>
    public static Icon TrafficLightGo => TrafficLightGof ??= new Icon(IconFamily.Classic, IconStyle.Light, "traffic-light-go", "f638");
    private static Icon? TrafficLightSlowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/traffic-light-slow?f=classic&amp;s=light">Traffic Light Slow</a>
    /// </summary>
    public static Icon TrafficLightSlow => TrafficLightSlowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "traffic-light-slow", "f639");
    private static Icon? TrafficLightStopf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/traffic-light-stop?f=classic&amp;s=light">Traffic Light Stop</a>
    /// </summary>
    public static Icon TrafficLightStop => TrafficLightStopf ??= new Icon(IconFamily.Classic, IconStyle.Light, "traffic-light-stop", "f63a");
    private static Icon? Trailerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trailer?f=classic&amp;s=light">Trailer</a>
    /// </summary>
    public static Icon Trailer => Trailerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trailer", "e041");
    private static Icon? Trainf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train?f=classic&amp;s=light">Train</a>
    /// </summary>
    public static Icon Train => Trainf ??= new Icon(IconFamily.Classic, IconStyle.Light, "train", "f238");
    private static Icon? TrainSubwayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-subway?f=classic&amp;s=light">Train Subway</a>
    /// </summary>
    public static Icon TrainSubway => TrainSubwayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "train-subway", "f239");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-subway?f=classic&amp;s=light">Train Subway</a>
    /// </summary>
    public static Icon Subway => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrainSubway;
    private static Icon? TrainSubwayTunnelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-subway-tunnel?f=classic&amp;s=light">Train Subway Tunnel</a>
    /// </summary>
    public static Icon TrainSubwayTunnel => TrainSubwayTunnelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "train-subway-tunnel", "e2a3");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-subway-tunnel?f=classic&amp;s=light">Train Subway Tunnel</a>
    /// </summary>
    public static Icon SubwayTunnel => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrainSubwayTunnel;
    private static Icon? TrainTrackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-track?f=classic&amp;s=light">Train Track</a>
    /// </summary>
    public static Icon TrainTrack => TrainTrackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "train-track", "e453");
    private static Icon? TrainTramf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-tram?f=classic&amp;s=light">Train Tram</a>
    /// </summary>
    public static Icon TrainTram => TrainTramf ??= new Icon(IconFamily.Classic, IconStyle.Light, "train-tram", "e5b4");
    private static Icon? TrainTunnelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/train-tunnel?f=classic&amp;s=light">Train Tunnel</a>
    /// </summary>
    public static Icon TrainTunnel => TrainTunnelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "train-tunnel", "e454");
    private static Icon? TransformerBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transformer-bolt?f=classic&amp;s=light">Transformer Bolt</a>
    /// </summary>
    public static Icon TransformerBolt => TransformerBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "transformer-bolt", "e2a4");
    private static Icon? Transgenderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transgender?f=classic&amp;s=light">Transgender</a>
    /// </summary>
    public static Icon Transgender => Transgenderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "transgender", "f225");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transgender?f=classic&amp;s=light">Transgender</a>
    /// </summary>
    public static Icon TransgenderAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Transgender;
    private static Icon? Transporterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter?f=classic&amp;s=light">Transporter</a>
    /// </summary>
    public static Icon Transporter => Transporterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter", "e042");
    private static Icon? Transporter1f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-1?f=classic&amp;s=light">Transporter 1</a>
    /// </summary>
    public static Icon Transporter1 => Transporter1f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-1", "e043");
    private static Icon? Transporter2f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-2?f=classic&amp;s=light">Transporter 2</a>
    /// </summary>
    public static Icon Transporter2 => Transporter2f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-2", "e044");
    private static Icon? Transporter3f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-3?f=classic&amp;s=light">Transporter 3</a>
    /// </summary>
    public static Icon Transporter3 => Transporter3f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-3", "e045");
    private static Icon? Transporter4f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-4?f=classic&amp;s=light">Transporter 4</a>
    /// </summary>
    public static Icon Transporter4 => Transporter4f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-4", "e2a5");
    private static Icon? Transporter5f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-5?f=classic&amp;s=light">Transporter 5</a>
    /// </summary>
    public static Icon Transporter5 => Transporter5f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-5", "e2a6");
    private static Icon? Transporter6f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-6?f=classic&amp;s=light">Transporter 6</a>
    /// </summary>
    public static Icon Transporter6 => Transporter6f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-6", "e2a7");
    private static Icon? Transporter7f;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-7?f=classic&amp;s=light">Transporter 7</a>
    /// </summary>
    public static Icon Transporter7 => Transporter7f ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-7", "e2a8");
    private static Icon? TransporterEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/transporter-empty?f=classic&amp;s=light">Transporter Empty</a>
    /// </summary>
    public static Icon TransporterEmpty => TransporterEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "transporter-empty", "e046");
    private static Icon? Trashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash?f=classic&amp;s=light">Trash</a>
    /// </summary>
    public static Icon Trash => Trashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash", "f1f8");
    private static Icon? TrashArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-arrow-up?f=classic&amp;s=light">Trash Arrow Up</a>
    /// </summary>
    public static Icon TrashArrowUp => TrashArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-arrow-up", "f829");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-arrow-up?f=classic&amp;s=light">Trash Arrow Up</a>
    /// </summary>
    public static Icon TrashRestore => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashArrowUp;
    private static Icon? TrashCanf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can?f=classic&amp;s=light">Trash Can</a>
    /// </summary>
    public static Icon TrashCan => TrashCanf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can", "f2ed");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can?f=classic&amp;s=light">Trash Can</a>
    /// </summary>
    public static Icon TrashAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashCan;
    private static Icon? TrashCanArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-arrow-up?f=classic&amp;s=light">Trash Can Arrow Up</a>
    /// </summary>
    public static Icon TrashCanArrowUp => TrashCanArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-arrow-up", "f82a");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-arrow-up?f=classic&amp;s=light">Trash Can Arrow Up</a>
    /// </summary>
    public static Icon TrashRestoreAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashCanArrowUp;
    private static Icon? TrashCanCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-check?f=classic&amp;s=light">Trash Can Check</a>
    /// </summary>
    public static Icon TrashCanCheck => TrashCanCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-check", "e2a9");
    private static Icon? TrashCanClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-clock?f=classic&amp;s=light">Trash Can Clock</a>
    /// </summary>
    public static Icon TrashCanClock => TrashCanClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-clock", "e2aa");
    private static Icon? TrashCanListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-list?f=classic&amp;s=light">Trash Can List</a>
    /// </summary>
    public static Icon TrashCanList => TrashCanListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-list", "e2ab");
    private static Icon? TrashCanPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-plus?f=classic&amp;s=light">Trash Can Plus</a>
    /// </summary>
    public static Icon TrashCanPlus => TrashCanPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-plus", "e2ac");
    private static Icon? TrashCanSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-slash?f=classic&amp;s=light">Trash Can Slash</a>
    /// </summary>
    public static Icon TrashCanSlash => TrashCanSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-slash", "e2ad");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-slash?f=classic&amp;s=light">Trash Can Slash</a>
    /// </summary>
    public static Icon TrashAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashCanSlash;
    private static Icon? TrashCanUndof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-undo?f=classic&amp;s=light">Trash Can Undo</a>
    /// </summary>
    public static Icon TrashCanUndo => TrashCanUndof ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-undo", "f896");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-undo?f=classic&amp;s=light">Trash Can Undo</a>
    /// </summary>
    public static Icon TrashCanArrowTurnLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashCanUndo;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-undo?f=classic&amp;s=light">Trash Can Undo</a>
    /// </summary>
    public static Icon TrashUndoAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashCanUndo;
    private static Icon? TrashCanXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-can-xmark?f=classic&amp;s=light">Trash Can Xmark</a>
    /// </summary>
    public static Icon TrashCanXmark => TrashCanXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-can-xmark", "e2ae");
    private static Icon? TrashCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-check?f=classic&amp;s=light">Trash Check</a>
    /// </summary>
    public static Icon TrashCheck => TrashCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-check", "e2af");
    private static Icon? TrashClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-clock?f=classic&amp;s=light">Trash Clock</a>
    /// </summary>
    public static Icon TrashClock => TrashClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-clock", "e2b0");
    private static Icon? TrashListf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-list?f=classic&amp;s=light">Trash List</a>
    /// </summary>
    public static Icon TrashList => TrashListf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-list", "e2b1");
    private static Icon? TrashPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-plus?f=classic&amp;s=light">Trash Plus</a>
    /// </summary>
    public static Icon TrashPlus => TrashPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-plus", "e2b2");
    private static Icon? TrashSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-slash?f=classic&amp;s=light">Trash Slash</a>
    /// </summary>
    public static Icon TrashSlash => TrashSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-slash", "e2b3");
    private static Icon? TrashUndof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-undo?f=classic&amp;s=light">Trash Undo</a>
    /// </summary>
    public static Icon TrashUndo => TrashUndof ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-undo", "f895");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-undo?f=classic&amp;s=light">Trash Undo</a>
    /// </summary>
    public static Icon TrashArrowTurnLeft => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrashUndo;
    private static Icon? TrashXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trash-xmark?f=classic&amp;s=light">Trash Xmark</a>
    /// </summary>
    public static Icon TrashXmark => TrashXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trash-xmark", "e2b4");
    private static Icon? TreasureChestf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/treasure-chest?f=classic&amp;s=light">Treasure Chest</a>
    /// </summary>
    public static Icon TreasureChest => TreasureChestf ??= new Icon(IconFamily.Classic, IconStyle.Light, "treasure-chest", "f723");
    private static Icon? Treef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree?f=classic&amp;s=light">Tree</a>
    /// </summary>
    public static Icon Tree => Treef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree", "f1bb");
    private static Icon? TreeChristmasf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-christmas?f=classic&amp;s=light">Tree Christmas</a>
    /// </summary>
    public static Icon TreeChristmas => TreeChristmasf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree-christmas", "f7db");
    private static Icon? TreeCityf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-city?f=classic&amp;s=light">Tree City</a>
    /// </summary>
    public static Icon TreeCity => TreeCityf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree-city", "e587");
    private static Icon? TreeDeciduousf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-deciduous?f=classic&amp;s=light">Tree Deciduous</a>
    /// </summary>
    public static Icon TreeDeciduous => TreeDeciduousf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree-deciduous", "f400");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-deciduous?f=classic&amp;s=light">Tree Deciduous</a>
    /// </summary>
    public static Icon TreeAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TreeDeciduous;
    private static Icon? TreeDecoratedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-decorated?f=classic&amp;s=light">Tree Decorated</a>
    /// </summary>
    public static Icon TreeDecorated => TreeDecoratedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree-decorated", "f7dc");
    private static Icon? TreeLargef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-large?f=classic&amp;s=light">Tree Large</a>
    /// </summary>
    public static Icon TreeLarge => TreeLargef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree-large", "f7dd");
    private static Icon? TreePalmf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tree-palm?f=classic&amp;s=light">Tree Palm</a>
    /// </summary>
    public static Icon TreePalm => TreePalmf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tree-palm", "f82b");
    private static Icon? Treesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trees?f=classic&amp;s=light">Trees</a>
    /// </summary>
    public static Icon Trees => Treesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trees", "f724");
    private static Icon? Trianglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle?f=classic&amp;s=light">Triangle</a>
    /// </summary>
    public static Icon Triangle => Trianglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "triangle", "f2ec");
    private static Icon? TriangleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-exclamation?f=classic&amp;s=light">Triangle Exclamation</a>
    /// </summary>
    public static Icon TriangleExclamation => TriangleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "triangle-exclamation", "f071");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-exclamation?f=classic&amp;s=light">Triangle Exclamation</a>
    /// </summary>
    public static Icon ExclamationTriangle => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TriangleExclamation;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-exclamation?f=classic&amp;s=light">Triangle Exclamation</a>
    /// </summary>
    public static Icon Warning => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TriangleExclamation;
    private static Icon? TriangleInstrumentf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-instrument?f=classic&amp;s=light">Triangle Instrument</a>
    /// </summary>
    public static Icon TriangleInstrument => TriangleInstrumentf ??= new Icon(IconFamily.Classic, IconStyle.Light, "triangle-instrument", "f8e2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-instrument?f=classic&amp;s=light">Triangle Instrument</a>
    /// </summary>
    public static Icon TriangleMusic => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TriangleInstrument;
    private static Icon? TrianglePersonDiggingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-person-digging?f=classic&amp;s=light">Triangle Person Digging</a>
    /// </summary>
    public static Icon TrianglePersonDigging => TrianglePersonDiggingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "triangle-person-digging", "f85d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/triangle-person-digging?f=classic&amp;s=light">Triangle Person Digging</a>
    /// </summary>
    public static Icon Construction => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrianglePersonDigging;
    private static Icon? Tricyclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tricycle?f=classic&amp;s=light">Tricycle</a>
    /// </summary>
    public static Icon Tricycle => Tricyclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "tricycle", "e5c3");
    private static Icon? TricycleAdultf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tricycle-adult?f=classic&amp;s=light">Tricycle Adult</a>
    /// </summary>
    public static Icon TricycleAdult => TricycleAdultf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tricycle-adult", "e5c4");
    private static Icon? Trilliumf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trillium?f=classic&amp;s=light">Trillium</a>
    /// </summary>
    public static Icon Trillium => Trilliumf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trillium", "e588");
    private static Icon? Trophyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trophy?f=classic&amp;s=light">Trophy</a>
    /// </summary>
    public static Icon Trophy => Trophyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trophy", "f091");
    private static Icon? TrophyStarf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trophy-star?f=classic&amp;s=light">Trophy Star</a>
    /// </summary>
    public static Icon TrophyStar => TrophyStarf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trophy-star", "f2eb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trophy-star?f=classic&amp;s=light">Trophy Star</a>
    /// </summary>
    public static Icon TrophyAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TrophyStar;
    private static Icon? Trowelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trowel?f=classic&amp;s=light">Trowel</a>
    /// </summary>
    public static Icon Trowel => Trowelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trowel", "e589");
    private static Icon? TrowelBricksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trowel-bricks?f=classic&amp;s=light">Trowel Bricks</a>
    /// </summary>
    public static Icon TrowelBricks => TrowelBricksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trowel-bricks", "e58a");
    private static Icon? Truckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck?f=classic&amp;s=light">Truck</a>
    /// </summary>
    public static Icon Truck => Truckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck", "f0d1");
    private static Icon? TruckArrowRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-arrow-right?f=classic&amp;s=light">Truck Arrow Right</a>
    /// </summary>
    public static Icon TruckArrowRight => TruckArrowRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-arrow-right", "e58b");
    private static Icon? TruckBoltf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-bolt?f=classic&amp;s=light">Truck Bolt</a>
    /// </summary>
    public static Icon TruckBolt => TruckBoltf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-bolt", "e3d0");
    private static Icon? TruckClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-clock?f=classic&amp;s=light">Truck Clock</a>
    /// </summary>
    public static Icon TruckClock => TruckClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-clock", "f48c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-clock?f=classic&amp;s=light">Truck Clock</a>
    /// </summary>
    public static Icon ShippingTimed => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TruckClock;
    private static Icon? TruckContainerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-container?f=classic&amp;s=light">Truck Container</a>
    /// </summary>
    public static Icon TruckContainer => TruckContainerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-container", "f4dc");
    private static Icon? TruckContainerEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-container-empty?f=classic&amp;s=light">Truck Container Empty</a>
    /// </summary>
    public static Icon TruckContainerEmpty => TruckContainerEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-container-empty", "e2b5");
    private static Icon? TruckDropletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-droplet?f=classic&amp;s=light">Truck Droplet</a>
    /// </summary>
    public static Icon TruckDroplet => TruckDropletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-droplet", "e58c");
    private static Icon? TruckFastf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-fast?f=classic&amp;s=light">Truck Fast</a>
    /// </summary>
    public static Icon TruckFast => TruckFastf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-fast", "f48b");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-fast?f=classic&amp;s=light">Truck Fast</a>
    /// </summary>
    public static Icon ShippingFast => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TruckFast;
    private static Icon? TruckFieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-field?f=classic&amp;s=light">Truck Field</a>
    /// </summary>
    public static Icon TruckField => TruckFieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-field", "e58d");
    private static Icon? TruckFieldUnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-field-un?f=classic&amp;s=light">Truck Field Un</a>
    /// </summary>
    public static Icon TruckFieldUn => TruckFieldUnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-field-un", "e58e");
    private static Icon? TruckFiref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-fire?f=classic&amp;s=light">Truck Fire</a>
    /// </summary>
    public static Icon TruckFire => TruckFiref ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-fire", "e65a");
    private static Icon? TruckFlatbedf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-flatbed?f=classic&amp;s=light">Truck Flatbed</a>
    /// </summary>
    public static Icon TruckFlatbed => TruckFlatbedf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-flatbed", "e2b6");
    private static Icon? TruckFrontf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-front?f=classic&amp;s=light">Truck Front</a>
    /// </summary>
    public static Icon TruckFront => TruckFrontf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-front", "e2b7");
    private static Icon? TruckLadderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-ladder?f=classic&amp;s=light">Truck Ladder</a>
    /// </summary>
    public static Icon TruckLadder => TruckLadderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-ladder", "e657");
    private static Icon? TruckMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-medical?f=classic&amp;s=light">Truck Medical</a>
    /// </summary>
    public static Icon TruckMedical => TruckMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-medical", "f0f9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-medical?f=classic&amp;s=light">Truck Medical</a>
    /// </summary>
    public static Icon Ambulance => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TruckMedical;
    private static Icon? TruckMonsterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-monster?f=classic&amp;s=light">Truck Monster</a>
    /// </summary>
    public static Icon TruckMonster => TruckMonsterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-monster", "f63b");
    private static Icon? TruckMovingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-moving?f=classic&amp;s=light">Truck Moving</a>
    /// </summary>
    public static Icon TruckMoving => TruckMovingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-moving", "f4df");
    private static Icon? TruckPickupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-pickup?f=classic&amp;s=light">Truck Pickup</a>
    /// </summary>
    public static Icon TruckPickup => TruckPickupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-pickup", "f63c");
    private static Icon? TruckPlanef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-plane?f=classic&amp;s=light">Truck Plane</a>
    /// </summary>
    public static Icon TruckPlane => TruckPlanef ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-plane", "e58f");
    private static Icon? TruckPlowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-plow?f=classic&amp;s=light">Truck Plow</a>
    /// </summary>
    public static Icon TruckPlow => TruckPlowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-plow", "f7de");
    private static Icon? TruckRampf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-ramp?f=classic&amp;s=light">Truck Ramp</a>
    /// </summary>
    public static Icon TruckRamp => TruckRampf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-ramp", "f4e0");
    private static Icon? TruckRampBoxf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-ramp-box?f=classic&amp;s=light">Truck Ramp Box</a>
    /// </summary>
    public static Icon TruckRampBox => TruckRampBoxf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-ramp-box", "f4de");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-ramp-box?f=classic&amp;s=light">Truck Ramp Box</a>
    /// </summary>
    public static Icon TruckLoading => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TruckRampBox;
    private static Icon? TruckRampCouchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-ramp-couch?f=classic&amp;s=light">Truck Ramp Couch</a>
    /// </summary>
    public static Icon TruckRampCouch => TruckRampCouchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-ramp-couch", "f4dd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-ramp-couch?f=classic&amp;s=light">Truck Ramp Couch</a>
    /// </summary>
    public static Icon TruckCouch => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TruckRampCouch;
    private static Icon? TruckTowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-tow?f=classic&amp;s=light">Truck Tow</a>
    /// </summary>
    public static Icon TruckTow => TruckTowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-tow", "e2b8");
    private static Icon? TruckUtensilsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/truck-utensils?f=classic&amp;s=light">Truck Utensils</a>
    /// </summary>
    public static Icon TruckUtensils => TruckUtensilsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "truck-utensils", "e628");
    private static Icon? Trumpetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/trumpet?f=classic&amp;s=light">Trumpet</a>
    /// </summary>
    public static Icon Trumpet => Trumpetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "trumpet", "f8e3");
    private static Icon? Ttyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tty?f=classic&amp;s=light">Tty</a>
    /// </summary>
    public static Icon Tty => Ttyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tty", "f1e4");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tty?f=classic&amp;s=light">Tty</a>
    /// </summary>
    public static Icon Teletype => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Tty;
    private static Icon? TtyAnswerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tty-answer?f=classic&amp;s=light">Tty Answer</a>
    /// </summary>
    public static Icon TtyAnswer => TtyAnswerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tty-answer", "e2b9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tty-answer?f=classic&amp;s=light">Tty Answer</a>
    /// </summary>
    public static Icon TeletypeAnswer => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TtyAnswer;
    private static Icon? TugrikSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tugrik-sign?f=classic&amp;s=light">Tugrik Sign</a>
    /// </summary>
    public static Icon TugrikSign => TugrikSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tugrik-sign", "e2ba");
    private static Icon? Turkeyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turkey?f=classic&amp;s=light">Turkey</a>
    /// </summary>
    public static Icon Turkey => Turkeyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turkey", "f725");
    private static Icon? TurkishLiraSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turkish-lira-sign?f=classic&amp;s=light">Turkish Lira Sign</a>
    /// </summary>
    public static Icon TurkishLiraSign => TurkishLiraSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turkish-lira-sign", "e2bb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turkish-lira-sign?f=classic&amp;s=light">Turkish Lira Sign</a>
    /// </summary>
    public static Icon Try => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TurkishLiraSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turkish-lira-sign?f=classic&amp;s=light">Turkish Lira Sign</a>
    /// </summary>
    public static Icon TurkishLira => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TurkishLiraSign;
    private static Icon? TurnDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-down?f=classic&amp;s=light">Turn Down</a>
    /// </summary>
    public static Icon TurnDown => TurnDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-down", "f3be");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-down?f=classic&amp;s=light">Turn Down</a>
    /// </summary>
    public static Icon LevelDownAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TurnDown;
    private static Icon? TurnDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-down-left?f=classic&amp;s=light">Turn Down Left</a>
    /// </summary>
    public static Icon TurnDownLeft => TurnDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-down-left", "e331");
    private static Icon? TurnDownRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-down-right?f=classic&amp;s=light">Turn Down Right</a>
    /// </summary>
    public static Icon TurnDownRight => TurnDownRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-down-right", "e455");
    private static Icon? TurnLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-left?f=classic&amp;s=light">Turn Left</a>
    /// </summary>
    public static Icon TurnLeft => TurnLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-left", "e636");
    private static Icon? TurnLeftDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-left-down?f=classic&amp;s=light">Turn Left Down</a>
    /// </summary>
    public static Icon TurnLeftDown => TurnLeftDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-left-down", "e637");
    private static Icon? TurnLeftUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-left-up?f=classic&amp;s=light">Turn Left Up</a>
    /// </summary>
    public static Icon TurnLeftUp => TurnLeftUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-left-up", "e638");
    private static Icon? TurnRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-right?f=classic&amp;s=light">Turn Right</a>
    /// </summary>
    public static Icon TurnRight => TurnRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-right", "e639");
    private static Icon? TurnUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-up?f=classic&amp;s=light">Turn Up</a>
    /// </summary>
    public static Icon TurnUp => TurnUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "turn-up", "f3bf");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turn-up?f=classic&amp;s=light">Turn Up</a>
    /// </summary>
    public static Icon LevelUpAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.TurnUp;
    private static Icon? Turntablef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turntable?f=classic&amp;s=light">Turntable</a>
    /// </summary>
    public static Icon Turntable => Turntablef ??= new Icon(IconFamily.Classic, IconStyle.Light, "turntable", "f8e4");
    private static Icon? Turtlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/turtle?f=classic&amp;s=light">Turtle</a>
    /// </summary>
    public static Icon Turtle => Turtlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "turtle", "f726");
    private static Icon? Tvf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tv?f=classic&amp;s=light">Tv</a>
    /// </summary>
    public static Icon Tv => Tvf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tv", "f26c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tv?f=classic&amp;s=light">Tv</a>
    /// </summary>
    public static Icon Television => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Tv;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tv?f=classic&amp;s=light">Tv</a>
    /// </summary>
    public static Icon TvAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Tv;
    private static Icon? TvMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tv-music?f=classic&amp;s=light">Tv Music</a>
    /// </summary>
    public static Icon TvMusic => TvMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "tv-music", "f8e6");
    private static Icon? TvRetrof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/tv-retro?f=classic&amp;s=light">Tv Retro</a>
    /// </summary>
    public static Icon TvRetro => TvRetrof ??= new Icon(IconFamily.Classic, IconStyle.Light, "tv-retro", "f401");
    private static Icon? Typewriterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/typewriter?f=classic&amp;s=light">Typewriter</a>
    /// </summary>
    public static Icon Typewriter => Typewriterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "typewriter", "f8e7");
    private static Icon? Uf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/u?f=classic&amp;s=light">U</a>
    /// </summary>
    public static Icon U => Uf ??= new Icon(IconFamily.Classic, IconStyle.Light, "u", "55");
    private static Icon? Ufof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ufo?f=classic&amp;s=light">Ufo</a>
    /// </summary>
    public static Icon Ufo => Ufof ??= new Icon(IconFamily.Classic, IconStyle.Light, "ufo", "e047");
    private static Icon? UfoBeamf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/ufo-beam?f=classic&amp;s=light">Ufo Beam</a>
    /// </summary>
    public static Icon UfoBeam => UfoBeamf ??= new Icon(IconFamily.Classic, IconStyle.Light, "ufo-beam", "e048");
    private static Icon? Umbrellaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/umbrella?f=classic&amp;s=light">Umbrella</a>
    /// </summary>
    public static Icon Umbrella => Umbrellaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "umbrella", "f0e9");
    private static Icon? UmbrellaBeachf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/umbrella-beach?f=classic&amp;s=light">Umbrella Beach</a>
    /// </summary>
    public static Icon UmbrellaBeach => UmbrellaBeachf ??= new Icon(IconFamily.Classic, IconStyle.Light, "umbrella-beach", "f5ca");
    private static Icon? UmbrellaSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/umbrella-simple?f=classic&amp;s=light">Umbrella Simple</a>
    /// </summary>
    public static Icon UmbrellaSimple => UmbrellaSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "umbrella-simple", "e2bc");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/umbrella-simple?f=classic&amp;s=light">Umbrella Simple</a>
    /// </summary>
    public static Icon UmbrellaAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UmbrellaSimple;
    private static Icon? Underlinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/underline?f=classic&amp;s=light">Underline</a>
    /// </summary>
    public static Icon Underline => Underlinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "underline", "f0cd");
    private static Icon? Unicornf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/unicorn?f=classic&amp;s=light">Unicorn</a>
    /// </summary>
    public static Icon Unicorn => Unicornf ??= new Icon(IconFamily.Classic, IconStyle.Light, "unicorn", "f727");
    private static Icon? UniformMartialArtsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/uniform-martial-arts?f=classic&amp;s=light">Uniform Martial Arts</a>
    /// </summary>
    public static Icon UniformMartialArts => UniformMartialArtsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "uniform-martial-arts", "e3d1");
    private static Icon? Unionf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/union?f=classic&amp;s=light">Union</a>
    /// </summary>
    public static Icon Union => Unionf ??= new Icon(IconFamily.Classic, IconStyle.Light, "union", "f6a2");
    private static Icon? UniversalAccessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/universal-access?f=classic&amp;s=light">Universal Access</a>
    /// </summary>
    public static Icon UniversalAccess => UniversalAccessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "universal-access", "f29a");
    private static Icon? Unlockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/unlock?f=classic&amp;s=light">Unlock</a>
    /// </summary>
    public static Icon Unlock => Unlockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "unlock", "f09c");
    private static Icon? UnlockKeyholef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/unlock-keyhole?f=classic&amp;s=light">Unlock Keyhole</a>
    /// </summary>
    public static Icon UnlockKeyhole => UnlockKeyholef ??= new Icon(IconFamily.Classic, IconStyle.Light, "unlock-keyhole", "f13e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/unlock-keyhole?f=classic&amp;s=light">Unlock Keyhole</a>
    /// </summary>
    public static Icon UnlockAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UnlockKeyhole;
    private static Icon? Upf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up?f=classic&amp;s=light">Up</a>
    /// </summary>
    public static Icon Up => Upf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up", "f357");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up?f=classic&amp;s=light">Up</a>
    /// </summary>
    public static Icon ArrowAltUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Up;
    private static Icon? UpDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-down?f=classic&amp;s=light">Up Down</a>
    /// </summary>
    public static Icon UpDown => UpDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-down", "f338");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-down?f=classic&amp;s=light">Up Down</a>
    /// </summary>
    public static Icon ArrowsAltV => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpDown;
    private static Icon? UpDownLeftRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-down-left-right?f=classic&amp;s=light">Up Down Left Right</a>
    /// </summary>
    public static Icon UpDownLeftRight => UpDownLeftRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-down-left-right", "f0b2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-down-left-right?f=classic&amp;s=light">Up Down Left Right</a>
    /// </summary>
    public static Icon ArrowsAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpDownLeftRight;
    private static Icon? UpFromBracketf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-from-bracket?f=classic&amp;s=light">Up From Bracket</a>
    /// </summary>
    public static Icon UpFromBracket => UpFromBracketf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-from-bracket", "e590");
    private static Icon? UpFromDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-from-dotted-line?f=classic&amp;s=light">Up From Dotted Line</a>
    /// </summary>
    public static Icon UpFromDottedLine => UpFromDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-from-dotted-line", "e456");
    private static Icon? UpFromLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-from-line?f=classic&amp;s=light">Up From Line</a>
    /// </summary>
    public static Icon UpFromLine => UpFromLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-from-line", "f346");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-from-line?f=classic&amp;s=light">Up From Line</a>
    /// </summary>
    public static Icon ArrowAltFromBottom => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpFromLine;
    private static Icon? UpLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-left?f=classic&amp;s=light">Up Left</a>
    /// </summary>
    public static Icon UpLeft => UpLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-left", "e2bd");
    private static Icon? UpLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-long?f=classic&amp;s=light">Up Long</a>
    /// </summary>
    public static Icon UpLong => UpLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-long", "f30c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-long?f=classic&amp;s=light">Up Long</a>
    /// </summary>
    public static Icon LongArrowAltUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpLong;
    private static Icon? UpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-right?f=classic&amp;s=light">Up Right</a>
    /// </summary>
    public static Icon UpRight => UpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-right", "e2be");
    private static Icon? UpRightAndDownLeftFromCenterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-right-and-down-left-from-center?f=classic&amp;s=light">Up Right And Down Left From Center</a>
    /// </summary>
    public static Icon UpRightAndDownLeftFromCenter => UpRightAndDownLeftFromCenterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-right-and-down-left-from-center", "f424");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-right-and-down-left-from-center?f=classic&amp;s=light">Up Right And Down Left From Center</a>
    /// </summary>
    public static Icon ExpandAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpRightAndDownLeftFromCenter;
    private static Icon? UpRightFromSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-right-from-square?f=classic&amp;s=light">Up Right From Square</a>
    /// </summary>
    public static Icon UpRightFromSquare => UpRightFromSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-right-from-square", "f35d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-right-from-square?f=classic&amp;s=light">Up Right From Square</a>
    /// </summary>
    public static Icon ExternalLinkAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpRightFromSquare;
    private static Icon? UpToDottedLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-to-dotted-line?f=classic&amp;s=light">Up To Dotted Line</a>
    /// </summary>
    public static Icon UpToDottedLine => UpToDottedLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-to-dotted-line", "e457");
    private static Icon? UpToLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-to-line?f=classic&amp;s=light">Up To Line</a>
    /// </summary>
    public static Icon UpToLine => UpToLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "up-to-line", "f34d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/up-to-line?f=classic&amp;s=light">Up To Line</a>
    /// </summary>
    public static Icon ArrowAltToTop => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UpToLine;
    private static Icon? Uploadf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/upload?f=classic&amp;s=light">Upload</a>
    /// </summary>
    public static Icon Upload => Uploadf ??= new Icon(IconFamily.Classic, IconStyle.Light, "upload", "f093");
    private static Icon? UsbDrivef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/usb-drive?f=classic&amp;s=light">Usb Drive</a>
    /// </summary>
    public static Icon UsbDrive => UsbDrivef ??= new Icon(IconFamily.Classic, IconStyle.Light, "usb-drive", "f8e9");
    private static Icon? Userf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user?f=classic&amp;s=light">User</a>
    /// </summary>
    public static Icon User => Userf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user", "f007");
    private static Icon? UserAlienf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-alien?f=classic&amp;s=light">User Alien</a>
    /// </summary>
    public static Icon UserAlien => UserAlienf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-alien", "e04a");
    private static Icon? UserAstronautf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-astronaut?f=classic&amp;s=light">User Astronaut</a>
    /// </summary>
    public static Icon UserAstronaut => UserAstronautf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-astronaut", "f4fb");
    private static Icon? UserBountyHunterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-bounty-hunter?f=classic&amp;s=light">User Bounty Hunter</a>
    /// </summary>
    public static Icon UserBountyHunter => UserBountyHunterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-bounty-hunter", "e2bf");
    private static Icon? UserCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-check?f=classic&amp;s=light">User Check</a>
    /// </summary>
    public static Icon UserCheck => UserCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-check", "f4fc");
    private static Icon? UserCheff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-chef?f=classic&amp;s=light">User Chef</a>
    /// </summary>
    public static Icon UserChef => UserCheff ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-chef", "e3d2");
    private static Icon? UserClockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-clock?f=classic&amp;s=light">User Clock</a>
    /// </summary>
    public static Icon UserClock => UserClockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-clock", "f4fd");
    private static Icon? UserCowboyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-cowboy?f=classic&amp;s=light">User Cowboy</a>
    /// </summary>
    public static Icon UserCowboy => UserCowboyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-cowboy", "f8ea");
    private static Icon? UserCrownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-crown?f=classic&amp;s=light">User Crown</a>
    /// </summary>
    public static Icon UserCrown => UserCrownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-crown", "f6a4");
    private static Icon? UserDoctorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-doctor?f=classic&amp;s=light">User Doctor</a>
    /// </summary>
    public static Icon UserDoctor => UserDoctorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-doctor", "f0f0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-doctor?f=classic&amp;s=light">User Doctor</a>
    /// </summary>
    public static Icon UserMd => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserDoctor;
    private static Icon? UserDoctorHairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-doctor-hair?f=classic&amp;s=light">User Doctor Hair</a>
    /// </summary>
    public static Icon UserDoctorHair => UserDoctorHairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-doctor-hair", "e458");
    private static Icon? UserDoctorHairLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-doctor-hair-long?f=classic&amp;s=light">User Doctor Hair Long</a>
    /// </summary>
    public static Icon UserDoctorHairLong => UserDoctorHairLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-doctor-hair-long", "e459");
    private static Icon? UserDoctorMessagef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-doctor-message?f=classic&amp;s=light">User Doctor Message</a>
    /// </summary>
    public static Icon UserDoctorMessage => UserDoctorMessagef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-doctor-message", "f82e");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-doctor-message?f=classic&amp;s=light">User Doctor Message</a>
    /// </summary>
    public static Icon UserMdChat => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserDoctorMessage;
    private static Icon? UserGearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-gear?f=classic&amp;s=light">User Gear</a>
    /// </summary>
    public static Icon UserGear => UserGearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-gear", "f4fe");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-gear?f=classic&amp;s=light">User Gear</a>
    /// </summary>
    public static Icon UserCog => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserGear;
    private static Icon? UserGraduatef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-graduate?f=classic&amp;s=light">User Graduate</a>
    /// </summary>
    public static Icon UserGraduate => UserGraduatef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-graduate", "f501");
    private static Icon? UserGroupf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-group?f=classic&amp;s=light">User Group</a>
    /// </summary>
    public static Icon UserGroup => UserGroupf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-group", "f500");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-group?f=classic&amp;s=light">User Group</a>
    /// </summary>
    public static Icon UserFriends => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserGroup;
    private static Icon? UserGroupCrownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-group-crown?f=classic&amp;s=light">User Group Crown</a>
    /// </summary>
    public static Icon UserGroupCrown => UserGroupCrownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-group-crown", "f6a5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-group-crown?f=classic&amp;s=light">User Group Crown</a>
    /// </summary>
    public static Icon UsersCrown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserGroupCrown;
    private static Icon? UserGroupSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-group-simple?f=classic&amp;s=light">User Group Simple</a>
    /// </summary>
    public static Icon UserGroupSimple => UserGroupSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-group-simple", "e603");
    private static Icon? UserHairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair?f=classic&amp;s=light">User Hair</a>
    /// </summary>
    public static Icon UserHair => UserHairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-hair", "e45a");
    private static Icon? UserHairBunsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair-buns?f=classic&amp;s=light">User Hair Buns</a>
    /// </summary>
    public static Icon UserHairBuns => UserHairBunsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-hair-buns", "e3d3");
    private static Icon? UserHairLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair-long?f=classic&amp;s=light">User Hair Long</a>
    /// </summary>
    public static Icon UserHairLong => UserHairLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-hair-long", "e45b");
    private static Icon? UserHairMulletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair-mullet?f=classic&amp;s=light">User Hair Mullet</a>
    /// </summary>
    public static Icon UserHairMullet => UserHairMulletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-hair-mullet", "e45c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair-mullet?f=classic&amp;s=light">User Hair Mullet</a>
    /// </summary>
    public static Icon BusinessFront => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserHairMullet;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair-mullet?f=classic&amp;s=light">User Hair Mullet</a>
    /// </summary>
    public static Icon PartyBack => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserHairMullet;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-hair-mullet?f=classic&amp;s=light">User Hair Mullet</a>
    /// </summary>
    public static Icon TrianBalbot => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserHairMullet;
    private static Icon? UserHeadsetf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-headset?f=classic&amp;s=light">User Headset</a>
    /// </summary>
    public static Icon UserHeadset => UserHeadsetf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-headset", "f82d");
    private static Icon? UserHelmetSafetyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-helmet-safety?f=classic&amp;s=light">User Helmet Safety</a>
    /// </summary>
    public static Icon UserHelmetSafety => UserHelmetSafetyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-helmet-safety", "f82c");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-helmet-safety?f=classic&amp;s=light">User Helmet Safety</a>
    /// </summary>
    public static Icon UserConstruction => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserHelmetSafety;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-helmet-safety?f=classic&amp;s=light">User Helmet Safety</a>
    /// </summary>
    public static Icon UserHardHat => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserHelmetSafety;
    private static Icon? UserInjuredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-injured?f=classic&amp;s=light">User Injured</a>
    /// </summary>
    public static Icon UserInjured => UserInjuredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-injured", "f728");
    private static Icon? UserLargef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-large?f=classic&amp;s=light">User Large</a>
    /// </summary>
    public static Icon UserLarge => UserLargef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-large", "f406");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-large?f=classic&amp;s=light">User Large</a>
    /// </summary>
    public static Icon UserAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserLarge;
    private static Icon? UserLargeSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-large-slash?f=classic&amp;s=light">User Large Slash</a>
    /// </summary>
    public static Icon UserLargeSlash => UserLargeSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-large-slash", "f4fa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-large-slash?f=classic&amp;s=light">User Large Slash</a>
    /// </summary>
    public static Icon UserAltSlash => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserLargeSlash;
    private static Icon? UserLockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-lock?f=classic&amp;s=light">User Lock</a>
    /// </summary>
    public static Icon UserLock => UserLockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-lock", "f502");
    private static Icon? UserMagnifyingGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-magnifying-glass?f=classic&amp;s=light">User Magnifying Glass</a>
    /// </summary>
    public static Icon UserMagnifyingGlass => UserMagnifyingGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-magnifying-glass", "e5c5");
    private static Icon? UserMinusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-minus?f=classic&amp;s=light">User Minus</a>
    /// </summary>
    public static Icon UserMinus => UserMinusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-minus", "f503");
    private static Icon? UserMusicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-music?f=classic&amp;s=light">User Music</a>
    /// </summary>
    public static Icon UserMusic => UserMusicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-music", "f8eb");
    private static Icon? UserNinjaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-ninja?f=classic&amp;s=light">User Ninja</a>
    /// </summary>
    public static Icon UserNinja => UserNinjaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-ninja", "f504");
    private static Icon? UserNursef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-nurse?f=classic&amp;s=light">User Nurse</a>
    /// </summary>
    public static Icon UserNurse => UserNursef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-nurse", "f82f");
    private static Icon? UserNurseHairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-nurse-hair?f=classic&amp;s=light">User Nurse Hair</a>
    /// </summary>
    public static Icon UserNurseHair => UserNurseHairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-nurse-hair", "e45d");
    private static Icon? UserNurseHairLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-nurse-hair-long?f=classic&amp;s=light">User Nurse Hair Long</a>
    /// </summary>
    public static Icon UserNurseHairLong => UserNurseHairLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-nurse-hair-long", "e45e");
    private static Icon? UserPenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-pen?f=classic&amp;s=light">User Pen</a>
    /// </summary>
    public static Icon UserPen => UserPenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-pen", "f4ff");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-pen?f=classic&amp;s=light">User Pen</a>
    /// </summary>
    public static Icon UserEdit => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserPen;
    private static Icon? UserPilotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-pilot?f=classic&amp;s=light">User Pilot</a>
    /// </summary>
    public static Icon UserPilot => UserPilotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-pilot", "e2c0");
    private static Icon? UserPilotTief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-pilot-tie?f=classic&amp;s=light">User Pilot Tie</a>
    /// </summary>
    public static Icon UserPilotTie => UserPilotTief ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-pilot-tie", "e2c1");
    private static Icon? UserPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-plus?f=classic&amp;s=light">User Plus</a>
    /// </summary>
    public static Icon UserPlus => UserPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-plus", "f234");
    private static Icon? UserPolicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-police?f=classic&amp;s=light">User Police</a>
    /// </summary>
    public static Icon UserPolice => UserPolicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-police", "e333");
    private static Icon? UserPoliceTief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-police-tie?f=classic&amp;s=light">User Police Tie</a>
    /// </summary>
    public static Icon UserPoliceTie => UserPoliceTief ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-police-tie", "e334");
    private static Icon? UserRobotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-robot?f=classic&amp;s=light">User Robot</a>
    /// </summary>
    public static Icon UserRobot => UserRobotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-robot", "e04b");
    private static Icon? UserRobotXmarksf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-robot-xmarks?f=classic&amp;s=light">User Robot Xmarks</a>
    /// </summary>
    public static Icon UserRobotXmarks => UserRobotXmarksf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-robot-xmarks", "e4a7");
    private static Icon? UserSecretf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-secret?f=classic&amp;s=light">User Secret</a>
    /// </summary>
    public static Icon UserSecret => UserSecretf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-secret", "f21b");
    private static Icon? UserShakespearef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-shakespeare?f=classic&amp;s=light">User Shakespeare</a>
    /// </summary>
    public static Icon UserShakespeare => UserShakespearef ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-shakespeare", "e2c2");
    private static Icon? UserShieldf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-shield?f=classic&amp;s=light">User Shield</a>
    /// </summary>
    public static Icon UserShield => UserShieldf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-shield", "f505");
    private static Icon? UserSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-slash?f=classic&amp;s=light">User Slash</a>
    /// </summary>
    public static Icon UserSlash => UserSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-slash", "f506");
    private static Icon? UserTagf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-tag?f=classic&amp;s=light">User Tag</a>
    /// </summary>
    public static Icon UserTag => UserTagf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-tag", "f507");
    private static Icon? UserTief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-tie?f=classic&amp;s=light">User Tie</a>
    /// </summary>
    public static Icon UserTie => UserTief ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-tie", "f508");
    private static Icon? UserTieHairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-tie-hair?f=classic&amp;s=light">User Tie Hair</a>
    /// </summary>
    public static Icon UserTieHair => UserTieHairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-tie-hair", "e45f");
    private static Icon? UserTieHairLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-tie-hair-long?f=classic&amp;s=light">User Tie Hair Long</a>
    /// </summary>
    public static Icon UserTieHairLong => UserTieHairLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-tie-hair-long", "e460");
    private static Icon? UserUnlockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-unlock?f=classic&amp;s=light">User Unlock</a>
    /// </summary>
    public static Icon UserUnlock => UserUnlockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-unlock", "e058");
    private static Icon? UserVisorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-visor?f=classic&amp;s=light">User Visor</a>
    /// </summary>
    public static Icon UserVisor => UserVisorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-visor", "e04c");
    private static Icon? UserVneckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-vneck?f=classic&amp;s=light">User Vneck</a>
    /// </summary>
    public static Icon UserVneck => UserVneckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-vneck", "e461");
    private static Icon? UserVneckHairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-vneck-hair?f=classic&amp;s=light">User Vneck Hair</a>
    /// </summary>
    public static Icon UserVneckHair => UserVneckHairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-vneck-hair", "e462");
    private static Icon? UserVneckHairLongf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-vneck-hair-long?f=classic&amp;s=light">User Vneck Hair Long</a>
    /// </summary>
    public static Icon UserVneckHairLong => UserVneckHairLongf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-vneck-hair-long", "e463");
    private static Icon? UserXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-xmark?f=classic&amp;s=light">User Xmark</a>
    /// </summary>
    public static Icon UserXmark => UserXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "user-xmark", "f235");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/user-xmark?f=classic&amp;s=light">User Xmark</a>
    /// </summary>
    public static Icon UserTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UserXmark;
    private static Icon? Usersf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users?f=classic&amp;s=light">Users</a>
    /// </summary>
    public static Icon Users => Usersf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users", "f0c0");
    private static Icon? UsersBetweenLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-between-lines?f=classic&amp;s=light">Users Between Lines</a>
    /// </summary>
    public static Icon UsersBetweenLines => UsersBetweenLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-between-lines", "e591");
    private static Icon? UsersGearf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-gear?f=classic&amp;s=light">Users Gear</a>
    /// </summary>
    public static Icon UsersGear => UsersGearf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-gear", "f509");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-gear?f=classic&amp;s=light">Users Gear</a>
    /// </summary>
    public static Icon UsersCog => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.UsersGear;
    private static Icon? UsersLinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-line?f=classic&amp;s=light">Users Line</a>
    /// </summary>
    public static Icon UsersLine => UsersLinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-line", "e592");
    private static Icon? UsersMedicalf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-medical?f=classic&amp;s=light">Users Medical</a>
    /// </summary>
    public static Icon UsersMedical => UsersMedicalf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-medical", "f830");
    private static Icon? UsersRaysf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-rays?f=classic&amp;s=light">Users Rays</a>
    /// </summary>
    public static Icon UsersRays => UsersRaysf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-rays", "e593");
    private static Icon? UsersRectanglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-rectangle?f=classic&amp;s=light">Users Rectangle</a>
    /// </summary>
    public static Icon UsersRectangle => UsersRectanglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-rectangle", "e594");
    private static Icon? UsersSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-slash?f=classic&amp;s=light">Users Slash</a>
    /// </summary>
    public static Icon UsersSlash => UsersSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-slash", "e073");
    private static Icon? UsersViewfinderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/users-viewfinder?f=classic&amp;s=light">Users Viewfinder</a>
    /// </summary>
    public static Icon UsersViewfinder => UsersViewfinderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "users-viewfinder", "e595");
    private static Icon? Utensilsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/utensils?f=classic&amp;s=light">Utensils</a>
    /// </summary>
    public static Icon Utensils => Utensilsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "utensils", "f2e7");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/utensils?f=classic&amp;s=light">Utensils</a>
    /// </summary>
    public static Icon Cutlery => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Utensils;
    private static Icon? UtensilsSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/utensils-slash?f=classic&amp;s=light">Utensils Slash</a>
    /// </summary>
    public static Icon UtensilsSlash => UtensilsSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "utensils-slash", "e464");
    private static Icon? UtilityPolef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/utility-pole?f=classic&amp;s=light">Utility Pole</a>
    /// </summary>
    public static Icon UtilityPole => UtilityPolef ??= new Icon(IconFamily.Classic, IconStyle.Light, "utility-pole", "e2c3");
    private static Icon? UtilityPoleDoublef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/utility-pole-double?f=classic&amp;s=light">Utility Pole Double</a>
    /// </summary>
    public static Icon UtilityPoleDouble => UtilityPoleDoublef ??= new Icon(IconFamily.Classic, IconStyle.Light, "utility-pole-double", "e2c4");
    private static Icon? Vf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/v?f=classic&amp;s=light">V</a>
    /// </summary>
    public static Icon V => Vf ??= new Icon(IconFamily.Classic, IconStyle.Light, "v", "56");
    private static Icon? Vacuumf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vacuum?f=classic&amp;s=light">Vacuum</a>
    /// </summary>
    public static Icon Vacuum => Vacuumf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vacuum", "e04d");
    private static Icon? VacuumRobotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vacuum-robot?f=classic&amp;s=light">Vacuum Robot</a>
    /// </summary>
    public static Icon VacuumRobot => VacuumRobotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vacuum-robot", "e04e");
    private static Icon? ValueAbsolutef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/value-absolute?f=classic&amp;s=light">Value Absolute</a>
    /// </summary>
    public static Icon ValueAbsolute => ValueAbsolutef ??= new Icon(IconFamily.Classic, IconStyle.Light, "value-absolute", "f6a6");
    private static Icon? VanShuttlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/van-shuttle?f=classic&amp;s=light">Van Shuttle</a>
    /// </summary>
    public static Icon VanShuttle => VanShuttlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "van-shuttle", "f5b6");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/van-shuttle?f=classic&amp;s=light">Van Shuttle</a>
    /// </summary>
    public static Icon ShuttleVan => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.VanShuttle;
    private static Icon? Vaultf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vault?f=classic&amp;s=light">Vault</a>
    /// </summary>
    public static Icon Vault => Vaultf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vault", "e2c5");
    private static Icon? VectorCirclef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vector-circle?f=classic&amp;s=light">Vector Circle</a>
    /// </summary>
    public static Icon VectorCircle => VectorCirclef ??= new Icon(IconFamily.Classic, IconStyle.Light, "vector-circle", "e2c6");
    private static Icon? VectorPolygonf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vector-polygon?f=classic&amp;s=light">Vector Polygon</a>
    /// </summary>
    public static Icon VectorPolygon => VectorPolygonf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vector-polygon", "e2c7");
    private static Icon? VectorSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vector-square?f=classic&amp;s=light">Vector Square</a>
    /// </summary>
    public static Icon VectorSquare => VectorSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "vector-square", "f5cb");
    private static Icon? VentDamperf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vent-damper?f=classic&amp;s=light">Vent Damper</a>
    /// </summary>
    public static Icon VentDamper => VentDamperf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vent-damper", "e465");
    private static Icon? Venusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/venus?f=classic&amp;s=light">Venus</a>
    /// </summary>
    public static Icon Venus => Venusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "venus", "f221");
    private static Icon? VenusDoublef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/venus-double?f=classic&amp;s=light">Venus Double</a>
    /// </summary>
    public static Icon VenusDouble => VenusDoublef ??= new Icon(IconFamily.Classic, IconStyle.Light, "venus-double", "f226");
    private static Icon? VenusMarsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/venus-mars?f=classic&amp;s=light">Venus Mars</a>
    /// </summary>
    public static Icon VenusMars => VenusMarsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "venus-mars", "f228");
    private static Icon? Vestf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vest?f=classic&amp;s=light">Vest</a>
    /// </summary>
    public static Icon Vest => Vestf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vest", "e085");
    private static Icon? VestPatchesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vest-patches?f=classic&amp;s=light">Vest Patches</a>
    /// </summary>
    public static Icon VestPatches => VestPatchesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vest-patches", "e086");
    private static Icon? Vialf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vial?f=classic&amp;s=light">Vial</a>
    /// </summary>
    public static Icon Vial => Vialf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vial", "f492");
    private static Icon? VialCircleCheckf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vial-circle-check?f=classic&amp;s=light">Vial Circle Check</a>
    /// </summary>
    public static Icon VialCircleCheck => VialCircleCheckf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vial-circle-check", "e596");
    private static Icon? VialVirusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vial-virus?f=classic&amp;s=light">Vial Virus</a>
    /// </summary>
    public static Icon VialVirus => VialVirusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vial-virus", "e597");
    private static Icon? Vialsf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vials?f=classic&amp;s=light">Vials</a>
    /// </summary>
    public static Icon Vials => Vialsf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vials", "f493");
    private static Icon? Videof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/video?f=classic&amp;s=light">Video</a>
    /// </summary>
    public static Icon Video => Videof ??= new Icon(IconFamily.Classic, IconStyle.Light, "video", "f03d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/video?f=classic&amp;s=light">Video</a>
    /// </summary>
    public static Icon VideoCamera => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Video;
    private static Icon? VideoArrowDownLeftf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/video-arrow-down-left?f=classic&amp;s=light">Video Arrow Down Left</a>
    /// </summary>
    public static Icon VideoArrowDownLeft => VideoArrowDownLeftf ??= new Icon(IconFamily.Classic, IconStyle.Light, "video-arrow-down-left", "e2c8");
    private static Icon? VideoArrowUpRightf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/video-arrow-up-right?f=classic&amp;s=light">Video Arrow Up Right</a>
    /// </summary>
    public static Icon VideoArrowUpRight => VideoArrowUpRightf ??= new Icon(IconFamily.Classic, IconStyle.Light, "video-arrow-up-right", "e2c9");
    private static Icon? VideoPlusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/video-plus?f=classic&amp;s=light">Video Plus</a>
    /// </summary>
    public static Icon VideoPlus => VideoPlusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "video-plus", "f4e1");
    private static Icon? VideoSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/video-slash?f=classic&amp;s=light">Video Slash</a>
    /// </summary>
    public static Icon VideoSlash => VideoSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "video-slash", "f4e2");
    private static Icon? Viharaf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vihara?f=classic&amp;s=light">Vihara</a>
    /// </summary>
    public static Icon Vihara => Viharaf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vihara", "f6a7");
    private static Icon? Violinf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/violin?f=classic&amp;s=light">Violin</a>
    /// </summary>
    public static Icon Violin => Violinf ??= new Icon(IconFamily.Classic, IconStyle.Light, "violin", "f8ed");
    private static Icon? Virusf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/virus?f=classic&amp;s=light">Virus</a>
    /// </summary>
    public static Icon Virus => Virusf ??= new Icon(IconFamily.Classic, IconStyle.Light, "virus", "e074");
    private static Icon? VirusCovidf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/virus-covid?f=classic&amp;s=light">Virus Covid</a>
    /// </summary>
    public static Icon VirusCovid => VirusCovidf ??= new Icon(IconFamily.Classic, IconStyle.Light, "virus-covid", "e4a8");
    private static Icon? VirusCovidSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/virus-covid-slash?f=classic&amp;s=light">Virus Covid Slash</a>
    /// </summary>
    public static Icon VirusCovidSlash => VirusCovidSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "virus-covid-slash", "e4a9");
    private static Icon? VirusSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/virus-slash?f=classic&amp;s=light">Virus Slash</a>
    /// </summary>
    public static Icon VirusSlash => VirusSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "virus-slash", "e075");
    private static Icon? Virusesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/viruses?f=classic&amp;s=light">Viruses</a>
    /// </summary>
    public static Icon Viruses => Virusesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "viruses", "e076");
    private static Icon? Voicemailf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/voicemail?f=classic&amp;s=light">Voicemail</a>
    /// </summary>
    public static Icon Voicemail => Voicemailf ??= new Icon(IconFamily.Classic, IconStyle.Light, "voicemail", "f897");
    private static Icon? Volcanof;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volcano?f=classic&amp;s=light">Volcano</a>
    /// </summary>
    public static Icon Volcano => Volcanof ??= new Icon(IconFamily.Classic, IconStyle.Light, "volcano", "f770");
    private static Icon? Volleyballf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volleyball?f=classic&amp;s=light">Volleyball</a>
    /// </summary>
    public static Icon Volleyball => Volleyballf ??= new Icon(IconFamily.Classic, IconStyle.Light, "volleyball", "f45f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volleyball?f=classic&amp;s=light">Volleyball</a>
    /// </summary>
    public static Icon VolleyballBall => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Volleyball;
    private static Icon? Volumef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume?f=classic&amp;s=light">Volume</a>
    /// </summary>
    public static Icon Volume => Volumef ??= new Icon(IconFamily.Classic, IconStyle.Light, "volume", "f6a8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume?f=classic&amp;s=light">Volume</a>
    /// </summary>
    public static Icon VolumeMedium => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Volume;
    private static Icon? VolumeHighf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-high?f=classic&amp;s=light">Volume High</a>
    /// </summary>
    public static Icon VolumeHigh => VolumeHighf ??= new Icon(IconFamily.Classic, IconStyle.Light, "volume-high", "f028");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-high?f=classic&amp;s=light">Volume High</a>
    /// </summary>
    public static Icon VolumeUp => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.VolumeHigh;
    private static Icon? VolumeLowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-low?f=classic&amp;s=light">Volume Low</a>
    /// </summary>
    public static Icon VolumeLow => VolumeLowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "volume-low", "f027");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-low?f=classic&amp;s=light">Volume Low</a>
    /// </summary>
    public static Icon VolumeDown => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.VolumeLow;
    private static Icon? VolumeOfff;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-off?f=classic&amp;s=light">Volume Off</a>
    /// </summary>
    public static Icon VolumeOff => VolumeOfff ??= new Icon(IconFamily.Classic, IconStyle.Light, "volume-off", "f026");
    private static Icon? VolumeSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-slash?f=classic&amp;s=light">Volume Slash</a>
    /// </summary>
    public static Icon VolumeSlash => VolumeSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "volume-slash", "f2e2");
    private static Icon? VolumeXmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-xmark?f=classic&amp;s=light">Volume Xmark</a>
    /// </summary>
    public static Icon VolumeXmark => VolumeXmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "volume-xmark", "f6a9");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-xmark?f=classic&amp;s=light">Volume Xmark</a>
    /// </summary>
    public static Icon VolumeMute => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.VolumeXmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/volume-xmark?f=classic&amp;s=light">Volume Xmark</a>
    /// </summary>
    public static Icon VolumeTimes => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.VolumeXmark;
    private static Icon? VrCardboardf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/vr-cardboard?f=classic&amp;s=light">Vr Cardboard</a>
    /// </summary>
    public static Icon VrCardboard => VrCardboardf ??= new Icon(IconFamily.Classic, IconStyle.Light, "vr-cardboard", "f729");
    private static Icon? Wf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/w?f=classic&amp;s=light">W</a>
    /// </summary>
    public static Icon W => Wf ??= new Icon(IconFamily.Classic, IconStyle.Light, "w", "57");
    private static Icon? Wafflef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/waffle?f=classic&amp;s=light">Waffle</a>
    /// </summary>
    public static Icon Waffle => Wafflef ??= new Icon(IconFamily.Classic, IconStyle.Light, "waffle", "e466");
    private static Icon? WagonCoveredf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wagon-covered?f=classic&amp;s=light">Wagon Covered</a>
    /// </summary>
    public static Icon WagonCovered => WagonCoveredf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wagon-covered", "f8ee");
    private static Icon? Walkerf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/walker?f=classic&amp;s=light">Walker</a>
    /// </summary>
    public static Icon Walker => Walkerf ??= new Icon(IconFamily.Classic, IconStyle.Light, "walker", "f831");
    private static Icon? WalkieTalkief;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/walkie-talkie?f=classic&amp;s=light">Walkie Talkie</a>
    /// </summary>
    public static Icon WalkieTalkie => WalkieTalkief ??= new Icon(IconFamily.Classic, IconStyle.Light, "walkie-talkie", "f8ef");
    private static Icon? Walletf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wallet?f=classic&amp;s=light">Wallet</a>
    /// </summary>
    public static Icon Wallet => Walletf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wallet", "f555");
    private static Icon? Wandf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wand?f=classic&amp;s=light">Wand</a>
    /// </summary>
    public static Icon Wand => Wandf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wand", "f72a");
    private static Icon? WandMagicf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wand-magic?f=classic&amp;s=light">Wand Magic</a>
    /// </summary>
    public static Icon WandMagic => WandMagicf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wand-magic", "f0d0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wand-magic?f=classic&amp;s=light">Wand Magic</a>
    /// </summary>
    public static Icon Magic => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WandMagic;
    private static Icon? WandMagicSparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wand-magic-sparkles?f=classic&amp;s=light">Wand Magic Sparkles</a>
    /// </summary>
    public static Icon WandMagicSparkles => WandMagicSparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wand-magic-sparkles", "e2ca");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wand-magic-sparkles?f=classic&amp;s=light">Wand Magic Sparkles</a>
    /// </summary>
    public static Icon MagicWandSparkles => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WandMagicSparkles;
    private static Icon? WandSparklesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wand-sparkles?f=classic&amp;s=light">Wand Sparkles</a>
    /// </summary>
    public static Icon WandSparkles => WandSparklesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wand-sparkles", "f72b");
    private static Icon? Warehousef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/warehouse?f=classic&amp;s=light">Warehouse</a>
    /// </summary>
    public static Icon Warehouse => Warehousef ??= new Icon(IconFamily.Classic, IconStyle.Light, "warehouse", "f494");
    private static Icon? WarehouseFullf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/warehouse-full?f=classic&amp;s=light">Warehouse Full</a>
    /// </summary>
    public static Icon WarehouseFull => WarehouseFullf ??= new Icon(IconFamily.Classic, IconStyle.Light, "warehouse-full", "f495");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/warehouse-full?f=classic&amp;s=light">Warehouse Full</a>
    /// </summary>
    public static Icon WarehouseAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WarehouseFull;
    private static Icon? WashingMachinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/washing-machine?f=classic&amp;s=light">Washing Machine</a>
    /// </summary>
    public static Icon WashingMachine => WashingMachinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "washing-machine", "f898");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/washing-machine?f=classic&amp;s=light">Washing Machine</a>
    /// </summary>
    public static Icon Washer => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WashingMachine;
    private static Icon? Watchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/watch?f=classic&amp;s=light">Watch</a>
    /// </summary>
    public static Icon Watch => Watchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "watch", "f2e1");
    private static Icon? WatchApplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/watch-apple?f=classic&amp;s=light">Watch Apple</a>
    /// </summary>
    public static Icon WatchApple => WatchApplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "watch-apple", "e2cb");
    private static Icon? WatchCalculatorf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/watch-calculator?f=classic&amp;s=light">Watch Calculator</a>
    /// </summary>
    public static Icon WatchCalculator => WatchCalculatorf ??= new Icon(IconFamily.Classic, IconStyle.Light, "watch-calculator", "f8f0");
    private static Icon? WatchFitnessf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/watch-fitness?f=classic&amp;s=light">Watch Fitness</a>
    /// </summary>
    public static Icon WatchFitness => WatchFitnessf ??= new Icon(IconFamily.Classic, IconStyle.Light, "watch-fitness", "f63e");
    private static Icon? WatchSmartf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/watch-smart?f=classic&amp;s=light">Watch Smart</a>
    /// </summary>
    public static Icon WatchSmart => WatchSmartf ??= new Icon(IconFamily.Classic, IconStyle.Light, "watch-smart", "e2cc");
    private static Icon? Waterf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water?f=classic&amp;s=light">Water</a>
    /// </summary>
    public static Icon Water => Waterf ??= new Icon(IconFamily.Classic, IconStyle.Light, "water", "f773");
    private static Icon? WaterArrowDownf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-arrow-down?f=classic&amp;s=light">Water Arrow Down</a>
    /// </summary>
    public static Icon WaterArrowDown => WaterArrowDownf ??= new Icon(IconFamily.Classic, IconStyle.Light, "water-arrow-down", "f774");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-arrow-down?f=classic&amp;s=light">Water Arrow Down</a>
    /// </summary>
    public static Icon WaterLower => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WaterArrowDown;
    private static Icon? WaterArrowUpf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-arrow-up?f=classic&amp;s=light">Water Arrow Up</a>
    /// </summary>
    public static Icon WaterArrowUp => WaterArrowUpf ??= new Icon(IconFamily.Classic, IconStyle.Light, "water-arrow-up", "f775");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-arrow-up?f=classic&amp;s=light">Water Arrow Up</a>
    /// </summary>
    public static Icon WaterRise => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WaterArrowUp;
    private static Icon? WaterLadderf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-ladder?f=classic&amp;s=light">Water Ladder</a>
    /// </summary>
    public static Icon WaterLadder => WaterLadderf ??= new Icon(IconFamily.Classic, IconStyle.Light, "water-ladder", "f5c5");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-ladder?f=classic&amp;s=light">Water Ladder</a>
    /// </summary>
    public static Icon LadderWater => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WaterLadder;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/water-ladder?f=classic&amp;s=light">Water Ladder</a>
    /// </summary>
    public static Icon SwimmingPool => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WaterLadder;
    private static Icon? WatermelonSlicef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/watermelon-slice?f=classic&amp;s=light">Watermelon Slice</a>
    /// </summary>
    public static Icon WatermelonSlice => WatermelonSlicef ??= new Icon(IconFamily.Classic, IconStyle.Light, "watermelon-slice", "e337");
    private static Icon? Wavef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wave?f=classic&amp;s=light">Wave</a>
    /// </summary>
    public static Icon Wave => Wavef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wave", "e65b");
    private static Icon? WavePulsef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wave-pulse?f=classic&amp;s=light">Wave Pulse</a>
    /// </summary>
    public static Icon WavePulse => WavePulsef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wave-pulse", "f5f8");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wave-pulse?f=classic&amp;s=light">Wave Pulse</a>
    /// </summary>
    public static Icon HeartRate => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WavePulse;
    private static Icon? WaveSinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wave-sine?f=classic&amp;s=light">Wave Sine</a>
    /// </summary>
    public static Icon WaveSine => WaveSinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wave-sine", "f899");
    private static Icon? WaveSquaref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wave-square?f=classic&amp;s=light">Wave Square</a>
    /// </summary>
    public static Icon WaveSquare => WaveSquaref ??= new Icon(IconFamily.Classic, IconStyle.Light, "wave-square", "f83e");
    private static Icon? WaveTrianglef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wave-triangle?f=classic&amp;s=light">Wave Triangle</a>
    /// </summary>
    public static Icon WaveTriangle => WaveTrianglef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wave-triangle", "f89a");
    private static Icon? Waveformf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/waveform?f=classic&amp;s=light">Waveform</a>
    /// </summary>
    public static Icon Waveform => Waveformf ??= new Icon(IconFamily.Classic, IconStyle.Light, "waveform", "f8f1");
    private static Icon? WaveformLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/waveform-lines?f=classic&amp;s=light">Waveform Lines</a>
    /// </summary>
    public static Icon WaveformLines => WaveformLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "waveform-lines", "f8f2");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/waveform-lines?f=classic&amp;s=light">Waveform Lines</a>
    /// </summary>
    public static Icon WaveformPath => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WaveformLines;
    private static Icon? WavesSinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/waves-sine?f=classic&amp;s=light">Waves Sine</a>
    /// </summary>
    public static Icon WavesSine => WavesSinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "waves-sine", "e65d");
    private static Icon? Webhookf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/webhook?f=classic&amp;s=light">Webhook</a>
    /// </summary>
    public static Icon Webhook => Webhookf ??= new Icon(IconFamily.Classic, IconStyle.Light, "webhook", "e5d5");
    private static Icon? WeightHangingf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/weight-hanging?f=classic&amp;s=light">Weight Hanging</a>
    /// </summary>
    public static Icon WeightHanging => WeightHangingf ??= new Icon(IconFamily.Classic, IconStyle.Light, "weight-hanging", "f5cd");
    private static Icon? WeightScalef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/weight-scale?f=classic&amp;s=light">Weight Scale</a>
    /// </summary>
    public static Icon WeightScale => WeightScalef ??= new Icon(IconFamily.Classic, IconStyle.Light, "weight-scale", "f496");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/weight-scale?f=classic&amp;s=light">Weight Scale</a>
    /// </summary>
    public static Icon Weight => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WeightScale;
    private static Icon? Whalef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/whale?f=classic&amp;s=light">Whale</a>
    /// </summary>
    public static Icon Whale => Whalef ??= new Icon(IconFamily.Classic, IconStyle.Light, "whale", "f72c");
    private static Icon? Wheatf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheat?f=classic&amp;s=light">Wheat</a>
    /// </summary>
    public static Icon Wheat => Wheatf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheat", "f72d");
    private static Icon? WheatAwnf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheat-awn?f=classic&amp;s=light">Wheat Awn</a>
    /// </summary>
    public static Icon WheatAwn => WheatAwnf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheat-awn", "e2cd");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheat-awn?f=classic&amp;s=light">Wheat Awn</a>
    /// </summary>
    public static Icon WheatAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WheatAwn;
    private static Icon? WheatAwnCircleExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheat-awn-circle-exclamation?f=classic&amp;s=light">Wheat Awn Circle Exclamation</a>
    /// </summary>
    public static Icon WheatAwnCircleExclamation => WheatAwnCircleExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheat-awn-circle-exclamation", "e598");
    private static Icon? WheatAwnSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheat-awn-slash?f=classic&amp;s=light">Wheat Awn Slash</a>
    /// </summary>
    public static Icon WheatAwnSlash => WheatAwnSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheat-awn-slash", "e338");
    private static Icon? WheatSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheat-slash?f=classic&amp;s=light">Wheat Slash</a>
    /// </summary>
    public static Icon WheatSlash => WheatSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheat-slash", "e339");
    private static Icon? Wheelchairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheelchair?f=classic&amp;s=light">Wheelchair</a>
    /// </summary>
    public static Icon Wheelchair => Wheelchairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheelchair", "f193");
    private static Icon? WheelchairMovef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheelchair-move?f=classic&amp;s=light">Wheelchair Move</a>
    /// </summary>
    public static Icon WheelchairMove => WheelchairMovef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wheelchair-move", "e2ce");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wheelchair-move?f=classic&amp;s=light">Wheelchair Move</a>
    /// </summary>
    public static Icon WheelchairAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WheelchairMove;
    private static Icon? WhiskeyGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/whiskey-glass?f=classic&amp;s=light">Whiskey Glass</a>
    /// </summary>
    public static Icon WhiskeyGlass => WhiskeyGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "whiskey-glass", "f7a0");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/whiskey-glass?f=classic&amp;s=light">Whiskey Glass</a>
    /// </summary>
    public static Icon GlassWhiskey => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WhiskeyGlass;
    private static Icon? WhiskeyGlassIcef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/whiskey-glass-ice?f=classic&amp;s=light">Whiskey Glass Ice</a>
    /// </summary>
    public static Icon WhiskeyGlassIce => WhiskeyGlassIcef ??= new Icon(IconFamily.Classic, IconStyle.Light, "whiskey-glass-ice", "f7a1");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/whiskey-glass-ice?f=classic&amp;s=light">Whiskey Glass Ice</a>
    /// </summary>
    public static Icon GlassWhiskeyRocks => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WhiskeyGlassIce;
    private static Icon? Whistlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/whistle?f=classic&amp;s=light">Whistle</a>
    /// </summary>
    public static Icon Whistle => Whistlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "whistle", "f460");
    private static Icon? Wifif;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi?f=classic&amp;s=light">Wifi</a>
    /// </summary>
    public static Icon Wifi => Wifif ??= new Icon(IconFamily.Classic, IconStyle.Light, "wifi", "f1eb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi?f=classic&amp;s=light">Wifi</a>
    /// </summary>
    public static Icon Wifi3 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Wifi;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi?f=classic&amp;s=light">Wifi</a>
    /// </summary>
    public static Icon WifiStrong => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Wifi;
    private static Icon? WifiExclamationf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi-exclamation?f=classic&amp;s=light">Wifi Exclamation</a>
    /// </summary>
    public static Icon WifiExclamation => WifiExclamationf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wifi-exclamation", "e2cf");
    private static Icon? WifiFairf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi-fair?f=classic&amp;s=light">Wifi Fair</a>
    /// </summary>
    public static Icon WifiFair => WifiFairf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wifi-fair", "f6ab");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi-fair?f=classic&amp;s=light">Wifi Fair</a>
    /// </summary>
    public static Icon Wifi2 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WifiFair;
    private static Icon? WifiSlashf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi-slash?f=classic&amp;s=light">Wifi Slash</a>
    /// </summary>
    public static Icon WifiSlash => WifiSlashf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wifi-slash", "f6ac");
    private static Icon? WifiWeakf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi-weak?f=classic&amp;s=light">Wifi Weak</a>
    /// </summary>
    public static Icon WifiWeak => WifiWeakf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wifi-weak", "f6aa");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wifi-weak?f=classic&amp;s=light">Wifi Weak</a>
    /// </summary>
    public static Icon Wifi1 => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WifiWeak;
    private static Icon? Windf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wind?f=classic&amp;s=light">Wind</a>
    /// </summary>
    public static Icon Wind => Windf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wind", "f72e");
    private static Icon? WindTurbinef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wind-turbine?f=classic&amp;s=light">Wind Turbine</a>
    /// </summary>
    public static Icon WindTurbine => WindTurbinef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wind-turbine", "f89b");
    private static Icon? WindWarningf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wind-warning?f=classic&amp;s=light">Wind Warning</a>
    /// </summary>
    public static Icon WindWarning => WindWarningf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wind-warning", "f776");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wind-warning?f=classic&amp;s=light">Wind Warning</a>
    /// </summary>
    public static Icon WindCircleExclamation => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WindWarning;
    private static Icon? Windowf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window?f=classic&amp;s=light">Window</a>
    /// </summary>
    public static Icon Window => Windowf ??= new Icon(IconFamily.Classic, IconStyle.Light, "window", "f40e");
    private static Icon? WindowFlipf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-flip?f=classic&amp;s=light">Window Flip</a>
    /// </summary>
    public static Icon WindowFlip => WindowFlipf ??= new Icon(IconFamily.Classic, IconStyle.Light, "window-flip", "f40f");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-flip?f=classic&amp;s=light">Window Flip</a>
    /// </summary>
    public static Icon WindowAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WindowFlip;
    private static Icon? WindowFramef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-frame?f=classic&amp;s=light">Window Frame</a>
    /// </summary>
    public static Icon WindowFrame => WindowFramef ??= new Icon(IconFamily.Classic, IconStyle.Light, "window-frame", "e04f");
    private static Icon? WindowFrameOpenf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-frame-open?f=classic&amp;s=light">Window Frame Open</a>
    /// </summary>
    public static Icon WindowFrameOpen => WindowFrameOpenf ??= new Icon(IconFamily.Classic, IconStyle.Light, "window-frame-open", "e050");
    private static Icon? WindowMaximizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-maximize?f=classic&amp;s=light">Window Maximize</a>
    /// </summary>
    public static Icon WindowMaximize => WindowMaximizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "window-maximize", "f2d0");
    private static Icon? WindowMinimizef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-minimize?f=classic&amp;s=light">Window Minimize</a>
    /// </summary>
    public static Icon WindowMinimize => WindowMinimizef ??= new Icon(IconFamily.Classic, IconStyle.Light, "window-minimize", "f2d1");
    private static Icon? WindowRestoref;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/window-restore?f=classic&amp;s=light">Window Restore</a>
    /// </summary>
    public static Icon WindowRestore => WindowRestoref ??= new Icon(IconFamily.Classic, IconStyle.Light, "window-restore", "f2d2");
    private static Icon? Windsockf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/windsock?f=classic&amp;s=light">Windsock</a>
    /// </summary>
    public static Icon Windsock => Windsockf ??= new Icon(IconFamily.Classic, IconStyle.Light, "windsock", "f777");
    private static Icon? WineBottlef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wine-bottle?f=classic&amp;s=light">Wine Bottle</a>
    /// </summary>
    public static Icon WineBottle => WineBottlef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wine-bottle", "f72f");
    private static Icon? WineGlassf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wine-glass?f=classic&amp;s=light">Wine Glass</a>
    /// </summary>
    public static Icon WineGlass => WineGlassf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wine-glass", "f4e3");
    private static Icon? WineGlassCrackf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wine-glass-crack?f=classic&amp;s=light">Wine Glass Crack</a>
    /// </summary>
    public static Icon WineGlassCrack => WineGlassCrackf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wine-glass-crack", "f4bb");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wine-glass-crack?f=classic&amp;s=light">Wine Glass Crack</a>
    /// </summary>
    public static Icon Fragile => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WineGlassCrack;
    private static Icon? WineGlassEmptyf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wine-glass-empty?f=classic&amp;s=light">Wine Glass Empty</a>
    /// </summary>
    public static Icon WineGlassEmpty => WineGlassEmptyf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wine-glass-empty", "f5ce");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wine-glass-empty?f=classic&amp;s=light">Wine Glass Empty</a>
    /// </summary>
    public static Icon WineGlassAlt => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WineGlassEmpty;
    private static Icon? WonSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/won-sign?f=classic&amp;s=light">Won Sign</a>
    /// </summary>
    public static Icon WonSign => WonSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "won-sign", "f159");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/won-sign?f=classic&amp;s=light">Won Sign</a>
    /// </summary>
    public static Icon Krw => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WonSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/won-sign?f=classic&amp;s=light">Won Sign</a>
    /// </summary>
    public static Icon Won => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.WonSign;
    private static Icon? Wormf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/worm?f=classic&amp;s=light">Worm</a>
    /// </summary>
    public static Icon Worm => Wormf ??= new Icon(IconFamily.Classic, IconStyle.Light, "worm", "e599");
    private static Icon? Wreathf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wreath?f=classic&amp;s=light">Wreath</a>
    /// </summary>
    public static Icon Wreath => Wreathf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wreath", "f7e2");
    private static Icon? WreathLaurelf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wreath-laurel?f=classic&amp;s=light">Wreath Laurel</a>
    /// </summary>
    public static Icon WreathLaurel => WreathLaurelf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wreath-laurel", "e5d2");
    private static Icon? Wrenchf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wrench?f=classic&amp;s=light">Wrench</a>
    /// </summary>
    public static Icon Wrench => Wrenchf ??= new Icon(IconFamily.Classic, IconStyle.Light, "wrench", "f0ad");
    private static Icon? WrenchSimplef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/wrench-simple?f=classic&amp;s=light">Wrench Simple</a>
    /// </summary>
    public static Icon WrenchSimple => WrenchSimplef ??= new Icon(IconFamily.Classic, IconStyle.Light, "wrench-simple", "e2d1");
    private static Icon? Xf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/x?f=classic&amp;s=light">X</a>
    /// </summary>
    public static Icon X => Xf ??= new Icon(IconFamily.Classic, IconStyle.Light, "x", "58");
    private static Icon? XRayf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/x-ray?f=classic&amp;s=light">X Ray</a>
    /// </summary>
    public static Icon XRay => XRayf ??= new Icon(IconFamily.Classic, IconStyle.Light, "x-ray", "f497");
    private static Icon? Xmarkf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark?f=classic&amp;s=light">Xmark</a>
    /// </summary>
    public static Icon Xmark => Xmarkf ??= new Icon(IconFamily.Classic, IconStyle.Light, "xmark", "f00d");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark?f=classic&amp;s=light">Xmark</a>
    /// </summary>
    public static Icon Close => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Xmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark?f=classic&amp;s=light">Xmark</a>
    /// </summary>
    public static Icon Multiply => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Xmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark?f=classic&amp;s=light">Xmark</a>
    /// </summary>
    public static Icon Remove => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Xmark;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark?f=classic&amp;s=light">Xmark</a>
    /// </summary>
    public static Icon Times => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.Xmark;
    private static Icon? XmarkLargef;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark-large?f=classic&amp;s=light">Xmark Large</a>
    /// </summary>
    public static Icon XmarkLarge => XmarkLargef ??= new Icon(IconFamily.Classic, IconStyle.Light, "xmark-large", "e59b");
    private static Icon? XmarkToSlotf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark-to-slot?f=classic&amp;s=light">Xmark To Slot</a>
    /// </summary>
    public static Icon XmarkToSlot => XmarkToSlotf ??= new Icon(IconFamily.Classic, IconStyle.Light, "xmark-to-slot", "f771");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark-to-slot?f=classic&amp;s=light">Xmark To Slot</a>
    /// </summary>
    public static Icon TimesToSlot => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.XmarkToSlot;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmark-to-slot?f=classic&amp;s=light">Xmark To Slot</a>
    /// </summary>
    public static Icon VoteNay => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.XmarkToSlot;
    private static Icon? XmarksLinesf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/xmarks-lines?f=classic&amp;s=light">Xmarks Lines</a>
    /// </summary>
    public static Icon XmarksLines => XmarksLinesf ??= new Icon(IconFamily.Classic, IconStyle.Light, "xmarks-lines", "e59a");
    private static Icon? Yf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/y?f=classic&amp;s=light">Y</a>
    /// </summary>
    public static Icon Y => Yf ??= new Icon(IconFamily.Classic, IconStyle.Light, "y", "59");
    private static Icon? YenSignf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/yen-sign?f=classic&amp;s=light">Yen Sign</a>
    /// </summary>
    public static Icon YenSign => YenSignf ??= new Icon(IconFamily.Classic, IconStyle.Light, "yen-sign", "f157");
    /// <summary>
    /// <a href="https://fontawesome.com/icons/yen-sign?f=classic&amp;s=light">Yen Sign</a>
    /// </summary>
    public static Icon Cny => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.YenSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/yen-sign?f=classic&amp;s=light">Yen Sign</a>
    /// </summary>
    public static Icon Jpy => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.YenSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/yen-sign?f=classic&amp;s=light">Yen Sign</a>
    /// </summary>
    public static Icon Rmb => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.YenSign;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/yen-sign?f=classic&amp;s=light">Yen Sign</a>
    /// </summary>
    public static Icon Yen => global::Rocket.Surgery.Blazor.FontAwesome6.Pro.FaLight.YenSign;
    private static Icon? YinYangf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/yin-yang?f=classic&amp;s=light">Yin Yang</a>
    /// </summary>
    public static Icon YinYang => YinYangf ??= new Icon(IconFamily.Classic, IconStyle.Light, "yin-yang", "f6ad");
    private static Icon? Zf;
    /// <summary>
    /// <a href="https://fontawesome.com/icons/z?f=classic&amp;s=light">Z</a>
    /// </summary>
    public static Icon Z => Zf ??= new Icon(IconFamily.Classic, IconStyle.Light, "z", "5a");
}